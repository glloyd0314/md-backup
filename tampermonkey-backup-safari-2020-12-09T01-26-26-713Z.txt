{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Youtube独轮车-Auto Youtube Chat Sender","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://www.youtube.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1604009329456,"data":{}},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/412464-youtube%E7%8B%AC%E8%BD%AE%E8%BD%A6-auto-youtube-chat-sender/code/Youtube%E7%8B%AC%E8%BD%AE%E8%BD%A6-Auto%20Youtube%20Chat%20Sender.user.js","uuid":"eb2c0131-9b21-4d20-b245-4ed715a063ac","source":""},{"name":"YouTube聊天观察哨","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://www.youtube.com/live_chat*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1605704978511,"data":{"messageDeletedEvent":"sUCjUKTkLVGxlS5Y1AIC7NVog|CjsKGkNNUzd0cEtWak8wQ0ZZSlRnd29kX05jQ01nEh1DSVB5cl9lRmpPMENGY2pkeEFvZHRINEZBdzEzNA%3D%3D"}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/414521-youtube%E8%81%8A%E5%A4%A9%E8%A7%82%E5%AF%9F%E5%93%A8/code/YouTube%E8%81%8A%E5%A4%A9%E8%A7%82%E5%AF%9F%E5%93%A8.user.js","uuid":"9cc5a4d4-2fa6-458a-9ab8-eda37a82d999","source":"","requires":[{"meta":{"name":"vue.global.prod.js","url":"https://cdn.jsdelivr.net/npm/vue@3.0.2/dist/vue.global.prod.js","ts":1606422345268,"mimetype":"text/javascript"},"source":"dmFyIFZ1ZT1mdW5jdGlvbihlKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gdChlLHQpe2NvbnN0IG49T2JqZWN0LmNyZWF0ZShudWxsKSxvPWUuc3BsaXQoIiwiKTtmb3IobGV0IGU9MDtlPG8ubGVuZ3RoO2UrKyluW29bZV1dPSEwO3JldHVybiB0P2U9PiEhbltlLnRvTG93ZXJDYXNlKCldOmU9PiEhbltlXX1jb25zdCBuPXsxOiJURVhUIiwyOiJDTEFTUyIsNDoiU1RZTEUiLDg6IlBST1BTIiwxNjoiRlVMTF9QUk9QUyIsMzI6IkhZRFJBVEVfRVZFTlRTIiw2NDoiU1RBQkxFX0ZSQUdNRU5UIiwxMjg6IktFWUVEX0ZSQUdNRU5UIiwyNTY6IlVOS0VZRURfRlJBR01FTlQiLDEwMjQ6IkRZTkFNSUNfU0xPVFMiLDUxMjoiTkVFRF9QQVRDSCIsWy0xXToiSE9JU1RFRCIsWy0yXToiQkFJTCJ9LG89dCgiSW5maW5pdHksdW5kZWZpbmVkLE5hTixpc0Zpbml0ZSxpc05hTixwYXJzZUZsb2F0LHBhcnNlSW50LGRlY29kZVVSSSxkZWNvZGVVUklDb21wb25lbnQsZW5jb2RlVVJJLGVuY29kZVVSSUNvbXBvbmVudCxNYXRoLE51bWJlcixEYXRlLEFycmF5LE9iamVjdCxCb29sZWFuLFN0cmluZyxSZWdFeHAsTWFwLFNldCxKU09OLEludGwiKSxyPXQoIml0ZW1zY29wZSxhbGxvd2Z1bGxzY3JlZW4sZm9ybW5vdmFsaWRhdGUsaXNtYXAsbm9tb2R1bGUsbm92YWxpZGF0ZSxyZWFkb25seSIpO2Z1bmN0aW9uIHMoZSl7aWYoTihlKSl7Y29uc3QgdD17fTtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl7Y29uc3Qgbz1lW25dLHI9cyhNKG8pP2Mobyk6byk7aWYocilmb3IoY29uc3QgZSBpbiByKXRbZV09cltlXX1yZXR1cm4gdH1pZihSKGUpKXJldHVybiBlfWNvbnN0IGk9LzsoPyFbXihdKlwpKS9nLGw9LzooLispLztmdW5jdGlvbiBjKGUpe2NvbnN0IHQ9e307cmV0dXJuIGUuc3BsaXQoaSkuZm9yRWFjaChlPT57aWYoZSl7Y29uc3Qgbj1lLnNwbGl0KGwpO24ubGVuZ3RoPjEmJih0W25bMF0udHJpbSgpXT1uWzFdLnRyaW0oKSl9fSksdH1mdW5jdGlvbiBhKGUpe2xldCB0PSIiO2lmKE0oZSkpdD1lO2Vsc2UgaWYoTihlKSlmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl0Kz1hKGVbbl0pKyIgIjtlbHNlIGlmKFIoZSkpZm9yKGNvbnN0IG4gaW4gZSllW25dJiYodCs9bisiICIpO3JldHVybiB0LnRyaW0oKX1jb25zdCB1PXQoImh0bWwsYm9keSxiYXNlLGhlYWQsbGluayxtZXRhLHN0eWxlLHRpdGxlLGFkZHJlc3MsYXJ0aWNsZSxhc2lkZSxmb290ZXIsaGVhZGVyLGgxLGgyLGgzLGg0LGg1LGg2LGhncm91cCxuYXYsc2VjdGlvbixkaXYsZGQsZGwsZHQsZmlnY2FwdGlvbixmaWd1cmUscGljdHVyZSxocixpbWcsbGksbWFpbixvbCxwLHByZSx1bCxhLGIsYWJicixiZGksYmRvLGJyLGNpdGUsY29kZSxkYXRhLGRmbixlbSxpLGtiZCxtYXJrLHEscnAscnQscnRjLHJ1YnkscyxzYW1wLHNtYWxsLHNwYW4sc3Ryb25nLHN1YixzdXAsdGltZSx1LHZhcix3YnIsYXJlYSxhdWRpbyxtYXAsdHJhY2ssdmlkZW8sZW1iZWQsb2JqZWN0LHBhcmFtLHNvdXJjZSxjYW52YXMsc2NyaXB0LG5vc2NyaXB0LGRlbCxpbnMsY2FwdGlvbixjb2wsY29sZ3JvdXAsdGFibGUsdGhlYWQsdGJvZHksdGQsdGgsdHIsYnV0dG9uLGRhdGFsaXN0LGZpZWxkc2V0LGZvcm0saW5wdXQsbGFiZWwsbGVnZW5kLG1ldGVyLG9wdGdyb3VwLG9wdGlvbixvdXRwdXQscHJvZ3Jlc3Msc2VsZWN0LHRleHRhcmVhLGRldGFpbHMsZGlhbG9nLG1lbnUsc3VtbWFyeSx0ZW1wbGF0ZSxibG9ja3F1b3RlLGlmcmFtZSx0Zm9vdCIpLHA9dCgic3ZnLGFuaW1hdGUsYW5pbWF0ZU1vdGlvbixhbmltYXRlVHJhbnNmb3JtLGNpcmNsZSxjbGlwUGF0aCxjb2xvci1wcm9maWxlLGRlZnMsZGVzYyxkaXNjYXJkLGVsbGlwc2UsZmVCbGVuZCxmZUNvbG9yTWF0cml4LGZlQ29tcG9uZW50VHJhbnNmZXIsZmVDb21wb3NpdGUsZmVDb252b2x2ZU1hdHJpeCxmZURpZmZ1c2VMaWdodGluZyxmZURpc3BsYWNlbWVudE1hcCxmZURpc3RhbmNlTGlnaHQsZmVEcm9wU2hhZG93LGZlRmxvb2QsZmVGdW5jQSxmZUZ1bmNCLGZlRnVuY0csZmVGdW5jUixmZUdhdXNzaWFuQmx1cixmZUltYWdlLGZlTWVyZ2UsZmVNZXJnZU5vZGUsZmVNb3JwaG9sb2d5LGZlT2Zmc2V0LGZlUG9pbnRMaWdodCxmZVNwZWN1bGFyTGlnaHRpbmcsZmVTcG90TGlnaHQsZmVUaWxlLGZlVHVyYnVsZW5jZSxmaWx0ZXIsZm9yZWlnbk9iamVjdCxnLGhhdGNoLGhhdGNocGF0aCxpbWFnZSxsaW5lLGxpbmVhckdyYWRpZW50LG1hcmtlcixtYXNrLG1lc2gsbWVzaGdyYWRpZW50LG1lc2hwYXRjaCxtZXNocm93LG1ldGFkYXRhLG1wYXRoLHBhdGgscGF0dGVybixwb2x5Z29uLHBvbHlsaW5lLHJhZGlhbEdyYWRpZW50LHJlY3Qsc2V0LHNvbGlkY29sb3Isc3RvcCxzd2l0Y2gsc3ltYm9sLHRleHQsdGV4dFBhdGgsdGl0bGUsdHNwYW4sdW5rbm93bix1c2UsdmlldyIpLGY9dCgiYXJlYSxiYXNlLGJyLGNvbCxlbWJlZCxocixpbWcsaW5wdXQsbGluayxtZXRhLHBhcmFtLHNvdXJjZSx0cmFjayx3YnIiKTtmdW5jdGlvbiBkKGUsdCl7aWYoZT09PXQpcmV0dXJuITA7bGV0IG49JChlKSxvPSQodCk7aWYobnx8bylyZXR1cm4hKCFufHwhbykmJmUuZ2V0VGltZSgpPT09dC5nZXRUaW1lKCk7aWYobj1OKGUpLG89Tih0KSxufHxvKXJldHVybiEoIW58fCFvKSYmZnVuY3Rpb24oZSx0KXtpZihlLmxlbmd0aCE9PXQubGVuZ3RoKXJldHVybiExO2xldCBuPSEwO2ZvcihsZXQgbz0wO24mJm88ZS5sZW5ndGg7bysrKW49ZChlW29dLHRbb10pO3JldHVybiBufShlLHQpO2lmKG49UihlKSxvPVIodCksbnx8byl7aWYoIW58fCFvKXJldHVybiExO2lmKE9iamVjdC5rZXlzKGUpLmxlbmd0aCE9PU9iamVjdC5rZXlzKHQpLmxlbmd0aClyZXR1cm4hMTtmb3IoY29uc3QgbiBpbiBlKXtjb25zdCBvPWUuaGFzT3duUHJvcGVydHkobikscj10Lmhhc093blByb3BlcnR5KG4pO2lmKG8mJiFyfHwhbyYmcnx8IWQoZVtuXSx0W25dKSlyZXR1cm4hMX19cmV0dXJuIFN0cmluZyhlKT09PVN0cmluZyh0KX1mdW5jdGlvbiBoKGUsdCl7cmV0dXJuIGUuZmluZEluZGV4KGU9PmQoZSx0KSl9Y29uc3QgbT0oZSx0KT0+RSh0KT97W2BNYXAoJHt0LnNpemV9KWBdOlsuLi50LmVudHJpZXMoKV0ucmVkdWNlKChlLFt0LG5dKT0+KGVbdCsiID0+Il09bixlKSx7fSl9OkYodCk/e1tgU2V0KCR7dC5zaXplfSlgXTpbLi4udC52YWx1ZXMoKV19OiFSKHQpfHxOKHQpfHxMKHQpP3Q6U3RyaW5nKHQpLGc9e30sdj1bXSx5PSgpPT57fSxiPSgpPT4hMSxfPS9eb25bXmEtel0vLHg9ZT0+Xy50ZXN0KGUpLFM9ZT0+ZS5zdGFydHNXaXRoKCJvblVwZGF0ZToiKSxDPU9iamVjdC5hc3NpZ24saz0oZSx0KT0+e2NvbnN0IG49ZS5pbmRleE9mKHQpO24+LTEmJmUuc3BsaWNlKG4sMSl9LHc9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxUPShlLHQpPT53LmNhbGwoZSx0KSxOPUFycmF5LmlzQXJyYXksRT1lPT4iW29iamVjdCBNYXBdIj09PUkoZSksRj1lPT4iW29iamVjdCBTZXRdIj09PUkoZSksJD1lPT5lIGluc3RhbmNlb2YgRGF0ZSxBPWU9PiJmdW5jdGlvbiI9PXR5cGVvZiBlLE09ZT0+InN0cmluZyI9PXR5cGVvZiBlLE89ZT0+InN5bWJvbCI9PXR5cGVvZiBlLFI9ZT0+bnVsbCE9PWUmJiJvYmplY3QiPT10eXBlb2YgZSxCPWU9PlIoZSkmJkEoZS50aGVuKSYmQShlLmNhdGNoKSxQPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsST1lPT5QLmNhbGwoZSksTD1lPT4iW29iamVjdCBPYmplY3RdIj09PUkoZSksVj1lPT5NKGUpJiYiTmFOIiE9PWUmJiItIiE9PWVbMF0mJiIiK3BhcnNlSW50KGUsMTApPT09ZSxVPXQoIixrZXkscmVmLG9uVm5vZGVCZWZvcmVNb3VudCxvblZub2RlTW91bnRlZCxvblZub2RlQmVmb3JlVXBkYXRlLG9uVm5vZGVVcGRhdGVkLG9uVm5vZGVCZWZvcmVVbm1vdW50LG9uVm5vZGVVbm1vdW50ZWQiKSxqPWU9Pntjb25zdCB0PU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIG49PnRbbl18fCh0W25dPWUobikpfSxEPS8tKFx3KS9nLEg9aihlPT5lLnJlcGxhY2UoRCwoZSx0KT0+dD90LnRvVXBwZXJDYXNlKCk6IiIpKSx6PS9cQihbQS1aXSkvZyxLPWooZT0+ZS5yZXBsYWNlKHosIi0kMSIpLnRvTG93ZXJDYXNlKCkpLFc9aihlPT5lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpLEc9aihlPT5lPyJvbiIrVyhlKToiIikscT0oZSx0KT0+ZSE9PXQmJihlPT1lfHx0PT10KSxKPShlLHQpPT57Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspZVtuXSh0KX0sWT0oZSx0LG4pPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsdmFsdWU6bn0pfSxaPWU9Pntjb25zdCB0PXBhcnNlRmxvYXQoZSk7cmV0dXJuIGlzTmFOKHQpP2U6dH0sUT1uZXcgV2Vha01hcCxYPVtdO2xldCBlZTtjb25zdCB0ZT1TeW1ib2woIiIpLG5lPVN5bWJvbCgiIik7ZnVuY3Rpb24gb2UoZSx0PWcpeyhmdW5jdGlvbihlKXtyZXR1cm4gZSYmITA9PT1lLl9pc0VmZmVjdH0pKGUpJiYoZT1lLnJhdyk7Y29uc3Qgbj1mdW5jdGlvbihlLHQpe2NvbnN0IG49ZnVuY3Rpb24oKXtpZighbi5hY3RpdmUpcmV0dXJuIHQuc2NoZWR1bGVyP3ZvaWQgMDplKCk7aWYoIVguaW5jbHVkZXMobikpe2llKG4pO3RyeXtyZXR1cm4gY2UucHVzaChsZSksbGU9ITAsWC5wdXNoKG4pLGVlPW4sZSgpfWZpbmFsbHl7WC5wb3AoKSx1ZSgpLGVlPVhbWC5sZW5ndGgtMV19fX07cmV0dXJuIG4uaWQ9c2UrKyxuLmFsbG93UmVjdXJzZT0hIXQuYWxsb3dSZWN1cnNlLG4uX2lzRWZmZWN0PSEwLG4uYWN0aXZlPSEwLG4ucmF3PWUsbi5kZXBzPVtdLG4ub3B0aW9ucz10LG59KGUsdCk7cmV0dXJuIHQubGF6eXx8bigpLG59ZnVuY3Rpb24gcmUoZSl7ZS5hY3RpdmUmJihpZShlKSxlLm9wdGlvbnMub25TdG9wJiZlLm9wdGlvbnMub25TdG9wKCksZS5hY3RpdmU9ITEpfWxldCBzZT0wO2Z1bmN0aW9uIGllKGUpe2NvbnN0e2RlcHM6dH09ZTtpZih0Lmxlbmd0aCl7Zm9yKGxldCBuPTA7bjx0Lmxlbmd0aDtuKyspdFtuXS5kZWxldGUoZSk7dC5sZW5ndGg9MH19bGV0IGxlPSEwO2NvbnN0IGNlPVtdO2Z1bmN0aW9uIGFlKCl7Y2UucHVzaChsZSksbGU9ITF9ZnVuY3Rpb24gdWUoKXtjb25zdCBlPWNlLnBvcCgpO2xlPXZvaWQgMD09PWV8fGV9ZnVuY3Rpb24gcGUoZSx0LG4pe2lmKCFsZXx8dm9pZCAwPT09ZWUpcmV0dXJuO2xldCBvPVEuZ2V0KGUpO298fFEuc2V0KGUsbz1uZXcgTWFwKTtsZXQgcj1vLmdldChuKTtyfHxvLnNldChuLHI9bmV3IFNldCksci5oYXMoZWUpfHwoci5hZGQoZWUpLGVlLmRlcHMucHVzaChyKSl9ZnVuY3Rpb24gZmUoZSx0LG4sbyxyLHMpe2NvbnN0IGk9US5nZXQoZSk7aWYoIWkpcmV0dXJuO2NvbnN0IGw9bmV3IFNldCxjPWU9PntlJiZlLmZvckVhY2goZT0+eyhlIT09ZWV8fGUuYWxsb3dSZWN1cnNlKSYmbC5hZGQoZSl9KX07aWYoImNsZWFyIj09PXQpaS5mb3JFYWNoKGMpO2Vsc2UgaWYoImxlbmd0aCI9PT1uJiZOKGUpKWkuZm9yRWFjaCgoZSx0KT0+eygibGVuZ3RoIj09PXR8fHQ+PW8pJiZjKGUpfSk7ZWxzZSBzd2l0Y2godm9pZCAwIT09biYmYyhpLmdldChuKSksdCl7Y2FzZSJhZGQiOk4oZSk/VihuKSYmYyhpLmdldCgibGVuZ3RoIikpOihjKGkuZ2V0KHRlKSksRShlKSYmYyhpLmdldChuZSkpKTticmVhaztjYXNlImRlbGV0ZSI6TihlKXx8KGMoaS5nZXQodGUpKSxFKGUpJiZjKGkuZ2V0KG5lKSkpO2JyZWFrO2Nhc2Uic2V0IjpFKGUpJiZjKGkuZ2V0KHRlKSl9bC5mb3JFYWNoKGU9PntlLm9wdGlvbnMuc2NoZWR1bGVyP2Uub3B0aW9ucy5zY2hlZHVsZXIoZSk6ZSgpfSl9Y29uc3QgZGU9bmV3IFNldChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhTeW1ib2wpLm1hcChlPT5TeW1ib2xbZV0pLmZpbHRlcihPKSksaGU9YmUoKSxtZT1iZSghMSwhMCksZ2U9YmUoITApLHZlPWJlKCEwLCEwKSx5ZT17fTtmdW5jdGlvbiBiZShlPSExLHQ9ITEpe3JldHVybiBmdW5jdGlvbihuLG8scil7aWYoIl9fdl9pc1JlYWN0aXZlIj09PW8pcmV0dXJuIWU7aWYoIl9fdl9pc1JlYWRvbmx5Ij09PW8pcmV0dXJuIGU7aWYoIl9fdl9yYXciPT09byYmcj09PShlP0dlOldlKS5nZXQobikpcmV0dXJuIG47Y29uc3Qgcz1OKG4pO2lmKHMmJlQoeWUsbykpcmV0dXJuIFJlZmxlY3QuZ2V0KHllLG8scik7Y29uc3QgaT1SZWZsZWN0LmdldChuLG8scik7aWYoTyhvKT9kZS5oYXMobyk6Il9fcHJvdG9fXyI9PT1vfHwiX192X2lzUmVmIj09PW8pcmV0dXJuIGk7aWYoZXx8cGUobiwwLG8pLHQpcmV0dXJuIGk7aWYocnQoaSkpe3JldHVybiFzfHwhVihvKT9pLnZhbHVlOml9cmV0dXJuIFIoaSk/ZT9aZShpKTpKZShpKTppfX1bImluY2x1ZGVzIiwiaW5kZXhPZiIsImxhc3RJbmRleE9mIl0uZm9yRWFjaChlPT57Y29uc3QgdD1BcnJheS5wcm90b3R5cGVbZV07eWVbZV09ZnVuY3Rpb24oLi4uZSl7Y29uc3Qgbj1udCh0aGlzKTtmb3IobGV0IGU9MCx0PXRoaXMubGVuZ3RoO2U8dDtlKyspcGUobiwwLGUrIiIpO2NvbnN0IG89dC5hcHBseShuLGUpO3JldHVybi0xPT09b3x8ITE9PT1vP3QuYXBwbHkobixlLm1hcChudCkpOm99fSksWyJwdXNoIiwicG9wIiwic2hpZnQiLCJ1bnNoaWZ0Iiwic3BsaWNlIl0uZm9yRWFjaChlPT57Y29uc3QgdD1BcnJheS5wcm90b3R5cGVbZV07eWVbZV09ZnVuY3Rpb24oLi4uZSl7YWUoKTtjb25zdCBuPXQuYXBwbHkodGhpcyxlKTtyZXR1cm4gdWUoKSxufX0pO2Z1bmN0aW9uIF9lKGU9ITEpe3JldHVybiBmdW5jdGlvbih0LG4sbyxyKXtjb25zdCBzPXRbbl07aWYoIWUmJihvPW50KG8pLCFOKHQpJiZydChzKSYmIXJ0KG8pKSlyZXR1cm4gcy52YWx1ZT1vLCEwO2NvbnN0IGk9Tih0KSYmVihuKT9OdW1iZXIobik8dC5sZW5ndGg6VCh0LG4pLGw9UmVmbGVjdC5zZXQodCxuLG8scik7cmV0dXJuIHQ9PT1udChyKSYmKGk/cShvLHMpJiZmZSh0LCJzZXQiLG4sbyk6ZmUodCwiYWRkIixuLG8pKSxsfX1jb25zdCB4ZT17Z2V0OmhlLHNldDpfZSgpLGRlbGV0ZVByb3BlcnR5OmZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1UKGUsdCksbz1SZWZsZWN0LmRlbGV0ZVByb3BlcnR5KGUsdCk7cmV0dXJuIG8mJm4mJmZlKGUsImRlbGV0ZSIsdCx2b2lkIDApLG99LGhhczpmdW5jdGlvbihlLHQpe2NvbnN0IG49UmVmbGVjdC5oYXMoZSx0KTtyZXR1cm4gTyh0KSYmZGUuaGFzKHQpfHxwZShlLDAsdCksbn0sb3duS2V5czpmdW5jdGlvbihlKXtyZXR1cm4gcGUoZSwwLE4oZSk/Imxlbmd0aCI6dGUpLFJlZmxlY3Qub3duS2V5cyhlKX19LFNlPXtnZXQ6Z2Usc2V0OihlLHQpPT4hMCxkZWxldGVQcm9wZXJ0eTooZSx0KT0+ITB9LENlPUMoe30seGUse2dldDptZSxzZXQ6X2UoITApfSksa2U9Qyh7fSxTZSx7Z2V0OnZlfSksd2U9ZT0+UihlKT9KZShlKTplLFRlPWU9PlIoZSk/WmUoZSk6ZSxOZT1lPT5lLEVlPWU9PlJlZmxlY3QuZ2V0UHJvdG90eXBlT2YoZSk7ZnVuY3Rpb24gRmUoZSx0LG49ITEsbz0hMSl7Y29uc3Qgcj1udChlPWUuX192X3Jhdykscz1udCh0KTt0IT09cyYmIW4mJnBlKHIsMCx0KSwhbiYmcGUociwwLHMpO2NvbnN0e2hhczppfT1FZShyKSxsPW4/VGU6bz9OZTp3ZTtyZXR1cm4gaS5jYWxsKHIsdCk/bChlLmdldCh0KSk6aS5jYWxsKHIscyk/bChlLmdldChzKSk6dm9pZCAwfWZ1bmN0aW9uICRlKGUsdD0hMSl7Y29uc3Qgbj10aGlzLl9fdl9yYXcsbz1udChuKSxyPW50KGUpO3JldHVybiBlIT09ciYmIXQmJnBlKG8sMCxlKSwhdCYmcGUobywwLHIpLGU9PT1yP24uaGFzKGUpOm4uaGFzKGUpfHxuLmhhcyhyKX1mdW5jdGlvbiBBZShlLHQ9ITEpe3JldHVybiBlPWUuX192X3JhdywhdCYmcGUobnQoZSksMCx0ZSksUmVmbGVjdC5nZXQoZSwic2l6ZSIsZSl9ZnVuY3Rpb24gTWUoZSl7ZT1udChlKTtjb25zdCB0PW50KHRoaXMpLG49RWUodCkuaGFzLmNhbGwodCxlKSxvPXQuYWRkKGUpO3JldHVybiBufHxmZSh0LCJhZGQiLGUsZSksb31mdW5jdGlvbiBPZShlLHQpe3Q9bnQodCk7Y29uc3Qgbj1udCh0aGlzKSx7aGFzOm8sZ2V0OnJ9PUVlKG4pO2xldCBzPW8uY2FsbChuLGUpO3N8fChlPW50KGUpLHM9by5jYWxsKG4sZSkpO2NvbnN0IGk9ci5jYWxsKG4sZSksbD1uLnNldChlLHQpO3JldHVybiBzP3EodCxpKSYmZmUobiwic2V0IixlLHQpOmZlKG4sImFkZCIsZSx0KSxsfWZ1bmN0aW9uIFJlKGUpe2NvbnN0IHQ9bnQodGhpcykse2hhczpuLGdldDpvfT1FZSh0KTtsZXQgcj1uLmNhbGwodCxlKTtyfHwoZT1udChlKSxyPW4uY2FsbCh0LGUpKTtvJiZvLmNhbGwodCxlKTtjb25zdCBzPXQuZGVsZXRlKGUpO3JldHVybiByJiZmZSh0LCJkZWxldGUiLGUsdm9pZCAwKSxzfWZ1bmN0aW9uIEJlKCl7Y29uc3QgZT1udCh0aGlzKSx0PTAhPT1lLnNpemUsbj1lLmNsZWFyKCk7cmV0dXJuIHQmJmZlKGUsImNsZWFyIix2b2lkIDAsdm9pZCAwKSxufWZ1bmN0aW9uIFBlKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKG4sbyl7Y29uc3Qgcj10aGlzLHM9ci5fX3ZfcmF3LGk9bnQocyksbD1lP1RlOnQ/TmU6d2U7cmV0dXJuIWUmJnBlKGksMCx0ZSkscy5mb3JFYWNoKChlLHQpPT5uLmNhbGwobyxsKGUpLGwodCkscikpfX1mdW5jdGlvbiBJZShlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKC4uLm8pe2NvbnN0IHI9dGhpcy5fX3ZfcmF3LHM9bnQociksaT1FKHMpLGw9ImVudHJpZXMiPT09ZXx8ZT09PVN5bWJvbC5pdGVyYXRvciYmaSxjPSJrZXlzIj09PWUmJmksYT1yW2VdKC4uLm8pLHU9dD9UZTpuP05lOndlO3JldHVybiF0JiZwZShzLDAsYz9uZTp0ZSkse25leHQoKXtjb25zdHt2YWx1ZTplLGRvbmU6dH09YS5uZXh0KCk7cmV0dXJuIHQ/e3ZhbHVlOmUsZG9uZTp0fTp7dmFsdWU6bD9bdShlWzBdKSx1KGVbMV0pXTp1KGUpLGRvbmU6dH19LFtTeW1ib2wuaXRlcmF0b3JdKCl7cmV0dXJuIHRoaXN9fX19ZnVuY3Rpb24gTGUoZSl7cmV0dXJuIGZ1bmN0aW9uKC4uLnQpe3JldHVybiJkZWxldGUiIT09ZSYmdGhpc319Y29uc3QgVmU9e2dldChlKXtyZXR1cm4gRmUodGhpcyxlKX0sZ2V0IHNpemUoKXtyZXR1cm4gQWUodGhpcyl9LGhhczokZSxhZGQ6TWUsc2V0Ok9lLGRlbGV0ZTpSZSxjbGVhcjpCZSxmb3JFYWNoOlBlKCExLCExKX0sVWU9e2dldChlKXtyZXR1cm4gRmUodGhpcyxlLCExLCEwKX0sZ2V0IHNpemUoKXtyZXR1cm4gQWUodGhpcyl9LGhhczokZSxhZGQ6TWUsc2V0Ok9lLGRlbGV0ZTpSZSxjbGVhcjpCZSxmb3JFYWNoOlBlKCExLCEwKX0samU9e2dldChlKXtyZXR1cm4gRmUodGhpcyxlLCEwKX0sZ2V0IHNpemUoKXtyZXR1cm4gQWUodGhpcywhMCl9LGhhcyhlKXtyZXR1cm4gJGUuY2FsbCh0aGlzLGUsITApfSxhZGQ6TGUoImFkZCIpLHNldDpMZSgic2V0IiksZGVsZXRlOkxlKCJkZWxldGUiKSxjbGVhcjpMZSgiY2xlYXIiKSxmb3JFYWNoOlBlKCEwLCExKX07ZnVuY3Rpb24gRGUoZSx0KXtjb25zdCBuPXQ/VWU6ZT9qZTpWZTtyZXR1cm4odCxvLHIpPT4iX192X2lzUmVhY3RpdmUiPT09bz8hZToiX192X2lzUmVhZG9ubHkiPT09bz9lOiJfX3ZfcmF3Ij09PW8/dDpSZWZsZWN0LmdldChUKG4sbykmJm8gaW4gdD9uOnQsbyxyKX1bImtleXMiLCJ2YWx1ZXMiLCJlbnRyaWVzIixTeW1ib2wuaXRlcmF0b3JdLmZvckVhY2goZT0+e1ZlW2VdPUllKGUsITEsITEpLGplW2VdPUllKGUsITAsITEpLFVlW2VdPUllKGUsITEsITApfSk7Y29uc3QgSGU9e2dldDpEZSghMSwhMSl9LHplPXtnZXQ6RGUoITEsITApfSxLZT17Z2V0OkRlKCEwLCExKX0sV2U9bmV3IFdlYWtNYXAsR2U9bmV3IFdlYWtNYXA7ZnVuY3Rpb24gcWUoZSl7cmV0dXJuIGUuX192X3NraXB8fCFPYmplY3QuaXNFeHRlbnNpYmxlKGUpPzA6ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UiT2JqZWN0IjpjYXNlIkFycmF5IjpyZXR1cm4gMTtjYXNlIk1hcCI6Y2FzZSJTZXQiOmNhc2UiV2Vha01hcCI6Y2FzZSJXZWFrU2V0IjpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX0oKGU9PkkoZSkuc2xpY2UoOCwtMSkpKGUpKX1mdW5jdGlvbiBKZShlKXtyZXR1cm4gZSYmZS5fX3ZfaXNSZWFkb25seT9lOlFlKGUsITEseGUsSGUpfWZ1bmN0aW9uIFllKGUpe3JldHVybiBRZShlLCExLENlLHplKX1mdW5jdGlvbiBaZShlKXtyZXR1cm4gUWUoZSwhMCxTZSxLZSl9ZnVuY3Rpb24gUWUoZSx0LG4sbyl7aWYoIVIoZSkpcmV0dXJuIGU7aWYoZS5fX3ZfcmF3JiYoIXR8fCFlLl9fdl9pc1JlYWN0aXZlKSlyZXR1cm4gZTtjb25zdCByPXQ/R2U6V2Uscz1yLmdldChlKTtpZihzKXJldHVybiBzO2NvbnN0IGk9cWUoZSk7aWYoMD09PWkpcmV0dXJuIGU7Y29uc3QgbD1uZXcgUHJveHkoZSwyPT09aT9vOm4pO3JldHVybiByLnNldChlLGwpLGx9ZnVuY3Rpb24gWGUoZSl7cmV0dXJuIGV0KGUpP1hlKGUuX192X3Jhdyk6ISghZXx8IWUuX192X2lzUmVhY3RpdmUpfWZ1bmN0aW9uIGV0KGUpe3JldHVybiEoIWV8fCFlLl9fdl9pc1JlYWRvbmx5KX1mdW5jdGlvbiB0dChlKXtyZXR1cm4gWGUoZSl8fGV0KGUpfWZ1bmN0aW9uIG50KGUpe3JldHVybiBlJiZudChlLl9fdl9yYXcpfHxlfWNvbnN0IG90PWU9PlIoZSk/SmUoZSk6ZTtmdW5jdGlvbiBydChlKXtyZXR1cm4gQm9vbGVhbihlJiYhMD09PWUuX192X2lzUmVmKX1mdW5jdGlvbiBzdChlKXtyZXR1cm4gbHQoZSl9Y2xhc3MgaXR7Y29uc3RydWN0b3IoZSx0PSExKXt0aGlzLl9yYXdWYWx1ZT1lLHRoaXMuX3NoYWxsb3c9dCx0aGlzLl9fdl9pc1JlZj0hMCx0aGlzLl92YWx1ZT10P2U6b3QoZSl9Z2V0IHZhbHVlKCl7cmV0dXJuIHBlKG50KHRoaXMpLDAsInZhbHVlIiksdGhpcy5fdmFsdWV9c2V0IHZhbHVlKGUpe3EobnQoZSksdGhpcy5fcmF3VmFsdWUpJiYodGhpcy5fcmF3VmFsdWU9ZSx0aGlzLl92YWx1ZT10aGlzLl9zaGFsbG93P2U6b3QoZSksZmUobnQodGhpcyksInNldCIsInZhbHVlIixlKSl9fWZ1bmN0aW9uIGx0KGUsdD0hMSl7cmV0dXJuIHJ0KGUpP2U6bmV3IGl0KGUsdCl9ZnVuY3Rpb24gY3QoZSl7cmV0dXJuIHJ0KGUpP2UudmFsdWU6ZX1jb25zdCBhdD17Z2V0OihlLHQsbik9PmN0KFJlZmxlY3QuZ2V0KGUsdCxuKSksc2V0OihlLHQsbixvKT0+e2NvbnN0IHI9ZVt0XTtyZXR1cm4gcnQocikmJiFydChuKT8oci52YWx1ZT1uLCEwKTpSZWZsZWN0LnNldChlLHQsbixvKX19O2Z1bmN0aW9uIHV0KGUpe3JldHVybiBYZShlKT9lOm5ldyBQcm94eShlLGF0KX1jbGFzcyBwdHtjb25zdHJ1Y3RvcihlKXt0aGlzLl9fdl9pc1JlZj0hMDtjb25zdHtnZXQ6dCxzZXQ6bn09ZSgoKT0+cGUodGhpcywwLCJ2YWx1ZSIpLCgpPT5mZSh0aGlzLCJzZXQiLCJ2YWx1ZSIpKTt0aGlzLl9nZXQ9dCx0aGlzLl9zZXQ9bn1nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5fZ2V0KCl9c2V0IHZhbHVlKGUpe3RoaXMuX3NldChlKX19Y2xhc3MgZnR7Y29uc3RydWN0b3IoZSx0KXt0aGlzLl9vYmplY3Q9ZSx0aGlzLl9rZXk9dCx0aGlzLl9fdl9pc1JlZj0hMH1nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5fb2JqZWN0W3RoaXMuX2tleV19c2V0IHZhbHVlKGUpe3RoaXMuX29iamVjdFt0aGlzLl9rZXldPWV9fWZ1bmN0aW9uIGR0KGUsdCl7cmV0dXJuIHJ0KGVbdF0pP2VbdF06bmV3IGZ0KGUsdCl9Y2xhc3MgaHR7Y29uc3RydWN0b3IoZSx0LG4pe3RoaXMuX3NldHRlcj10LHRoaXMuX2RpcnR5PSEwLHRoaXMuX192X2lzUmVmPSEwLHRoaXMuZWZmZWN0PW9lKGUse2xhenk6ITAsc2NoZWR1bGVyOigpPT57dGhpcy5fZGlydHl8fCh0aGlzLl9kaXJ0eT0hMCxmZShudCh0aGlzKSwic2V0IiwidmFsdWUiKSl9fSksdGhpcy5fX3ZfaXNSZWFkb25seT1ufWdldCB2YWx1ZSgpe3JldHVybiB0aGlzLl9kaXJ0eSYmKHRoaXMuX3ZhbHVlPXRoaXMuZWZmZWN0KCksdGhpcy5fZGlydHk9ITEpLHBlKG50KHRoaXMpLDAsInZhbHVlIiksdGhpcy5fdmFsdWV9c2V0IHZhbHVlKGUpe3RoaXMuX3NldHRlcihlKX19Y29uc3QgbXQ9W107ZnVuY3Rpb24gZ3QoZSl7Y29uc3QgdD1bXSxuPU9iamVjdC5rZXlzKGUpO3JldHVybiBuLnNsaWNlKDAsMykuZm9yRWFjaChuPT57dC5wdXNoKC4uLnZ0KG4sZVtuXSkpfSksbi5sZW5ndGg+MyYmdC5wdXNoKCIgLi4uIiksdH1mdW5jdGlvbiB2dChlLHQsbil7cmV0dXJuIE0odCk/KHQ9SlNPTi5zdHJpbmdpZnkodCksbj90OltgJHtlfT0ke3R9YF0pOiJudW1iZXIiPT10eXBlb2YgdHx8ImJvb2xlYW4iPT10eXBlb2YgdHx8bnVsbD09dD9uP3Q6W2Ake2V9PSR7dH1gXTpydCh0KT8odD12dChlLG50KHQudmFsdWUpLCEwKSxuP3Q6W2UrIj1SZWY8Iix0LCI+Il0pOkEodCk/W2Ake2V9PWZuJHt0Lm5hbWU/YDwke3QubmFtZX0+YDoiIn1gXToodD1udCh0KSxuP3Q6W2UrIj0iLHRdKX1mdW5jdGlvbiB5dChlLHQsbixvKXtsZXQgcjt0cnl7cj1vP2UoLi4ubyk6ZSgpfWNhdGNoKGUpe190KGUsdCxuKX1yZXR1cm4gcn1mdW5jdGlvbiBidChlLHQsbixvKXtpZihBKGUpKXtjb25zdCByPXl0KGUsdCxuLG8pO3JldHVybiByJiZCKHIpJiZyLmNhdGNoKGU9PntfdChlLHQsbil9KSxyfWNvbnN0IHI9W107Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspci5wdXNoKGJ0KGVbc10sdCxuLG8pKTtyZXR1cm4gcn1mdW5jdGlvbiBfdChlLHQsbixvPSEwKXtpZih0KXtsZXQgbz10LnBhcmVudDtjb25zdCByPXQucHJveHkscz1uO2Zvcig7bzspe2NvbnN0IHQ9by5lYztpZih0KWZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKWlmKCExPT09dFtuXShlLHIscykpcmV0dXJuO289by5wYXJlbnR9Y29uc3QgaT10LmFwcENvbnRleHQuY29uZmlnLmVycm9ySGFuZGxlcjtpZihpKXJldHVybiB2b2lkIHl0KGksbnVsbCwxMCxbZSxyLHNdKX0hZnVuY3Rpb24oZSx0LG4sbz0hMCl7Y29uc29sZS5lcnJvcihlKX0oZSwwLDAsbyl9bGV0IHh0PSExLFN0PSExO2NvbnN0IEN0PVtdO2xldCBrdD0wO2NvbnN0IHd0PVtdO2xldCBUdD1udWxsLE50PTA7Y29uc3QgRXQ9W107bGV0IEZ0PW51bGwsJHQ9MDtjb25zdCBBdD1Qcm9taXNlLnJlc29sdmUoKTtsZXQgTXQ9bnVsbCxPdD1udWxsO2Z1bmN0aW9uIFJ0KGUpe2NvbnN0IHQ9TXR8fEF0O3JldHVybiBlP3QudGhlbih0aGlzP2UuYmluZCh0aGlzKTplKTp0fWZ1bmN0aW9uIEJ0KGUpe0N0Lmxlbmd0aCYmQ3QuaW5jbHVkZXMoZSx4dCYmZS5hbGxvd1JlY3Vyc2U/a3QrMTprdCl8fGU9PT1PdHx8KEN0LnB1c2goZSksUHQoKSl9ZnVuY3Rpb24gUHQoKXt4dHx8U3R8fChTdD0hMCxNdD1BdC50aGVuKER0KSl9ZnVuY3Rpb24gSXQoZSx0LG4sbyl7TihlKT9uLnB1c2goLi4uZSk6dCYmdC5pbmNsdWRlcyhlLGUuYWxsb3dSZWN1cnNlP28rMTpvKXx8bi5wdXNoKGUpLFB0KCl9ZnVuY3Rpb24gTHQoZSl7SXQoZSxGdCxFdCwkdCl9ZnVuY3Rpb24gVnQoZSx0PW51bGwpe2lmKHd0Lmxlbmd0aCl7Zm9yKE90PXQsVHQ9Wy4uLm5ldyBTZXQod3QpXSx3dC5sZW5ndGg9MCxOdD0wO050PFR0Lmxlbmd0aDtOdCsrKVR0W050XSgpO1R0PW51bGwsTnQ9MCxPdD1udWxsLFZ0KGUsdCl9fWZ1bmN0aW9uIFV0KGUpe2lmKEV0Lmxlbmd0aCl7Y29uc3QgZT1bLi4ubmV3IFNldChFdCldO2lmKEV0Lmxlbmd0aD0wLEZ0KXJldHVybiB2b2lkIEZ0LnB1c2goLi4uZSk7Zm9yKEZ0PWUsRnQuc29ydCgoZSx0KT0+anQoZSktanQodCkpLCR0PTA7JHQ8RnQubGVuZ3RoOyR0KyspRnRbJHRdKCk7RnQ9bnVsbCwkdD0wfX1jb25zdCBqdD1lPT5udWxsPT1lLmlkPzEvMDplLmlkO2Z1bmN0aW9uIER0KGUpe1N0PSExLHh0PSEwLFZ0KGUpLEN0LnNvcnQoKGUsdCk9Pmp0KGUpLWp0KHQpKTt0cnl7Zm9yKGt0PTA7a3Q8Q3QubGVuZ3RoO2t0Kyspe2NvbnN0IGU9Q3Rba3RdO2UmJnl0KGUsbnVsbCwxNCl9fWZpbmFsbHl7a3Q9MCxDdC5sZW5ndGg9MCxVdCgpLHh0PSExLE10PW51bGwsKEN0Lmxlbmd0aHx8RXQubGVuZ3RoKSYmRHQoZSl9fWZ1bmN0aW9uIEh0KGUsdCwuLi5uKXtjb25zdCBvPWUudm5vZGUucHJvcHN8fGc7bGV0IHI9bjtjb25zdCBzPXQuc3RhcnRzV2l0aCgidXBkYXRlOiIpLGk9cyYmdC5zbGljZSg3KTtpZihpJiZpIGluIG8pe2NvbnN0IGU9KCJtb2RlbFZhbHVlIj09PWk/Im1vZGVsIjppKSsiTW9kaWZpZXJzIix7bnVtYmVyOnQsdHJpbTpzfT1vW2VdfHxnO3M/cj1uLm1hcChlPT5lLnRyaW0oKSk6dCYmKHI9bi5tYXAoWikpfWxldCBsPUcoSCh0KSksYz1vW2xdOyFjJiZzJiYobD1HKEsodCkpLGM9b1tsXSksYyYmYnQoYyxlLDYscik7Y29uc3QgYT1vW2wrIk9uY2UiXTtpZihhKXtpZihlLmVtaXR0ZWQpe2lmKGUuZW1pdHRlZFtsXSlyZXR1cm59ZWxzZShlLmVtaXR0ZWQ9e30pW2xdPSEwO2J0KGEsZSw2LHIpfX1mdW5jdGlvbiB6dChlLHQsbj0hMSl7aWYoIXQuZGVvcHQmJnZvaWQgMCE9PWUuX19lbWl0cylyZXR1cm4gZS5fX2VtaXRzO2NvbnN0IG89ZS5lbWl0cztsZXQgcj17fSxzPSExO2lmKCFBKGUpKXtjb25zdCBvPWU9PntzPSEwLEMocix6dChlLHQsITApKX07IW4mJnQubWl4aW5zLmxlbmd0aCYmdC5taXhpbnMuZm9yRWFjaChvKSxlLmV4dGVuZHMmJm8oZS5leHRlbmRzKSxlLm1peGlucyYmZS5taXhpbnMuZm9yRWFjaChvKX1yZXR1cm4gb3x8cz8oTihvKT9vLmZvckVhY2goZT0+cltlXT1udWxsKTpDKHIsbyksZS5fX2VtaXRzPXIpOmUuX19lbWl0cz1udWxsfWZ1bmN0aW9uIEt0KGUsdCl7cmV0dXJuISghZXx8IXgodCkpJiYodD10LnJlcGxhY2UoL09uY2UkLywiIiksVChlLHRbMl0udG9Mb3dlckNhc2UoKSt0LnNsaWNlKDMpKXx8VChlLHQuc2xpY2UoMikpKX1sZXQgV3Q9bnVsbDtmdW5jdGlvbiBHdChlKXtXdD1lfWZ1bmN0aW9uIHF0KGUpe2NvbnN0e3R5cGU6dCx2bm9kZTpuLHByb3h5Om8sd2l0aFByb3h5OnIscHJvcHM6cyxwcm9wc09wdGlvbnM6W2ldLHNsb3RzOmwsYXR0cnM6YyxlbWl0OmEscmVuZGVyOnUscmVuZGVyQ2FjaGU6cCxkYXRhOmYsc2V0dXBTdGF0ZTpkLGN0eDpofT1lO2xldCBtO1d0PWU7dHJ5e2xldCBlO2lmKDQmbi5zaGFwZUZsYWcpe2NvbnN0IHQ9cnx8bzttPVlvKHUuY2FsbCh0LHQscCxzLGQsZixoKSksZT1jfWVsc2V7Y29uc3Qgbj10OzAsbT1ZbyhuKHMsbi5sZW5ndGg+MT97YXR0cnM6YyxzbG90czpsLGVtaXQ6YX06bnVsbCkpLGU9dC5wcm9wcz9jOll0KGMpfWxldCBnPW07aWYoITEhPT10LmluaGVyaXRBdHRycyYmZSl7Y29uc3QgdD1PYmplY3Qua2V5cyhlKSx7c2hhcGVGbGFnOm59PWc7dC5sZW5ndGgmJigxJm58fDYmbikmJihpJiZ0LnNvbWUoUykmJihlPVp0KGUsaSkpLGc9cW8oZyxlKSl9bi5kaXJzJiYoZy5kaXJzPWcuZGlycz9nLmRpcnMuY29uY2F0KG4uZGlycyk6bi5kaXJzKSxuLnRyYW5zaXRpb24mJihnLnRyYW5zaXRpb249bi50cmFuc2l0aW9uKSxtPWd9Y2F0Y2godCl7X3QodCxlLDEpLG09R28oUm8pfXJldHVybiBXdD1udWxsLG19ZnVuY3Rpb24gSnQoZSl7Y29uc3QgdD1lLmZpbHRlcihlPT4hKERvKGUpJiZlLnR5cGU9PT1SbyYmInYtaWYiIT09ZS5jaGlsZHJlbikpO3JldHVybiAxPT09dC5sZW5ndGgmJkRvKHRbMF0pP3RbMF06bnVsbH1jb25zdCBZdD1lPT57bGV0IHQ7Zm9yKGNvbnN0IG4gaW4gZSkoImNsYXNzIj09PW58fCJzdHlsZSI9PT1ufHx4KG4pKSYmKCh0fHwodD17fSkpW25dPWVbbl0pO3JldHVybiB0fSxadD0oZSx0KT0+e2NvbnN0IG49e307Zm9yKGNvbnN0IG8gaW4gZSlTKG8pJiZvLnNsaWNlKDkpaW4gdHx8KG5bb109ZVtvXSk7cmV0dXJuIG59O2Z1bmN0aW9uIFF0KGUsdCxuKXtjb25zdCBvPU9iamVjdC5rZXlzKHQpO2lmKG8ubGVuZ3RoIT09T2JqZWN0LmtleXMoZSkubGVuZ3RoKXJldHVybiEwO2ZvcihsZXQgcj0wO3I8by5sZW5ndGg7cisrKXtjb25zdCBzPW9bcl07aWYodFtzXSE9PWVbc10mJiFLdChuLHMpKXJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIFh0KHt2bm9kZTplLHBhcmVudDp0fSxuKXtmb3IoO3QmJnQuc3ViVHJlZT09PWU7KShlPXQudm5vZGUpLmVsPW4sdD10LnBhcmVudH1jb25zdCBlbj17X19pc1N1c3BlbnNlOiEwLHByb2Nlc3MoZSx0LG4sbyxyLHMsaSxsLGMpe251bGw9PWU/ZnVuY3Rpb24oZSx0LG4sbyxyLHMsaSxsKXtjb25zdHtwOmMsbzp7Y3JlYXRlRWxlbWVudDphfX09bCx1PWEoImRpdiIpLHA9ZS5zdXNwZW5zZT10bihlLHIsbyx0LHUsbixzLGksbCk7YyhudWxsLHAucGVuZGluZ0JyYW5jaD1lLnNzQ29udGVudCx1LG51bGwsbyxwLHMpLHAuZGVwcz4wPyhjKG51bGwsZS5zc0ZhbGxiYWNrLHQsbixvLG51bGwscykscm4ocCxlLnNzRmFsbGJhY2spKTpwLnJlc29sdmUoKX0odCxuLG8scixzLGksbCxjKTpmdW5jdGlvbihlLHQsbixvLHIscyx7cDppLHVtOmwsbzp7Y3JlYXRlRWxlbWVudDpjfX0pe2NvbnN0IGE9dC5zdXNwZW5zZT1lLnN1c3BlbnNlO2Eudm5vZGU9dCx0LmVsPWUuZWw7Y29uc3QgdT10LnNzQ29udGVudCxwPXQuc3NGYWxsYmFjayx7YWN0aXZlQnJhbmNoOmYscGVuZGluZ0JyYW5jaDpkLGlzSW5GYWxsYmFjazpoLGlzSHlkcmF0aW5nOm19PWE7aWYoZClhLnBlbmRpbmdCcmFuY2g9dSxIbyh1LGQpPyhpKGQsdSxhLmhpZGRlbkNvbnRhaW5lcixudWxsLHIsYSxzKSxhLmRlcHM8PTA/YS5yZXNvbHZlKCk6aCYmKGkoZixwLG4sbyxyLG51bGwscykscm4oYSxwKSkpOihhLnBlbmRpbmdJZCsrLG0/KGEuaXNIeWRyYXRpbmc9ITEsYS5hY3RpdmVCcmFuY2g9ZCk6bChkLHIsYSksYS5kZXBzPTAsYS5lZmZlY3RzLmxlbmd0aD0wLGEuaGlkZGVuQ29udGFpbmVyPWMoImRpdiIpLGg/KGkobnVsbCx1LGEuaGlkZGVuQ29udGFpbmVyLG51bGwscixhLHMpLGEuZGVwczw9MD9hLnJlc29sdmUoKTooaShmLHAsbixvLHIsbnVsbCxzKSxybihhLHApKSk6ZiYmSG8odSxmKT8oaShmLHUsbixvLHIsYSxzKSxhLnJlc29sdmUoITApKTooaShudWxsLHUsYS5oaWRkZW5Db250YWluZXIsbnVsbCxyLGEscyksYS5kZXBzPD0wJiZhLnJlc29sdmUoKSkpO2Vsc2UgaWYoZiYmSG8odSxmKSlpKGYsdSxuLG8scixhLHMpLHJuKGEsdSk7ZWxzZXtjb25zdCBlPXQucHJvcHMmJnQucHJvcHMub25QZW5kaW5nO2lmKEEoZSkmJmUoKSxhLnBlbmRpbmdCcmFuY2g9dSxhLnBlbmRpbmdJZCsrLGkobnVsbCx1LGEuaGlkZGVuQ29udGFpbmVyLG51bGwscixhLHMpLGEuZGVwczw9MClhLnJlc29sdmUoKTtlbHNle2NvbnN0e3RpbWVvdXQ6ZSxwZW5kaW5nSWQ6dH09YTtlPjA/c2V0VGltZW91dCgoKT0+e2EucGVuZGluZ0lkPT09dCYmYS5mYWxsYmFjayhwKX0sZSk6MD09PWUmJmEuZmFsbGJhY2socCl9fX0oZSx0LG4sbyxyLGksYyl9LGh5ZHJhdGU6ZnVuY3Rpb24oZSx0LG4sbyxyLHMsaSxsKXtjb25zdCBjPXQuc3VzcGVuc2U9dG4odCxvLG4sZS5wYXJlbnROb2RlLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLG51bGwscixzLGksITApLGE9bChlLGMucGVuZGluZ0JyYW5jaD10LnNzQ29udGVudCxuLGMscyk7MD09PWMuZGVwcyYmYy5yZXNvbHZlKCk7cmV0dXJuIGF9LGNyZWF0ZTp0bn07ZnVuY3Rpb24gdG4oZSx0LG4sbyxyLHMsaSxsLGMsYT0hMSl7Y29uc3R7cDp1LG06cCx1bTpmLG46ZCxvOntwYXJlbnROb2RlOmgscmVtb3ZlOm19fT1jLGc9WihlLnByb3BzJiZlLnByb3BzLnRpbWVvdXQpLHY9e3Zub2RlOmUscGFyZW50OnQscGFyZW50Q29tcG9uZW50Om4saXNTVkc6aSxjb250YWluZXI6byxoaWRkZW5Db250YWluZXI6cixhbmNob3I6cyxkZXBzOjAscGVuZGluZ0lkOjAsdGltZW91dDoibnVtYmVyIj09dHlwZW9mIGc/ZzotMSxhY3RpdmVCcmFuY2g6bnVsbCxwZW5kaW5nQnJhbmNoOm51bGwsaXNJbkZhbGxiYWNrOiEwLGlzSHlkcmF0aW5nOmEsaXNVbm1vdW50ZWQ6ITEsZWZmZWN0czpbXSxyZXNvbHZlKGU9ITEpe2NvbnN0e3Zub2RlOnQsYWN0aXZlQnJhbmNoOm4scGVuZGluZ0JyYW5jaDpvLHBlbmRpbmdJZDpyLGVmZmVjdHM6cyxwYXJlbnRDb21wb25lbnQ6aSxjb250YWluZXI6bH09djtpZih2LmlzSHlkcmF0aW5nKXYuaXNIeWRyYXRpbmc9ITE7ZWxzZSBpZighZSl7Y29uc3QgZT1uJiZvLnRyYW5zaXRpb24mJiJvdXQtaW4iPT09by50cmFuc2l0aW9uLm1vZGU7ZSYmKG4udHJhbnNpdGlvbi5hZnRlckxlYXZlPSgpPT57cj09PXYucGVuZGluZ0lkJiZwKG8sbCx0LDApfSk7bGV0e2FuY2hvcjp0fT12O24mJih0PWQobiksZihuLGksdiwhMCkpLGV8fHAobyxsLHQsMCl9cm4odixvKSx2LnBlbmRpbmdCcmFuY2g9bnVsbCx2LmlzSW5GYWxsYmFjaz0hMTtsZXQgYz12LnBhcmVudCxhPSExO2Zvcig7Yzspe2lmKGMucGVuZGluZ0JyYW5jaCl7Yy5lZmZlY3RzLnB1c2goLi4ucyksYT0hMDticmVha31jPWMucGFyZW50fWF8fEx0KHMpLHYuZWZmZWN0cz1bXTtjb25zdCB1PXQucHJvcHMmJnQucHJvcHMub25SZXNvbHZlO0EodSkmJnUoKX0sZmFsbGJhY2soZSl7aWYoIXYucGVuZGluZ0JyYW5jaClyZXR1cm47Y29uc3R7dm5vZGU6dCxhY3RpdmVCcmFuY2g6bixwYXJlbnRDb21wb25lbnQ6byxjb250YWluZXI6cixpc1NWRzpzfT12LGk9dC5wcm9wcyYmdC5wcm9wcy5vbkZhbGxiYWNrO0EoaSkmJmkoKTtjb25zdCBsPWQobiksYz0oKT0+e3YuaXNJbkZhbGxiYWNrJiYodShudWxsLGUscixsLG8sbnVsbCxzKSxybih2LGUpKX0sYT1lLnRyYW5zaXRpb24mJiJvdXQtaW4iPT09ZS50cmFuc2l0aW9uLm1vZGU7YSYmKG4udHJhbnNpdGlvbi5hZnRlckxlYXZlPWMpLGYobixvLG51bGwsITApLHYuaXNJbkZhbGxiYWNrPSEwLGF8fGMoKX0sbW92ZShlLHQsbil7di5hY3RpdmVCcmFuY2gmJnAodi5hY3RpdmVCcmFuY2gsZSx0LG4pLHYuY29udGFpbmVyPWV9LG5leHQ6KCk9PnYuYWN0aXZlQnJhbmNoJiZkKHYuYWN0aXZlQnJhbmNoKSxyZWdpc3RlckRlcChlLHQpe2lmKCF2LnBlbmRpbmdCcmFuY2gpcmV0dXJuO2NvbnN0IG49ZS52bm9kZS5lbDt2LmRlcHMrKyxlLmFzeW5jRGVwLmNhdGNoKHQ9PntfdCh0LGUsMCl9KS50aGVuKG89PntpZihlLmlzVW5tb3VudGVkfHx2LmlzVW5tb3VudGVkfHx2LnBlbmRpbmdJZCE9PWUuc3VzcGVuc2VJZClyZXR1cm47di5kZXBzLS0sZS5hc3luY1Jlc29sdmVkPSEwO2NvbnN0e3Zub2RlOnJ9PWU7eHIoZSxvKSxuJiYoci5lbD1uKTtjb25zdCBzPSFuJiZlLnN1YlRyZWUuZWw7dChlLHIsaChufHxlLnN1YlRyZWUuZWwpLG4/bnVsbDpkKGUuc3ViVHJlZSksdixpLGwpLHMmJm0ocyksWHQoZSxyLmVsKSwwPT09di5kZXBzJiZ2LnJlc29sdmUoKX0pfSx1bm1vdW50KGUsdCl7di5pc1VubW91bnRlZD0hMCx2LmFjdGl2ZUJyYW5jaCYmZih2LmFjdGl2ZUJyYW5jaCxuLGUsdCksdi5wZW5kaW5nQnJhbmNoJiZmKHYucGVuZGluZ0JyYW5jaCxuLGUsdCl9fTtyZXR1cm4gdn1mdW5jdGlvbiBubihlKXtpZihBKGUpJiYoZT1lKCkpLE4oZSkpe2U9SnQoZSl9cmV0dXJuIFlvKGUpfWZ1bmN0aW9uIG9uKGUsdCl7dCYmdC5wZW5kaW5nQnJhbmNoP04oZSk/dC5lZmZlY3RzLnB1c2goLi4uZSk6dC5lZmZlY3RzLnB1c2goZSk6THQoZSl9ZnVuY3Rpb24gcm4oZSx0KXtlLmFjdGl2ZUJyYW5jaD10O2NvbnN0e3Zub2RlOm4scGFyZW50Q29tcG9uZW50Om99PWUscj1uLmVsPXQuZWw7byYmby5zdWJUcmVlPT09biYmKG8udm5vZGUuZWw9cixYdChvLHIpKX1sZXQgc249MDtjb25zdCBsbj1lPT5zbis9ZTtmdW5jdGlvbiBjbihlLHQ9V3Qpe2lmKCF0KXJldHVybiBlO2NvbnN0IG49KC4uLm4pPT57c258fExvKCEwKTtjb25zdCBvPVd0O0d0KHQpO2NvbnN0IHI9ZSguLi5uKTtyZXR1cm4gR3Qobyksc258fFZvKCkscn07cmV0dXJuIG4uX2M9ITAsbn1sZXQgYW49bnVsbDtjb25zdCB1bj1bXTtmdW5jdGlvbiBwbihlKXt1bi5wdXNoKGFuPWUpfWZ1bmN0aW9uIGZuKCl7dW4ucG9wKCksYW49dW5bdW4ubGVuZ3RoLTFdfHxudWxsfWZ1bmN0aW9uIGRuKGUsdCxuLG8pe2NvbnN0W3Isc109ZS5wcm9wc09wdGlvbnM7aWYodClmb3IoY29uc3QgcyBpbiB0KXtjb25zdCBpPXRbc107aWYoVShzKSljb250aW51ZTtsZXQgbDtyJiZUKHIsbD1IKHMpKT9uW2xdPWk6S3QoZS5lbWl0c09wdGlvbnMscyl8fChvW3NdPWkpfWlmKHMpe2NvbnN0IHQ9bnQobik7Zm9yKGxldCBvPTA7bzxzLmxlbmd0aDtvKyspe2NvbnN0IGk9c1tvXTtuW2ldPWhuKHIsdCxpLHRbaV0sZSl9fX1mdW5jdGlvbiBobihlLHQsbixvLHIpe2NvbnN0IHM9ZVtuXTtpZihudWxsIT1zKXtjb25zdCBlPVQocywiZGVmYXVsdCIpO2lmKGUmJnZvaWQgMD09PW8pe2NvbnN0IGU9cy5kZWZhdWx0O3MudHlwZSE9PUZ1bmN0aW9uJiZBKGUpPyh5cihyKSxvPWUodCkseXIobnVsbCkpOm89ZX1zWzBdJiYoVCh0LG4pfHxlPyFzWzFdfHwiIiE9PW8mJm8hPT1LKG4pfHwobz0hMCk6bz0hMSl9cmV0dXJuIG99ZnVuY3Rpb24gbW4oZSx0LG49ITEpe2lmKCF0LmRlb3B0JiZlLl9fcHJvcHMpcmV0dXJuIGUuX19wcm9wcztjb25zdCBvPWUucHJvcHMscj17fSxzPVtdO2xldCBpPSExO2lmKCFBKGUpKXtjb25zdCBvPWU9PntpPSEwO2NvbnN0W24sb109bW4oZSx0LCEwKTtDKHIsbiksbyYmcy5wdXNoKC4uLm8pfTshbiYmdC5taXhpbnMubGVuZ3RoJiZ0Lm1peGlucy5mb3JFYWNoKG8pLGUuZXh0ZW5kcyYmbyhlLmV4dGVuZHMpLGUubWl4aW5zJiZlLm1peGlucy5mb3JFYWNoKG8pfWlmKCFvJiYhaSlyZXR1cm4gZS5fX3Byb3BzPXY7aWYoTihvKSlmb3IobGV0IGU9MDtlPG8ubGVuZ3RoO2UrKyl7Y29uc3QgdD1IKG9bZV0pO2duKHQpJiYoclt0XT1nKX1lbHNlIGlmKG8pZm9yKGNvbnN0IGUgaW4gbyl7Y29uc3QgdD1IKGUpO2lmKGduKHQpKXtjb25zdCBuPW9bZV0saT1yW3RdPU4obil8fEEobik/e3R5cGU6bn06bjtpZihpKXtjb25zdCBlPWJuKEJvb2xlYW4saS50eXBlKSxuPWJuKFN0cmluZyxpLnR5cGUpO2lbMF09ZT4tMSxpWzFdPW48MHx8ZTxuLChlPi0xfHxUKGksImRlZmF1bHQiKSkmJnMucHVzaCh0KX19fXJldHVybiBlLl9fcHJvcHM9W3Isc119ZnVuY3Rpb24gZ24oZSl7cmV0dXJuIiQiIT09ZVswXX1mdW5jdGlvbiB2bihlKXtjb25zdCB0PWUmJmUudG9TdHJpbmcoKS5tYXRjaCgvXlxzKmZ1bmN0aW9uIChcdyspLyk7cmV0dXJuIHQ/dFsxXToiIn1mdW5jdGlvbiB5bihlLHQpe3JldHVybiB2bihlKT09PXZuKHQpfWZ1bmN0aW9uIGJuKGUsdCl7aWYoTih0KSl7Zm9yKGxldCBuPTAsbz10Lmxlbmd0aDtuPG87bisrKWlmKHluKHRbbl0sZSkpcmV0dXJuIG59ZWxzZSBpZihBKHQpKXJldHVybiB5bih0LGUpPzA6LTE7cmV0dXJuLTF9ZnVuY3Rpb24gX24oZSx0LG49Z3Isbz0hMSl7aWYobil7Y29uc3Qgcj1uW2VdfHwobltlXT1bXSkscz10Ll9fd2VofHwodC5fX3dlaD0oLi4ubyk9PntpZihuLmlzVW5tb3VudGVkKXJldHVybjthZSgpLHlyKG4pO2NvbnN0IHI9YnQodCxuLGUsbyk7cmV0dXJuIHlyKG51bGwpLHVlKCkscn0pO3JldHVybiBvP3IudW5zaGlmdChzKTpyLnB1c2gocyksc319Y29uc3QgeG49ZT0+KHQsbj1ncik9PiFfciYmX24oZSx0LG4pLFNuPXhuKCJibSIpLENuPXhuKCJtIiksa249eG4oImJ1Iiksd249eG4oInUiKSxUbj14bigiYnVtIiksTm49eG4oInVtIiksRW49eG4oInJ0ZyIpLEZuPXhuKCJydGMiKSwkbj0oZSx0PWdyKT0+e19uKCJlYyIsZSx0KX07ZnVuY3Rpb24gQW4oZSx0KXtyZXR1cm4gUm4oZSxudWxsLHQpfWNvbnN0IE1uPXt9O2Z1bmN0aW9uIE9uKGUsdCxuKXtyZXR1cm4gUm4oZSx0LG4pfWZ1bmN0aW9uIFJuKGUsdCx7aW1tZWRpYXRlOm4sZGVlcDpvLGZsdXNoOnIsb25UcmFjazpzLG9uVHJpZ2dlcjppfT1nLGw9Z3Ipe2xldCBjLGEsdT0hMTtpZihydChlKT8oYz0oKT0+ZS52YWx1ZSx1PSEhZS5fc2hhbGxvdyk6WGUoZSk/KGM9KCk9PmUsbz0hMCk6Yz1OKGUpPygpPT5lLm1hcChlPT5ydChlKT9lLnZhbHVlOlhlKGUpP1BuKGUpOkEoZSk/eXQoZSxsLDIpOnZvaWQgMCk6QShlKT90PygpPT55dChlLGwsMik6KCk9PntpZighbHx8IWwuaXNVbm1vdW50ZWQpcmV0dXJuIGEmJmEoKSx5dChlLGwsMyxbcF0pfTp5LHQmJm8pe2NvbnN0IGU9YztjPSgpPT5QbihlKCkpfWNvbnN0IHA9ZT0+e2E9bS5vcHRpb25zLm9uU3RvcD0oKT0+e3l0KGUsbCw0KX19O2xldCBmPU4oZSk/W106TW47Y29uc3QgZD0oKT0+e2lmKG0uYWN0aXZlKWlmKHQpe2NvbnN0IGU9bSgpOyhvfHx1fHxxKGUsZikpJiYoYSYmYSgpLGJ0KHQsbCwzLFtlLGY9PT1Nbj92b2lkIDA6ZixwXSksZj1lKX1lbHNlIG0oKX07bGV0IGg7ZC5hbGxvd1JlY3Vyc2U9ISF0LGg9InN5bmMiPT09cj9kOiJwb3N0Ij09PXI/KCk9PnZvKGQsbCYmbC5zdXNwZW5zZSk6KCk9PnshbHx8bC5pc01vdW50ZWQ/ZnVuY3Rpb24oZSl7SXQoZSxUdCx3dCxOdCl9KGQpOmQoKX07Y29uc3QgbT1vZShjLHtsYXp5OiEwLG9uVHJhY2s6cyxvblRyaWdnZXI6aSxzY2hlZHVsZXI6aH0pO3JldHVybiBrcihtKSx0P24/ZCgpOmY9bSgpOiJwb3N0Ij09PXI/dm8obSxsJiZsLnN1c3BlbnNlKTptKCksKCk9PntyZShtKSxsJiZrKGwuZWZmZWN0cyxtKX19ZnVuY3Rpb24gQm4oZSx0LG4pe2NvbnN0IG89dGhpcy5wcm94eTtyZXR1cm4gUm4oTShlKT8oKT0+b1tlXTplLmJpbmQobyksdC5iaW5kKG8pLG4sdGhpcyl9ZnVuY3Rpb24gUG4oZSx0PW5ldyBTZXQpe2lmKCFSKGUpfHx0LmhhcyhlKSlyZXR1cm4gZTtpZih0LmFkZChlKSxydChlKSlQbihlLnZhbHVlLHQpO2Vsc2UgaWYoTihlKSlmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKylQbihlW25dLHQpO2Vsc2UgaWYoRihlKXx8RShlKSllLmZvckVhY2goZT0+e1BuKGUsdCl9KTtlbHNlIGZvcihjb25zdCBuIGluIGUpUG4oZVtuXSx0KTtyZXR1cm4gZX1mdW5jdGlvbiBJbigpe2NvbnN0IGU9e2lzTW91bnRlZDohMSxpc0xlYXZpbmc6ITEsaXNVbm1vdW50aW5nOiExLGxlYXZpbmdWTm9kZXM6bmV3IE1hcH07cmV0dXJuIENuKCgpPT57ZS5pc01vdW50ZWQ9ITB9KSxUbigoKT0+e2UuaXNVbm1vdW50aW5nPSEwfSksZX1jb25zdCBMbj1bRnVuY3Rpb24sQXJyYXldLFZuPXtuYW1lOiJCYXNlVHJhbnNpdGlvbiIscHJvcHM6e21vZGU6U3RyaW5nLGFwcGVhcjpCb29sZWFuLHBlcnNpc3RlZDpCb29sZWFuLG9uQmVmb3JlRW50ZXI6TG4sb25FbnRlcjpMbixvbkFmdGVyRW50ZXI6TG4sb25FbnRlckNhbmNlbGxlZDpMbixvbkJlZm9yZUxlYXZlOkxuLG9uTGVhdmU6TG4sb25BZnRlckxlYXZlOkxuLG9uTGVhdmVDYW5jZWxsZWQ6TG4sb25CZWZvcmVBcHBlYXI6TG4sb25BcHBlYXI6TG4sb25BZnRlckFwcGVhcjpMbixvbkFwcGVhckNhbmNlbGxlZDpMbn0sc2V0dXAoZSx7c2xvdHM6dH0pe2NvbnN0IG49dnIoKSxvPUluKCk7bGV0IHI7cmV0dXJuKCk9Pntjb25zdCBzPXQuZGVmYXVsdCYmS24odC5kZWZhdWx0KCksITApO2lmKCFzfHwhcy5sZW5ndGgpcmV0dXJuO2NvbnN0IGk9bnQoZSkse21vZGU6bH09aSxjPXNbMF07aWYoby5pc0xlYXZpbmcpcmV0dXJuIERuKGMpO2NvbnN0IGE9SG4oYyk7aWYoIWEpcmV0dXJuIERuKGMpO2NvbnN0IHU9am4oYSxpLG8sbik7em4oYSx1KTtjb25zdCBwPW4uc3ViVHJlZSxmPXAmJkhuKHApO2xldCBkPSExO2NvbnN0e2dldFRyYW5zaXRpb25LZXk6aH09YS50eXBlO2lmKGgpe2NvbnN0IGU9aCgpO3ZvaWQgMD09PXI/cj1lOmUhPT1yJiYocj1lLGQ9ITApfWlmKGYmJmYudHlwZSE9PVJvJiYoIUhvKGEsZil8fGQpKXtjb25zdCBlPWpuKGYsaSxvLG4pO2lmKHpuKGYsZSksIm91dC1pbiI9PT1sKXJldHVybiBvLmlzTGVhdmluZz0hMCxlLmFmdGVyTGVhdmU9KCk9PntvLmlzTGVhdmluZz0hMSxuLnVwZGF0ZSgpfSxEbihjKTsiaW4tb3V0Ij09PWwmJihlLmRlbGF5TGVhdmU9KGUsdCxuKT0+e1VuKG8sZilbU3RyaW5nKGYua2V5KV09ZixlLl9sZWF2ZUNiPSgpPT57dCgpLGUuX2xlYXZlQ2I9dm9pZCAwLGRlbGV0ZSB1LmRlbGF5ZWRMZWF2ZX0sdS5kZWxheWVkTGVhdmU9bn0pfXJldHVybiBjfX19O2Z1bmN0aW9uIFVuKGUsdCl7Y29uc3R7bGVhdmluZ1ZOb2RlczpufT1lO2xldCBvPW4uZ2V0KHQudHlwZSk7cmV0dXJuIG98fChvPU9iamVjdC5jcmVhdGUobnVsbCksbi5zZXQodC50eXBlLG8pKSxvfWZ1bmN0aW9uIGpuKGUsdCxuLG8pe2NvbnN0e2FwcGVhcjpyLG1vZGU6cyxwZXJzaXN0ZWQ6aT0hMSxvbkJlZm9yZUVudGVyOmwsb25FbnRlcjpjLG9uQWZ0ZXJFbnRlcjphLG9uRW50ZXJDYW5jZWxsZWQ6dSxvbkJlZm9yZUxlYXZlOnAsb25MZWF2ZTpmLG9uQWZ0ZXJMZWF2ZTpkLG9uTGVhdmVDYW5jZWxsZWQ6aCxvbkJlZm9yZUFwcGVhcjptLG9uQXBwZWFyOmcsb25BZnRlckFwcGVhcjp2LG9uQXBwZWFyQ2FuY2VsbGVkOnl9PXQsYj1TdHJpbmcoZS5rZXkpLF89VW4obixlKSx4PShlLHQpPT57ZSYmYnQoZSxvLDksdCl9LFM9e21vZGU6cyxwZXJzaXN0ZWQ6aSxiZWZvcmVFbnRlcih0KXtsZXQgbz1sO2lmKCFuLmlzTW91bnRlZCl7aWYoIXIpcmV0dXJuO289bXx8bH10Ll9sZWF2ZUNiJiZ0Ll9sZWF2ZUNiKCEwKTtjb25zdCBzPV9bYl07cyYmSG8oZSxzKSYmcy5lbC5fbGVhdmVDYiYmcy5lbC5fbGVhdmVDYigpLHgobyxbdF0pfSxlbnRlcihlKXtsZXQgdD1jLG89YSxzPXU7aWYoIW4uaXNNb3VudGVkKXtpZighcilyZXR1cm47dD1nfHxjLG89dnx8YSxzPXl8fHV9bGV0IGk9ITE7Y29uc3QgbD1lLl9lbnRlckNiPXQ9PntpfHwoaT0hMCx4KHQ/czpvLFtlXSksUy5kZWxheWVkTGVhdmUmJlMuZGVsYXllZExlYXZlKCksZS5fZW50ZXJDYj12b2lkIDApfTt0Pyh0KGUsbCksdC5sZW5ndGg8PTEmJmwoKSk6bCgpfSxsZWF2ZSh0LG8pe2NvbnN0IHI9U3RyaW5nKGUua2V5KTtpZih0Ll9lbnRlckNiJiZ0Ll9lbnRlckNiKCEwKSxuLmlzVW5tb3VudGluZylyZXR1cm4gbygpO3gocCxbdF0pO2xldCBzPSExO2NvbnN0IGk9dC5fbGVhdmVDYj1uPT57c3x8KHM9ITAsbygpLHgobj9oOmQsW3RdKSx0Ll9sZWF2ZUNiPXZvaWQgMCxfW3JdPT09ZSYmZGVsZXRlIF9bcl0pfTtfW3JdPWUsZj8oZih0LGkpLGYubGVuZ3RoPD0xJiZpKCkpOmkoKX0sY2xvbmU6ZT0+am4oZSx0LG4sbyl9O3JldHVybiBTfWZ1bmN0aW9uIERuKGUpe2lmKFduKGUpKXJldHVybihlPXFvKGUpKS5jaGlsZHJlbj1udWxsLGV9ZnVuY3Rpb24gSG4oZSl7cmV0dXJuIFduKGUpP2UuY2hpbGRyZW4/ZS5jaGlsZHJlblswXTp2b2lkIDA6ZX1mdW5jdGlvbiB6bihlLHQpezYmZS5zaGFwZUZsYWcmJmUuY29tcG9uZW50P3puKGUuY29tcG9uZW50LnN1YlRyZWUsdCk6MTI4JmUuc2hhcGVGbGFnPyhlLnNzQ29udGVudC50cmFuc2l0aW9uPXQuY2xvbmUoZS5zc0NvbnRlbnQpLGUuc3NGYWxsYmFjay50cmFuc2l0aW9uPXQuY2xvbmUoZS5zc0ZhbGxiYWNrKSk6ZS50cmFuc2l0aW9uPXR9ZnVuY3Rpb24gS24oZSx0PSExKXtsZXQgbj1bXSxvPTA7Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspe2NvbnN0IHM9ZVtyXTtzLnR5cGU9PT1Nbz8oMTI4JnMucGF0Y2hGbGFnJiZvKyssbj1uLmNvbmNhdChLbihzLmNoaWxkcmVuLHQpKSk6KHR8fHMudHlwZSE9PVJvKSYmbi5wdXNoKHMpfWlmKG8+MSlmb3IobGV0IGU9MDtlPG4ubGVuZ3RoO2UrKyluW2VdLnBhdGNoRmxhZz0tMjtyZXR1cm4gbn1jb25zdCBXbj1lPT5lLnR5cGUuX19pc0tlZXBBbGl2ZSxHbj17bmFtZToiS2VlcEFsaXZlIixfX2lzS2VlcEFsaXZlOiEwLGluaGVyaXRSZWY6ITAscHJvcHM6e2luY2x1ZGU6W1N0cmluZyxSZWdFeHAsQXJyYXldLGV4Y2x1ZGU6W1N0cmluZyxSZWdFeHAsQXJyYXldLG1heDpbU3RyaW5nLE51bWJlcl19LHNldHVwKGUse3Nsb3RzOnR9KXtjb25zdCBuPW5ldyBNYXAsbz1uZXcgU2V0O2xldCByPW51bGw7Y29uc3Qgcz12cigpLGk9cy5zdXNwZW5zZSxsPXMuY3R4LHtyZW5kZXJlcjp7cDpjLG06YSx1bTp1LG86e2NyZWF0ZUVsZW1lbnQ6cH19fT1sLGY9cCgiZGl2Iik7ZnVuY3Rpb24gZChlKXtlbyhlKSx1KGUscyxpKX1mdW5jdGlvbiBoKGUpe24uZm9yRWFjaCgodCxuKT0+e2NvbnN0IG89cW4odC50eXBlKTshb3x8ZSYmZShvKXx8bShuKX0pfWZ1bmN0aW9uIG0oZSl7Y29uc3QgdD1uLmdldChlKTtyJiZ0LnR5cGU9PT1yLnR5cGU/ciYmZW8ocik6ZCh0KSxuLmRlbGV0ZShlKSxvLmRlbGV0ZShlKX1sLmFjdGl2YXRlPShlLHQsbixvLHIpPT57Y29uc3Qgcz1lLmNvbXBvbmVudDthKGUsdCxuLDAsaSksYyhzLnZub2RlLGUsdCxuLHMsaSxvLHIpLHZvKCgpPT57cy5pc0RlYWN0aXZhdGVkPSExLHMuYSYmSihzLmEpO2NvbnN0IHQ9ZS5wcm9wcyYmZS5wcm9wcy5vblZub2RlTW91bnRlZDt0JiZTbyh0LHMucGFyZW50LGUpfSxpKX0sbC5kZWFjdGl2YXRlPWU9Pntjb25zdCB0PWUuY29tcG9uZW50O2EoZSxmLG51bGwsMSxpKSx2bygoKT0+e3QuZGEmJkoodC5kYSk7Y29uc3Qgbj1lLnByb3BzJiZlLnByb3BzLm9uVm5vZGVVbm1vdW50ZWQ7biYmU28obix0LnBhcmVudCxlKSx0LmlzRGVhY3RpdmF0ZWQ9ITB9LGkpfSxPbigoKT0+W2UuaW5jbHVkZSxlLmV4Y2x1ZGVdLChbZSx0XSk9PntlJiZoKHQ9PkpuKGUsdCkpLHQmJmgoZT0+IUpuKHQsZSkpfSx7Zmx1c2g6InBvc3QifSk7bGV0IGc9bnVsbDtjb25zdCB2PSgpPT57bnVsbCE9ZyYmbi5zZXQoZyx0byhzLnN1YlRyZWUpKX07cmV0dXJuIENuKHYpLHduKHYpLFRuKCgpPT57bi5mb3JFYWNoKGU9Pntjb25zdHtzdWJUcmVlOnQsc3VzcGVuc2U6bn09cyxvPXRvKHQpO2lmKGUudHlwZSE9PW8udHlwZSlkKGUpO2Vsc2V7ZW8obyk7Y29uc3QgZT1vLmNvbXBvbmVudC5kYTtlJiZ2byhlLG4pfX0pfSksKCk9PntpZihnPW51bGwsIXQuZGVmYXVsdClyZXR1cm4gbnVsbDtjb25zdCBzPXQuZGVmYXVsdCgpLGk9c1swXTtpZihzLmxlbmd0aD4xKXJldHVybiByPW51bGwscztpZighKERvKGkpJiYoNCZpLnNoYXBlRmxhZ3x8MTI4Jmkuc2hhcGVGbGFnKSkpcmV0dXJuIHI9bnVsbCxpO2xldCBsPXRvKGkpO2NvbnN0IGM9bC50eXBlLGE9cW4oYykse2luY2x1ZGU6dSxleGNsdWRlOnAsbWF4OmZ9PWU7aWYodSYmKCFhfHwhSm4odSxhKSl8fHAmJmEmJkpuKHAsYSkpcmV0dXJuIHI9bCxpO2NvbnN0IGQ9bnVsbD09bC5rZXk/YzpsLmtleSxoPW4uZ2V0KGQpO3JldHVybiBsLmVsJiYobD1xbyhsKSwxMjgmaS5zaGFwZUZsYWcmJihpLnNzQ29udGVudD1sKSksZz1kLGg/KGwuZWw9aC5lbCxsLmNvbXBvbmVudD1oLmNvbXBvbmVudCxsLnRyYW5zaXRpb24mJnpuKGwsbC50cmFuc2l0aW9uKSxsLnNoYXBlRmxhZ3w9NTEyLG8uZGVsZXRlKGQpLG8uYWRkKGQpKTooby5hZGQoZCksZiYmby5zaXplPnBhcnNlSW50KGYsMTApJiZtKG8udmFsdWVzKCkubmV4dCgpLnZhbHVlKSksbC5zaGFwZUZsYWd8PTI1NixyPWwsaX19fTtmdW5jdGlvbiBxbihlKXtyZXR1cm4gZS5kaXNwbGF5TmFtZXx8ZS5uYW1lfWZ1bmN0aW9uIEpuKGUsdCl7cmV0dXJuIE4oZSk/ZS5zb21lKGU9PkpuKGUsdCkpOk0oZSk/ZS5zcGxpdCgiLCIpLmluZGV4T2YodCk+LTE6ISFlLnRlc3QmJmUudGVzdCh0KX1mdW5jdGlvbiBZbihlLHQpe1FuKGUsImEiLHQpfWZ1bmN0aW9uIFpuKGUsdCl7UW4oZSwiZGEiLHQpfWZ1bmN0aW9uIFFuKGUsdCxuPWdyKXtjb25zdCBvPWUuX193ZGN8fChlLl9fd2RjPSgpPT57bGV0IHQ9bjtmb3IoO3Q7KXtpZih0LmlzRGVhY3RpdmF0ZWQpcmV0dXJuO3Q9dC5wYXJlbnR9ZSgpfSk7aWYoX24odCxvLG4pLG4pe2xldCBlPW4ucGFyZW50O2Zvcig7ZSYmZS5wYXJlbnQ7KVduKGUucGFyZW50LnZub2RlKSYmWG4obyx0LG4sZSksZT1lLnBhcmVudH19ZnVuY3Rpb24gWG4oZSx0LG4sbyl7Y29uc3Qgcj1fbih0LGUsbywhMCk7Tm4oKCk9PntrKG9bdF0scil9LG4pfWZ1bmN0aW9uIGVvKGUpe2xldCB0PWUuc2hhcGVGbGFnOzI1NiZ0JiYodC09MjU2KSw1MTImdCYmKHQtPTUxMiksZS5zaGFwZUZsYWc9dH1mdW5jdGlvbiB0byhlKXtyZXR1cm4gMTI4JmUuc2hhcGVGbGFnP2Uuc3NDb250ZW50OmV9Y29uc3Qgbm89ZT0+Il8iPT09ZVswXXx8IiRzdGFibGUiPT09ZSxvbz1lPT5OKGUpP2UubWFwKFlvKTpbWW8oZSldLHJvPShlLHQsbik9PmNuKGU9Pm9vKHQoZSkpLG4pLHNvPShlLHQpPT57Y29uc3Qgbj1lLl9jdHg7Zm9yKGNvbnN0IG8gaW4gZSl7aWYobm8obykpY29udGludWU7Y29uc3Qgcj1lW29dO2lmKEEocikpdFtvXT1ybygwLHIsbik7ZWxzZSBpZihudWxsIT1yKXtjb25zdCBlPW9vKHIpO3Rbb109KCk9PmV9fX0saW89KGUsdCk9Pntjb25zdCBuPW9vKHQpO2Uuc2xvdHMuZGVmYXVsdD0oKT0+bn07ZnVuY3Rpb24gbG8oZSx0LG4sbyl7Y29uc3Qgcj1lLmRpcnMscz10JiZ0LmRpcnM7Zm9yKGxldCBpPTA7aTxyLmxlbmd0aDtpKyspe2NvbnN0IGw9cltpXTtzJiYobC5vbGRWYWx1ZT1zW2ldLnZhbHVlKTtjb25zdCBjPWwuZGlyW29dO2MmJmJ0KGMsbiw4LFtlLmVsLGwsZSx0XSl9fWZ1bmN0aW9uIGNvKCl7cmV0dXJue2FwcDpudWxsLGNvbmZpZzp7aXNOYXRpdmVUYWc6YixwZXJmb3JtYW5jZTohMSxnbG9iYWxQcm9wZXJ0aWVzOnt9LG9wdGlvbk1lcmdlU3RyYXRlZ2llczp7fSxpc0N1c3RvbUVsZW1lbnQ6YixlcnJvckhhbmRsZXI6dm9pZCAwLHdhcm5IYW5kbGVyOnZvaWQgMH0sbWl4aW5zOltdLGNvbXBvbmVudHM6e30sZGlyZWN0aXZlczp7fSxwcm92aWRlczpPYmplY3QuY3JlYXRlKG51bGwpfX1sZXQgYW89MDtmdW5jdGlvbiB1byhlLHQpe3JldHVybiBmdW5jdGlvbihuLG89bnVsbCl7bnVsbD09b3x8UihvKXx8KG89bnVsbCk7Y29uc3Qgcj1jbygpLHM9bmV3IFNldDtsZXQgaT0hMTtjb25zdCBsPXIuYXBwPXtfdWlkOmFvKyssX2NvbXBvbmVudDpuLF9wcm9wczpvLF9jb250YWluZXI6bnVsbCxfY29udGV4dDpyLHZlcnNpb246TXIsZ2V0IGNvbmZpZygpe3JldHVybiByLmNvbmZpZ30sc2V0IGNvbmZpZyhlKXt9LHVzZTooZSwuLi50KT0+KHMuaGFzKGUpfHwoZSYmQShlLmluc3RhbGwpPyhzLmFkZChlKSxlLmluc3RhbGwobCwuLi50KSk6QShlKSYmKHMuYWRkKGUpLGUobCwuLi50KSkpLGwpLG1peGluOmU9PihyLm1peGlucy5pbmNsdWRlcyhlKXx8KHIubWl4aW5zLnB1c2goZSksKGUucHJvcHN8fGUuZW1pdHMpJiYoci5kZW9wdD0hMCkpLGwpLGNvbXBvbmVudDooZSx0KT0+dD8oci5jb21wb25lbnRzW2VdPXQsbCk6ci5jb21wb25lbnRzW2VdLGRpcmVjdGl2ZTooZSx0KT0+dD8oci5kaXJlY3RpdmVzW2VdPXQsbCk6ci5kaXJlY3RpdmVzW2VdLG1vdW50KHMsYyl7aWYoIWkpe2NvbnN0IGE9R28obixvKTtyZXR1cm4gYS5hcHBDb250ZXh0PXIsYyYmdD90KGEscyk6ZShhLHMpLGk9ITAsbC5fY29udGFpbmVyPXMscy5fX3Z1ZV9hcHBfXz1sLGEuY29tcG9uZW50LnByb3h5fX0sdW5tb3VudCgpe2kmJmUobnVsbCxsLl9jb250YWluZXIpfSxwcm92aWRlOihlLHQpPT4oci5wcm92aWRlc1tlXT10LGwpfTtyZXR1cm4gbH19bGV0IHBvPSExO2NvbnN0IGZvPWU9Pi9zdmcvLnRlc3QoZS5uYW1lc3BhY2VVUkkpJiYiZm9yZWlnbk9iamVjdCIhPT1lLnRhZ05hbWUsaG89ZT0+OD09PWUubm9kZVR5cGU7ZnVuY3Rpb24gbW8oZSl7Y29uc3R7bXQ6dCxwOm4sbzp7cGF0Y2hQcm9wOm8sbmV4dFNpYmxpbmc6cixwYXJlbnROb2RlOnMscmVtb3ZlOmksaW5zZXJ0OmwsY3JlYXRlQ29tbWVudDpjfX09ZSxhPShuLG8saSxsLGM9ITEpPT57Y29uc3QgbT1obyhuKSYmIlsiPT09bi5kYXRhLGc9KCk9PmQobixvLGksbCxtKSx7dHlwZTp2LHJlZjp5LHNoYXBlRmxhZzpifT1vLF89bi5ub2RlVHlwZTtvLmVsPW47bGV0IHg9bnVsbDtzd2l0Y2godil7Y2FzZSBPbzozIT09Xz94PWcoKToobi5kYXRhIT09by5jaGlsZHJlbiYmKHBvPSEwLG4uZGF0YT1vLmNoaWxkcmVuKSx4PXIobikpO2JyZWFrO2Nhc2UgUm86eD04IT09X3x8bT9nKCk6cihuKTticmVhaztjYXNlIEJvOmlmKDE9PT1fKXt4PW47Y29uc3QgZT0hby5jaGlsZHJlbi5sZW5ndGg7Zm9yKGxldCB0PTA7dDxvLnN0YXRpY0NvdW50O3QrKyllJiYoby5jaGlsZHJlbis9eC5vdXRlckhUTUwpLHQ9PT1vLnN0YXRpY0NvdW50LTEmJihvLmFuY2hvcj14KSx4PXIoeCk7cmV0dXJuIHh9eD1nKCk7YnJlYWs7Y2FzZSBNbzp4PW0/ZihuLG8saSxsLGMpOmcoKTticmVhaztkZWZhdWx0OmlmKDEmYil4PTEhPT1ffHxvLnR5cGUhPT1uLnRhZ05hbWUudG9Mb3dlckNhc2UoKT9nKCk6dShuLG8saSxsLGMpO2Vsc2UgaWYoNiZiKXtjb25zdCBlPXMobiksYT0oKT0+e3QobyxlLG51bGwsaSxsLGZvKGUpLGMpfSx1PW8udHlwZS5fX2FzeW5jTG9hZGVyO3U/dSgpLnRoZW4oYSk6YSgpLHg9bT9oKG4pOnIobil9ZWxzZSA2NCZiP3g9OCE9PV8/ZygpOm8udHlwZS5oeWRyYXRlKG4sbyxpLGwsYyxlLHApOjEyOCZiJiYoeD1vLnR5cGUuaHlkcmF0ZShuLG8saSxsLGZvKHMobikpLGMsZSxhKSl9cmV0dXJuIG51bGwhPXkmJmkmJnlvKHksbnVsbCxpLGwsbykseH0sdT0oZSx0LG4scixzKT0+e3M9c3x8ISF0LmR5bmFtaWNDaGlsZHJlbjtjb25zdHtwcm9wczpsLHBhdGNoRmxhZzpjLHNoYXBlRmxhZzphLGRpcnM6dX09dDtpZigtMSE9PWMpe2lmKHUmJmxvKHQsbnVsbCxuLCJjcmVhdGVkIiksbClpZighc3x8MTYmY3x8MzImYylmb3IoY29uc3QgdCBpbiBsKSFVKHQpJiZ4KHQpJiZvKGUsdCxudWxsLGxbdF0pO2Vsc2UgbC5vbkNsaWNrJiZvKGUsIm9uQ2xpY2siLG51bGwsbC5vbkNsaWNrKTtsZXQgZjtpZigoZj1sJiZsLm9uVm5vZGVCZWZvcmVNb3VudCkmJlNvKGYsbix0KSx1JiZsbyh0LG51bGwsbiwiYmVmb3JlTW91bnQiKSwoKGY9bCYmbC5vblZub2RlTW91bnRlZCl8fHUpJiZvbigoKT0+e2YmJlNvKGYsbix0KSx1JiZsbyh0LG51bGwsbiwibW91bnRlZCIpfSxyKSwxNiZhJiYoIWx8fCFsLmlubmVySFRNTCYmIWwudGV4dENvbnRlbnQpKXtsZXQgbz1wKGUuZmlyc3RDaGlsZCx0LGUsbixyLHMpO2Zvcig7bzspe3BvPSEwO2NvbnN0IGU9bztvPW8ubmV4dFNpYmxpbmcsaShlKX19ZWxzZSA4JmEmJmUudGV4dENvbnRlbnQhPT10LmNoaWxkcmVuJiYocG89ITAsZS50ZXh0Q29udGVudD10LmNoaWxkcmVuKX1yZXR1cm4gZS5uZXh0U2libGluZ30scD0oZSx0LG8scixzLGkpPT57aT1pfHwhIXQuZHluYW1pY0NoaWxkcmVuO2NvbnN0IGw9dC5jaGlsZHJlbixjPWwubGVuZ3RoO2ZvcihsZXQgdD0wO3Q8Yzt0Kyspe2NvbnN0IGM9aT9sW3RdOmxbdF09WW8obFt0XSk7ZT9lPWEoZSxjLHIscyxpKToocG89ITAsbihudWxsLGMsbyxudWxsLHIscyxmbyhvKSkpfXJldHVybiBlfSxmPShlLHQsbixvLGkpPT57Y29uc3QgYT1zKGUpLHU9cChyKGUpLHQsYSxuLG8saSk7cmV0dXJuIHUmJmhvKHUpJiYiXSI9PT11LmRhdGE/cih0LmFuY2hvcj11KToocG89ITAsbCh0LmFuY2hvcj1jKCJdIiksYSx1KSx1KX0sZD0oZSx0LG8sbCxjKT0+e2lmKHBvPSEwLHQuZWw9bnVsbCxjKXtjb25zdCB0PWgoZSk7Zm9yKDs7KXtjb25zdCBuPXIoZSk7aWYoIW58fG49PT10KWJyZWFrO2kobil9fWNvbnN0IGE9cihlKSx1PXMoZSk7cmV0dXJuIGkoZSksbihudWxsLHQsdSxhLG8sbCxmbyh1KSksYX0saD1lPT57bGV0IHQ9MDtmb3IoO2U7KWlmKChlPXIoZSkpJiZobyhlKSYmKCJbIj09PWUuZGF0YSYmdCsrLCJdIj09PWUuZGF0YSkpe2lmKDA9PT10KXJldHVybiByKGUpO3QtLX1yZXR1cm4gZX07cmV0dXJuWyhlLHQpPT57cG89ITEsYSh0LmZpcnN0Q2hpbGQsZSxudWxsLG51bGwpLFV0KCkscG8mJmNvbnNvbGUuZXJyb3IoIkh5ZHJhdGlvbiBjb21wbGV0ZWQgYnV0IGNvbnRhaW5zIG1pc21hdGNoZXMuIil9LGFdfWNvbnN0IGdvPXtzY2hlZHVsZXI6QnQsYWxsb3dSZWN1cnNlOiEwfSx2bz1vbix5bz0oZSx0LG4sbyxyKT0+e2lmKE4oZSkpcmV0dXJuIHZvaWQgZS5mb3JFYWNoKChlLHMpPT55byhlLHQmJihOKHQpP3Rbc106dCksbixvLHIpKTtsZXQgcztzPXI/NCZyLnNoYXBlRmxhZz9yLmNvbXBvbmVudC5wcm94eTpyLmVsOm51bGw7Y29uc3R7aTppLHI6bH09ZSxjPXQmJnQucixhPWkucmVmcz09PWc/aS5yZWZzPXt9OmkucmVmcyx1PWkuc2V0dXBTdGF0ZTtpZihudWxsIT1jJiZjIT09bCYmKE0oYyk/KGFbY109bnVsbCxUKHUsYykmJih1W2NdPW51bGwpKTpydChjKSYmKGMudmFsdWU9bnVsbCkpLE0obCkpe2NvbnN0IGU9KCk9PnthW2xdPXMsVCh1LGwpJiYodVtsXT1zKX07cz8oZS5pZD0tMSx2byhlLG8pKTplKCl9ZWxzZSBpZihydChsKSl7Y29uc3QgZT0oKT0+e2wudmFsdWU9c307cz8oZS5pZD0tMSx2byhlLG8pKTplKCl9ZWxzZSBBKGwpJiZ5dChsLG4sMTIsW3MsYV0pfTtmdW5jdGlvbiBibyhlKXtyZXR1cm4geG8oZSl9ZnVuY3Rpb24gX28oZSl7cmV0dXJuIHhvKGUsbW8pfWZ1bmN0aW9uIHhvKGUsdCl7Y29uc3R7aW5zZXJ0Om4scmVtb3ZlOm8scGF0Y2hQcm9wOnIsZm9yY2VQYXRjaFByb3A6cyxjcmVhdGVFbGVtZW50OmksY3JlYXRlVGV4dDpsLGNyZWF0ZUNvbW1lbnQ6YyxzZXRUZXh0OmEsc2V0RWxlbWVudFRleHQ6dSxwYXJlbnROb2RlOnAsbmV4dFNpYmxpbmc6ZixzZXRTY29wZUlkOmQ9eSxjbG9uZU5vZGU6aCxpbnNlcnRTdGF0aWNDb250ZW50Om19PWUsYj0oZSx0LG4sbz1udWxsLHI9bnVsbCxzPW51bGwsaT0hMSxsPSExKT0+e2UmJiFIbyhlLHQpJiYobz1YKGUpLFcoZSxyLHMsITApLGU9bnVsbCksLTI9PT10LnBhdGNoRmxhZyYmKGw9ITEsdC5keW5hbWljQ2hpbGRyZW49bnVsbCk7Y29uc3R7dHlwZTpjLHJlZjphLHNoYXBlRmxhZzp1fT10O3N3aXRjaChjKXtjYXNlIE9vOl8oZSx0LG4sbyk7YnJlYWs7Y2FzZSBSbzp4KGUsdCxuLG8pO2JyZWFrO2Nhc2UgQm86bnVsbD09ZSYmUyh0LG4sbyxpKTticmVhaztjYXNlIE1vOk0oZSx0LG4sbyxyLHMsaSxsKTticmVhaztkZWZhdWx0OjEmdT9rKGUsdCxuLG8scixzLGksbCk6NiZ1P08oZSx0LG4sbyxyLHMsaSxsKTooNjQmdXx8MTI4JnUpJiZjLnByb2Nlc3MoZSx0LG4sbyxyLHMsaSxsLHRlKX1udWxsIT1hJiZyJiZ5byhhLGUmJmUucmVmLHIscyx0KX0sXz0oZSx0LG8scik9PntpZihudWxsPT1lKW4odC5lbD1sKHQuY2hpbGRyZW4pLG8scik7ZWxzZXtjb25zdCBuPXQuZWw9ZS5lbDt0LmNoaWxkcmVuIT09ZS5jaGlsZHJlbiYmYShuLHQuY2hpbGRyZW4pfX0seD0oZSx0LG8scik9PntudWxsPT1lP24odC5lbD1jKHQuY2hpbGRyZW58fCIiKSxvLHIpOnQuZWw9ZS5lbH0sUz0oZSx0LG4sbyk9PntbZS5lbCxlLmFuY2hvcl09bShlLmNoaWxkcmVuLHQsbixvKX0saz0oZSx0LG4sbyxyLHMsaSxsKT0+e2k9aXx8InN2ZyI9PT10LnR5cGUsbnVsbD09ZT93KHQsbixvLHIscyxpLGwpOkYoZSx0LHIscyxpLGwpfSx3PShlLHQsbyxzLGwsYyxhKT0+e2xldCBwLGY7Y29uc3R7dHlwZTpkLHByb3BzOm0sc2hhcGVGbGFnOmcsdHJhbnNpdGlvbjp2LHNjb3BlSWQ6eSxwYXRjaEZsYWc6YixkaXJzOl99PWU7aWYoZS5lbCYmdm9pZCAwIT09aCYmLTE9PT1iKXA9ZS5lbD1oKGUuZWwpO2Vsc2V7aWYocD1lLmVsPWkoZS50eXBlLGMsbSYmbS5pcyksOCZnP3UocCxlLmNoaWxkcmVuKToxNiZnJiZFKGUuY2hpbGRyZW4scCxudWxsLHMsbCxjJiYiZm9yZWlnbk9iamVjdCIhPT1kLGF8fCEhZS5keW5hbWljQ2hpbGRyZW4pLF8mJmxvKGUsbnVsbCxzLCJjcmVhdGVkIiksbSl7Zm9yKGNvbnN0IHQgaW4gbSlVKHQpfHxyKHAsdCxudWxsLG1bdF0sYyxlLmNoaWxkcmVuLHMsbCxRKTsoZj1tLm9uVm5vZGVCZWZvcmVNb3VudCkmJlNvKGYscyxlKX1OKHAseSxlLHMpfV8mJmxvKGUsbnVsbCxzLCJiZWZvcmVNb3VudCIpO2NvbnN0IHg9KCFsfHxsJiYhbC5wZW5kaW5nQnJhbmNoKSYmdiYmIXYucGVyc2lzdGVkO3gmJnYuYmVmb3JlRW50ZXIocCksbihwLHQsbyksKChmPW0mJm0ub25Wbm9kZU1vdW50ZWQpfHx4fHxfKSYmdm8oKCk9PntmJiZTbyhmLHMsZSkseCYmdi5lbnRlcihwKSxfJiZsbyhlLG51bGwscywibW91bnRlZCIpfSxsKX0sTj0oZSx0LG4sbyk9PntpZih0JiZkKGUsdCksbyl7Y29uc3Qgcj1vLnR5cGUuX19zY29wZUlkO3ImJnIhPT10JiZkKGUscisiLXMiKSxuPT09by5zdWJUcmVlJiZOKGUsby52bm9kZS5zY29wZUlkLG8udm5vZGUsby5wYXJlbnQpfX0sRT0oZSx0LG4sbyxyLHMsaSxsPTApPT57Zm9yKGxldCBjPWw7YzxlLmxlbmd0aDtjKyspe2NvbnN0IGw9ZVtjXT1pP1pvKGVbY10pOllvKGVbY10pO2IobnVsbCxsLHQsbixvLHIscyxpKX19LEY9KGUsdCxuLG8saSxsKT0+e2NvbnN0IGM9dC5lbD1lLmVsO2xldHtwYXRjaEZsYWc6YSxkeW5hbWljQ2hpbGRyZW46cCxkaXJzOmZ9PXQ7YXw9MTYmZS5wYXRjaEZsYWc7Y29uc3QgZD1lLnByb3BzfHxnLGg9dC5wcm9wc3x8ZztsZXQgbTtpZigobT1oLm9uVm5vZGVCZWZvcmVVcGRhdGUpJiZTbyhtLG4sdCxlKSxmJiZsbyh0LGUsbiwiYmVmb3JlVXBkYXRlIiksYT4wKXtpZigxNiZhKUEoYyx0LGQsaCxuLG8saSk7ZWxzZSBpZigyJmEmJmQuY2xhc3MhPT1oLmNsYXNzJiZyKGMsImNsYXNzIixudWxsLGguY2xhc3MsaSksNCZhJiZyKGMsInN0eWxlIixkLnN0eWxlLGguc3R5bGUsaSksOCZhKXtjb25zdCBsPXQuZHluYW1pY1Byb3BzO2ZvcihsZXQgdD0wO3Q8bC5sZW5ndGg7dCsrKXtjb25zdCBhPWxbdF0sdT1kW2FdLHA9aFthXTsocCE9PXV8fHMmJnMoYyxhKSkmJnIoYyxhLHUscCxpLGUuY2hpbGRyZW4sbixvLFEpfX0xJmEmJmUuY2hpbGRyZW4hPT10LmNoaWxkcmVuJiZ1KGMsdC5jaGlsZHJlbil9ZWxzZSBsfHxudWxsIT1wfHxBKGMsdCxkLGgsbixvLGkpO2NvbnN0IHY9aSYmImZvcmVpZ25PYmplY3QiIT09dC50eXBlO3A/JChlLmR5bmFtaWNDaGlsZHJlbixwLGMsbixvLHYpOmx8fFYoZSx0LGMsbnVsbCxuLG8sdiksKChtPWgub25Wbm9kZVVwZGF0ZWQpfHxmKSYmdm8oKCk9PnttJiZTbyhtLG4sdCxlKSxmJiZsbyh0LGUsbiwidXBkYXRlZCIpfSxvKX0sJD0oZSx0LG4sbyxyLHMpPT57Zm9yKGxldCBpPTA7aTx0Lmxlbmd0aDtpKyspe2NvbnN0IGw9ZVtpXSxjPXRbaV0sYT1sLnR5cGU9PT1Nb3x8IUhvKGwsYyl8fDYmbC5zaGFwZUZsYWd8fDY0Jmwuc2hhcGVGbGFnP3AobC5lbCk6bjtiKGwsYyxhLG51bGwsbyxyLHMsITApfX0sQT0oZSx0LG4sbyxpLGwsYyk9PntpZihuIT09byl7Zm9yKGNvbnN0IGEgaW4gbyl7aWYoVShhKSljb250aW51ZTtjb25zdCB1PW9bYV0scD1uW2FdOyh1IT09cHx8cyYmcyhlLGEpKSYmcihlLGEscCx1LGMsdC5jaGlsZHJlbixpLGwsUSl9aWYobiE9PWcpZm9yKGNvbnN0IHMgaW4gbilVKHMpfHxzIGluIG98fHIoZSxzLG5bc10sbnVsbCxjLHQuY2hpbGRyZW4saSxsLFEpfX0sTT0oZSx0LG8scixzLGksYyxhKT0+e2NvbnN0IHU9dC5lbD1lP2UuZWw6bCgiIikscD10LmFuY2hvcj1lP2UuYW5jaG9yOmwoIiIpO2xldHtwYXRjaEZsYWc6ZixkeW5hbWljQ2hpbGRyZW46ZH09dDtmPjAmJihhPSEwKSxudWxsPT1lPyhuKHUsbyxyKSxuKHAsbyxyKSxFKHQuY2hpbGRyZW4sbyxwLHMsaSxjLGEpKTpmPjAmJjY0JmYmJmQ/KCQoZS5keW5hbWljQ2hpbGRyZW4sZCxvLHMsaSxjKSwobnVsbCE9dC5rZXl8fHMmJnQ9PT1zLnN1YlRyZWUpJiZDbyhlLHQsITApKTpWKGUsdCxvLHAscyxpLGMsYSl9LE89KGUsdCxuLG8scixzLGksbCk9PntudWxsPT1lPzUxMiZ0LnNoYXBlRmxhZz9yLmN0eC5hY3RpdmF0ZSh0LG4sbyxpLGwpOlIodCxuLG8scixzLGksbCk6UChlLHQsbCl9LFI9KGUsdCxuLG8scixzLGkpPT57Y29uc3QgbD1lLmNvbXBvbmVudD1mdW5jdGlvbihlLHQsbil7Y29uc3Qgbz1lLnR5cGUscj0odD90LmFwcENvbnRleHQ6ZS5hcHBDb250ZXh0KXx8aHIscz17dWlkOm1yKyssdm5vZGU6ZSx0eXBlOm8scGFyZW50OnQsYXBwQ29udGV4dDpyLHJvb3Q6bnVsbCxuZXh0Om51bGwsc3ViVHJlZTpudWxsLHVwZGF0ZTpudWxsLHJlbmRlcjpudWxsLHByb3h5Om51bGwsd2l0aFByb3h5Om51bGwsZWZmZWN0czpudWxsLHByb3ZpZGVzOnQ/dC5wcm92aWRlczpPYmplY3QuY3JlYXRlKHIucHJvdmlkZXMpLGFjY2Vzc0NhY2hlOm51bGwscmVuZGVyQ2FjaGU6W10sY29tcG9uZW50czpudWxsLGRpcmVjdGl2ZXM6bnVsbCxwcm9wc09wdGlvbnM6bW4obyxyKSxlbWl0c09wdGlvbnM6enQobyxyKSxlbWl0Om51bGwsZW1pdHRlZDpudWxsLGN0eDpnLGRhdGE6Zyxwcm9wczpnLGF0dHJzOmcsc2xvdHM6ZyxyZWZzOmcsc2V0dXBTdGF0ZTpnLHNldHVwQ29udGV4dDpudWxsLHN1c3BlbnNlOm4sc3VzcGVuc2VJZDpuP24ucGVuZGluZ0lkOjAsYXN5bmNEZXA6bnVsbCxhc3luY1Jlc29sdmVkOiExLGlzTW91bnRlZDohMSxpc1VubW91bnRlZDohMSxpc0RlYWN0aXZhdGVkOiExLGJjOm51bGwsYzpudWxsLGJtOm51bGwsbTpudWxsLGJ1Om51bGwsdTpudWxsLHVtOm51bGwsYnVtOm51bGwsZGE6bnVsbCxhOm51bGwscnRnOm51bGwscnRjOm51bGwsZWM6bnVsbH07cmV0dXJuIHMuY3R4PXtfOnN9LHMucm9vdD10P3Qucm9vdDpzLHMuZW1pdD1IdC5iaW5kKG51bGwscyksc30oZSxvLHIpO2lmKFduKGUpJiYobC5jdHgucmVuZGVyZXI9dGUpLGZ1bmN0aW9uKGUsdD0hMSl7X3I9dDtjb25zdHtwcm9wczpuLGNoaWxkcmVuOm8sc2hhcGVGbGFnOnJ9PWUudm5vZGUscz00JnI7KGZ1bmN0aW9uKGUsdCxuLG89ITEpe2NvbnN0IHI9e30scz17fTtZKHMsem8sMSksZG4oZSx0LHIscyksZS5wcm9wcz1uP28/cjpZZShyKTplLnR5cGUucHJvcHM/cjpzLGUuYXR0cnM9c30pKGUsbixzLHQpLCgoZSx0KT0+e2lmKDMyJmUudm5vZGUuc2hhcGVGbGFnKXtjb25zdCBuPXQuXztuPyhlLnNsb3RzPXQsWSh0LCJfIixuKSk6c28odCxlLnNsb3RzPXt9KX1lbHNlIGUuc2xvdHM9e30sdCYmaW8oZSx0KTtZKGUuc2xvdHMsem8sMSl9KShlLG8pO2NvbnN0IGk9cz9mdW5jdGlvbihlLHQpe2NvbnN0IG49ZS50eXBlO2UuYWNjZXNzQ2FjaGU9T2JqZWN0LmNyZWF0ZShudWxsKSxlLnByb3h5PW5ldyBQcm94eShlLmN0eCxmcik7Y29uc3R7c2V0dXA6b309bjtpZihvKXtjb25zdCBuPWUuc2V0dXBDb250ZXh0PW8ubGVuZ3RoPjE/ZnVuY3Rpb24oZSl7cmV0dXJue2F0dHJzOmUuYXR0cnMsc2xvdHM6ZS5zbG90cyxlbWl0OmUuZW1pdH19KGUpOm51bGw7Z3I9ZSxhZSgpO2NvbnN0IHI9eXQobyxlLDAsW2UucHJvcHMsbl0pO2lmKHVlKCksZ3I9bnVsbCxCKHIpKXtpZih0KXJldHVybiByLnRoZW4odD0+e3hyKGUsdCl9KTtlLmFzeW5jRGVwPXJ9ZWxzZSB4cihlLHIpfWVsc2UgQ3IoZSl9KGUsdCk6dm9pZCAwO19yPSExfShsKSxsLmFzeW5jRGVwKXtpZihyJiZyLnJlZ2lzdGVyRGVwKGwsSSksIWUuZWwpe2NvbnN0IGU9bC5zdWJUcmVlPUdvKFJvKTt4KG51bGwsZSx0LG4pfX1lbHNlIEkobCxlLHQsbixyLHMsaSl9LFA9KGUsdCxuKT0+e2NvbnN0IG89dC5jb21wb25lbnQ9ZS5jb21wb25lbnQ7aWYoZnVuY3Rpb24oZSx0LG4pe2NvbnN0e3Byb3BzOm8sY2hpbGRyZW46cixjb21wb25lbnQ6c309ZSx7cHJvcHM6aSxjaGlsZHJlbjpsLHBhdGNoRmxhZzpjfT10LGE9cy5lbWl0c09wdGlvbnM7aWYodC5kaXJzfHx0LnRyYW5zaXRpb24pcmV0dXJuITA7aWYoIShuJiZjPjApKXJldHVybiEoIXImJiFsfHxsJiZsLiRzdGFibGUpfHxvIT09aSYmKG8/IWl8fFF0KG8saSxhKTohIWkpO2lmKDEwMjQmYylyZXR1cm4hMDtpZigxNiZjKXJldHVybiBvP1F0KG8saSxhKTohIWk7aWYoOCZjKXtjb25zdCBlPXQuZHluYW1pY1Byb3BzO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXtjb25zdCBuPWVbdF07aWYoaVtuXSE9PW9bbl0mJiFLdChhLG4pKXJldHVybiEwfX1yZXR1cm4hMX0oZSx0LG4pKXtpZihvLmFzeW5jRGVwJiYhby5hc3luY1Jlc29sdmVkKXJldHVybiB2b2lkIEwobyx0LG4pO28ubmV4dD10LGZ1bmN0aW9uKGUpe2NvbnN0IHQ9Q3QuaW5kZXhPZihlKTt0Pi0xJiYoQ3RbdF09bnVsbCl9KG8udXBkYXRlKSxvLnVwZGF0ZSgpfWVsc2UgdC5jb21wb25lbnQ9ZS5jb21wb25lbnQsdC5lbD1lLmVsLG8udm5vZGU9dH0sST0oZSx0LG4sbyxyLHMsaSk9PntlLnVwZGF0ZT1vZSgoZnVuY3Rpb24oKXtpZihlLmlzTW91bnRlZCl7bGV0IHQse25leHQ6bixidTpvLHU6bCxwYXJlbnQ6Yyx2bm9kZTphfT1lLHU9bjtuPyhuLmVsPWEuZWwsTChlLG4saSkpOm49YSxvJiZKKG8pLCh0PW4ucHJvcHMmJm4ucHJvcHMub25Wbm9kZUJlZm9yZVVwZGF0ZSkmJlNvKHQsYyxuLGEpO2NvbnN0IGY9cXQoZSksZD1lLnN1YlRyZWU7ZS5zdWJUcmVlPWYsYihkLGYscChkLmVsKSxYKGQpLGUscixzKSxuLmVsPWYuZWwsbnVsbD09PXUmJlh0KGUsZi5lbCksbCYmdm8obCxyKSwodD1uLnByb3BzJiZuLnByb3BzLm9uVm5vZGVVcGRhdGVkKSYmdm8oKCk9PntTbyh0LGMsbixhKX0scil9ZWxzZXtsZXQgaTtjb25zdHtlbDpsLHByb3BzOmN9PXQse2JtOmEsbTp1LHBhcmVudDpwfT1lO2EmJkooYSksKGk9YyYmYy5vblZub2RlQmVmb3JlTW91bnQpJiZTbyhpLHAsdCk7Y29uc3QgZj1lLnN1YlRyZWU9cXQoZSk7bCYmc2U/c2UodC5lbCxmLGUscik6KGIobnVsbCxmLG4sbyxlLHIscyksdC5lbD1mLmVsKSx1JiZ2byh1LHIpLChpPWMmJmMub25Wbm9kZU1vdW50ZWQpJiZ2bygoKT0+e1NvKGkscCx0KX0scik7Y29uc3R7YTpkfT1lO2QmJjI1NiZ0LnNoYXBlRmxhZyYmdm8oZCxyKSxlLmlzTW91bnRlZD0hMH19KSxnbyl9LEw9KGUsdCxuKT0+e3QuY29tcG9uZW50PWU7Y29uc3Qgbz1lLnZub2RlLnByb3BzO2Uudm5vZGU9dCxlLm5leHQ9bnVsbCxmdW5jdGlvbihlLHQsbixvKXtjb25zdHtwcm9wczpyLGF0dHJzOnMsdm5vZGU6e3BhdGNoRmxhZzppfX09ZSxsPW50KHIpLFtjXT1lLnByb3BzT3B0aW9ucztpZighKG98fGk+MCl8fDE2Jmkpe2xldCBvO2RuKGUsdCxyLHMpO2Zvcihjb25zdCBzIGluIGwpdCYmKFQodCxzKXx8KG89SyhzKSkhPT1zJiZUKHQsbykpfHwoYz8hbnx8dm9pZCAwPT09bltzXSYmdm9pZCAwPT09bltvXXx8KHJbc109aG4oYyx0fHxnLHMsdm9pZCAwLGUpKTpkZWxldGUgcltzXSk7aWYocyE9PWwpZm9yKGNvbnN0IGUgaW4gcyl0JiZUKHQsZSl8fGRlbGV0ZSBzW2VdfWVsc2UgaWYoOCZpKXtjb25zdCBuPWUudm5vZGUuZHluYW1pY1Byb3BzO2ZvcihsZXQgbz0wO288bi5sZW5ndGg7bysrKXtjb25zdCBpPW5bb10sYT10W2ldO2lmKGMpaWYoVChzLGkpKXNbaV09YTtlbHNle2NvbnN0IHQ9SChpKTtyW3RdPWhuKGMsbCx0LGEsZSl9ZWxzZSBzW2ldPWF9fWZlKGUsInNldCIsIiRhdHRycyIpfShlLHQucHJvcHMsbyxuKSwoKGUsdCk9Pntjb25zdHt2bm9kZTpuLHNsb3RzOm99PWU7bGV0IHI9ITAscz1nO2lmKDMyJm4uc2hhcGVGbGFnKXtjb25zdCBlPXQuXztlPzE9PT1lP3I9ITE6QyhvLHQpOihyPSF0LiRzdGFibGUsc28odCxvKSkscz10fWVsc2UgdCYmKGlvKGUsdCkscz17ZGVmYXVsdDoxfSk7aWYocilmb3IoY29uc3QgZSBpbiBvKW5vKGUpfHxlIGluIHN8fGRlbGV0ZSBvW2VdfSkoZSx0LmNoaWxkcmVuKSxWdCh2b2lkIDAsZS51cGRhdGUpfSxWPShlLHQsbixvLHIscyxpLGw9ITEpPT57Y29uc3QgYz1lJiZlLmNoaWxkcmVuLGE9ZT9lLnNoYXBlRmxhZzowLHA9dC5jaGlsZHJlbix7cGF0Y2hGbGFnOmYsc2hhcGVGbGFnOmR9PXQ7aWYoZj4wKXtpZigxMjgmZilyZXR1cm4gdm9pZCBEKGMscCxuLG8scixzLGksbCk7aWYoMjU2JmYpcmV0dXJuIHZvaWQgaihjLHAsbixvLHIscyxpLGwpfTgmZD8oMTYmYSYmUShjLHIscykscCE9PWMmJnUobixwKSk6MTYmYT8xNiZkP0QoYyxwLG4sbyxyLHMsaSxsKTpRKGMscixzLCEwKTooOCZhJiZ1KG4sIiIpLDE2JmQmJkUocCxuLG8scixzLGksbCkpfSxqPShlLHQsbixvLHIscyxpLGwpPT57Y29uc3QgYz0oZT1lfHx2KS5sZW5ndGgsYT0odD10fHx2KS5sZW5ndGgsdT1NYXRoLm1pbihjLGEpO2xldCBwO2ZvcihwPTA7cDx1O3ArKyl7Y29uc3Qgbz10W3BdPWw/Wm8odFtwXSk6WW8odFtwXSk7YihlW3BdLG8sbixudWxsLHIscyxpLGwpfWM+YT9RKGUscixzLCEwLCExLHUpOkUodCxuLG8scixzLGksbCx1KX0sRD0oZSx0LG4sbyxyLHMsaSxsKT0+e2xldCBjPTA7Y29uc3QgYT10Lmxlbmd0aDtsZXQgdT1lLmxlbmd0aC0xLHA9YS0xO2Zvcig7Yzw9dSYmYzw9cDspe2NvbnN0IG89ZVtjXSxhPXRbY109bD9abyh0W2NdKTpZbyh0W2NdKTtpZighSG8obyxhKSlicmVhaztiKG8sYSxuLG51bGwscixzLGksbCksYysrfWZvcig7Yzw9dSYmYzw9cDspe2NvbnN0IG89ZVt1XSxjPXRbcF09bD9abyh0W3BdKTpZbyh0W3BdKTtpZighSG8obyxjKSlicmVhaztiKG8sYyxuLG51bGwscixzLGksbCksdS0tLHAtLX1pZihjPnUpe2lmKGM8PXApe2NvbnN0IGU9cCsxLHU9ZTxhP3RbZV0uZWw6bztmb3IoO2M8PXA7KWIobnVsbCx0W2NdPWw/Wm8odFtjXSk6WW8odFtjXSksbix1LHIscyxpKSxjKyt9fWVsc2UgaWYoYz5wKWZvcig7Yzw9dTspVyhlW2NdLHIscywhMCksYysrO2Vsc2V7Y29uc3QgZj1jLGQ9YyxoPW5ldyBNYXA7Zm9yKGM9ZDtjPD1wO2MrKyl7Y29uc3QgZT10W2NdPWw/Wm8odFtjXSk6WW8odFtjXSk7bnVsbCE9ZS5rZXkmJmguc2V0KGUua2V5LGMpfWxldCBtLGc9MDtjb25zdCB5PXAtZCsxO2xldCBfPSExLHg9MDtjb25zdCBTPW5ldyBBcnJheSh5KTtmb3IoYz0wO2M8eTtjKyspU1tjXT0wO2ZvcihjPWY7Yzw9dTtjKyspe2NvbnN0IG89ZVtjXTtpZihnPj15KXtXKG8scixzLCEwKTtjb250aW51ZX1sZXQgYTtpZihudWxsIT1vLmtleSlhPWguZ2V0KG8ua2V5KTtlbHNlIGZvcihtPWQ7bTw9cDttKyspaWYoMD09PVNbbS1kXSYmSG8obyx0W21dKSl7YT1tO2JyZWFrfXZvaWQgMD09PWE/VyhvLHIscywhMCk6KFNbYS1kXT1jKzEsYT49eD94PWE6Xz0hMCxiKG8sdFthXSxuLG51bGwscixzLGksbCksZysrKX1jb25zdCBDPV8/ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLnNsaWNlKCksbj1bMF07bGV0IG8scixzLGksbDtjb25zdCBjPWUubGVuZ3RoO2ZvcihvPTA7bzxjO28rKyl7Y29uc3QgYz1lW29dO2lmKDAhPT1jKXtpZihyPW5bbi5sZW5ndGgtMV0sZVtyXTxjKXt0W29dPXIsbi5wdXNoKG8pO2NvbnRpbnVlfWZvcihzPTAsaT1uLmxlbmd0aC0xO3M8aTspbD0ocytpKS8yfDAsZVtuW2xdXTxjP3M9bCsxOmk9bDtjPGVbbltzXV0mJihzPjAmJih0W29dPW5bcy0xXSksbltzXT1vKX19cz1uLmxlbmd0aCxpPW5bcy0xXTtmb3IoO3MtLSA+MDspbltzXT1pLGk9dFtpXTtyZXR1cm4gbn0oUyk6djtmb3IobT1DLmxlbmd0aC0xLGM9eS0xO2M+PTA7Yy0tKXtjb25zdCBlPWQrYyxsPXRbZV0sdT1lKzE8YT90W2UrMV0uZWw6bzswPT09U1tjXT9iKG51bGwsbCxuLHUscixzLGkpOl8mJihtPDB8fGMhPT1DW21dP3oobCxuLHUsMik6bS0tKX19fSx6PShlLHQsbyxyLHM9bnVsbCk9Pntjb25zdHtlbDppLHR5cGU6bCx0cmFuc2l0aW9uOmMsY2hpbGRyZW46YSxzaGFwZUZsYWc6dX09ZTtpZig2JnUpcmV0dXJuIHZvaWQgeihlLmNvbXBvbmVudC5zdWJUcmVlLHQsbyxyKTtpZigxMjgmdSlyZXR1cm4gdm9pZCBlLnN1c3BlbnNlLm1vdmUodCxvLHIpO2lmKDY0JnUpcmV0dXJuIHZvaWQgbC5tb3ZlKGUsdCxvLHRlKTtpZihsPT09TW8pe24oaSx0LG8pO2ZvcihsZXQgZT0wO2U8YS5sZW5ndGg7ZSsrKXooYVtlXSx0LG8scik7cmV0dXJuIHZvaWQgbihlLmFuY2hvcix0LG8pfWlmKDIhPT1yJiYxJnUmJmMpaWYoMD09PXIpYy5iZWZvcmVFbnRlcihpKSxuKGksdCxvKSx2bygoKT0+Yy5lbnRlcihpKSxzKTtlbHNle2NvbnN0e2xlYXZlOmUsZGVsYXlMZWF2ZTpyLGFmdGVyTGVhdmU6c309YyxsPSgpPT5uKGksdCxvKSxhPSgpPT57ZShpLCgpPT57bCgpLHMmJnMoKX0pfTtyP3IoaSxsLGEpOmEoKX1lbHNlIG4oaSx0LG8pfSxXPShlLHQsbixvPSExLHI9ITEpPT57Y29uc3R7dHlwZTpzLHByb3BzOmkscmVmOmwsY2hpbGRyZW46YyxkeW5hbWljQ2hpbGRyZW46YSxzaGFwZUZsYWc6dSxwYXRjaEZsYWc6cCxkaXJzOmZ9PWU7aWYobnVsbCE9bCYmdCYmeW8obCxudWxsLHQsbixudWxsKSwyNTYmdSlyZXR1cm4gdm9pZCB0LmN0eC5kZWFjdGl2YXRlKGUpO2NvbnN0IGQ9MSZ1JiZmO2xldCBoO2lmKChoPWkmJmkub25Wbm9kZUJlZm9yZVVubW91bnQpJiZTbyhoLHQsZSksNiZ1KVooZS5jb21wb25lbnQsbixvKTtlbHNle2lmKDEyOCZ1KXJldHVybiB2b2lkIGUuc3VzcGVuc2UudW5tb3VudChuLG8pO2QmJmxvKGUsbnVsbCx0LCJiZWZvcmVVbm1vdW50IiksYSYmKHMhPT1Nb3x8cD4wJiY2NCZwKT9RKGEsdCxuLCExLCEwKToocz09PU1vJiYoMTI4JnB8fDI1NiZwKXx8IXImJjE2JnUpJiZRKGMsdCxuKSw2NCZ1JiYob3x8IWtvKGUucHJvcHMpKSYmZS50eXBlLnJlbW92ZShlLHRlKSxvJiZHKGUpfSgoaD1pJiZpLm9uVm5vZGVVbm1vdW50ZWQpfHxkKSYmdm8oKCk9PntoJiZTbyhoLHQsZSksZCYmbG8oZSxudWxsLHQsInVubW91bnRlZCIpfSxuKX0sRz1lPT57Y29uc3R7dHlwZTp0LGVsOm4sYW5jaG9yOnIsdHJhbnNpdGlvbjpzfT1lO2lmKHQ9PT1NbylyZXR1cm4gdm9pZCBxKG4scik7Y29uc3QgaT0oKT0+e28obikscyYmIXMucGVyc2lzdGVkJiZzLmFmdGVyTGVhdmUmJnMuYWZ0ZXJMZWF2ZSgpfTtpZigxJmUuc2hhcGVGbGFnJiZzJiYhcy5wZXJzaXN0ZWQpe2NvbnN0e2xlYXZlOnQsZGVsYXlMZWF2ZTpvfT1zLHI9KCk9PnQobixpKTtvP28oZS5lbCxpLHIpOnIoKX1lbHNlIGkoKX0scT0oZSx0KT0+e2xldCBuO2Zvcig7ZSE9PXQ7KW49ZihlKSxvKGUpLGU9bjtvKHQpfSxaPShlLHQsbik9Pntjb25zdHtidW06byxlZmZlY3RzOnIsdXBkYXRlOnMsc3ViVHJlZTppLHVtOmx9PWU7aWYobyYmSihvKSxyKWZvcihsZXQgZT0wO2U8ci5sZW5ndGg7ZSsrKXJlKHJbZV0pO3MmJihyZShzKSxXKGksZSx0LG4pKSxsJiZ2byhsLHQpLHZvKCgpPT57ZS5pc1VubW91bnRlZD0hMH0sdCksdCYmdC5wZW5kaW5nQnJhbmNoJiYhdC5pc1VubW91bnRlZCYmZS5hc3luY0RlcCYmIWUuYXN5bmNSZXNvbHZlZCYmZS5zdXNwZW5zZUlkPT09dC5wZW5kaW5nSWQmJih0LmRlcHMtLSwwPT09dC5kZXBzJiZ0LnJlc29sdmUoKSl9LFE9KGUsdCxuLG89ITEscj0hMSxzPTApPT57Zm9yKGxldCBpPXM7aTxlLmxlbmd0aDtpKyspVyhlW2ldLHQsbixvLHIpfSxYPWU9PjYmZS5zaGFwZUZsYWc/WChlLmNvbXBvbmVudC5zdWJUcmVlKToxMjgmZS5zaGFwZUZsYWc/ZS5zdXNwZW5zZS5uZXh0KCk6ZihlLmFuY2hvcnx8ZS5lbCksZWU9KGUsdCk9PntudWxsPT1lP3QuX3Zub2RlJiZXKHQuX3Zub2RlLG51bGwsbnVsbCwhMCk6Yih0Ll92bm9kZXx8bnVsbCxlLHQpLFV0KCksdC5fdm5vZGU9ZX0sdGU9e3A6Yix1bTpXLG06eixyOkcsbXQ6UixtYzpFLHBjOlYscGJjOiQsbjpYLG86ZX07bGV0IG5lLHNlO3JldHVybiB0JiYoW25lLHNlXT10KHRlKSkse3JlbmRlcjplZSxoeWRyYXRlOm5lLGNyZWF0ZUFwcDp1byhlZSxuZSl9fWZ1bmN0aW9uIFNvKGUsdCxuLG89bnVsbCl7YnQoZSx0LDcsW24sb10pfWZ1bmN0aW9uIENvKGUsdCxuPSExKXtjb25zdCBvPWUuY2hpbGRyZW4scj10LmNoaWxkcmVuO2lmKE4obykmJk4ocikpZm9yKGxldCBlPTA7ZTxvLmxlbmd0aDtlKyspe2NvbnN0IHQ9b1tlXTtsZXQgcz1yW2VdOzEmcy5zaGFwZUZsYWcmJiFzLmR5bmFtaWNDaGlsZHJlbiYmKChzLnBhdGNoRmxhZzw9MHx8MzI9PT1zLnBhdGNoRmxhZykmJihzPXJbZV09Wm8ocltlXSkscy5lbD10LmVsKSxufHxDbyh0LHMpKX19Y29uc3Qga289ZT0+ZSYmKGUuZGlzYWJsZWR8fCIiPT09ZS5kaXNhYmxlZCksd289KGUsdCk9Pntjb25zdCBuPWUmJmUudG87aWYoTShuKSl7aWYodCl7cmV0dXJuIHQobil9cmV0dXJuIG51bGx9cmV0dXJuIG59O2Z1bmN0aW9uIFRvKGUsdCxuLHtvOntpbnNlcnQ6b30sbTpyfSxzPTIpezA9PT1zJiZvKGUudGFyZ2V0QW5jaG9yLHQsbik7Y29uc3R7ZWw6aSxhbmNob3I6bCxzaGFwZUZsYWc6YyxjaGlsZHJlbjphLHByb3BzOnV9PWUscD0yPT09cztpZihwJiZvKGksdCxuKSwoIXB8fGtvKHUpKSYmMTYmYylmb3IobGV0IGU9MDtlPGEubGVuZ3RoO2UrKylyKGFbZV0sdCxuLDIpO3AmJm8obCx0LG4pfWNvbnN0IE5vPXtfX2lzVGVsZXBvcnQ6ITAscHJvY2VzcyhlLHQsbixvLHIscyxpLGwsYyl7Y29uc3R7bWM6YSxwYzp1LHBiYzpwLG86e2luc2VydDpmLHF1ZXJ5U2VsZWN0b3I6ZCxjcmVhdGVUZXh0Omh9fT1jLG09a28odC5wcm9wcykse3NoYXBlRmxhZzpnLGNoaWxkcmVuOnZ9PXQ7aWYobnVsbD09ZSl7Y29uc3QgZT10LmVsPWgoIiIpLGM9dC5hbmNob3I9aCgiIik7ZihlLG4sbyksZihjLG4sbyk7Y29uc3QgdT10LnRhcmdldD13byh0LnByb3BzLGQpLHA9dC50YXJnZXRBbmNob3I9aCgiIik7dSYmZihwLHUpO2NvbnN0IHk9KGUsdCk9PnsxNiZnJiZhKHYsZSx0LHIscyxpLGwpfTttP3kobixjKTp1JiZ5KHUscCl9ZWxzZXt0LmVsPWUuZWw7Y29uc3Qgbz10LmFuY2hvcj1lLmFuY2hvcixhPXQudGFyZ2V0PWUudGFyZ2V0LGY9dC50YXJnZXRBbmNob3I9ZS50YXJnZXRBbmNob3IsaD1rbyhlLnByb3BzKSxnPWg/bjphLHY9aD9vOmY7aWYodC5keW5hbWljQ2hpbGRyZW4/KHAoZS5keW5hbWljQ2hpbGRyZW4sdC5keW5hbWljQ2hpbGRyZW4sZyxyLHMsaSksQ28oZSx0LCEwKSk6bHx8dShlLHQsZyx2LHIscyxpKSxtKWh8fFRvKHQsbixvLGMsMSk7ZWxzZSBpZigodC5wcm9wcyYmdC5wcm9wcy50bykhPT0oZS5wcm9wcyYmZS5wcm9wcy50bykpe2NvbnN0IGU9dC50YXJnZXQ9d28odC5wcm9wcyxkKTtlJiZUbyh0LGUsbnVsbCxjLDApfWVsc2UgaCYmVG8odCxhLGYsYywxKX19LHJlbW92ZShlLHtyOnQsbzp7cmVtb3ZlOm59fSl7Y29uc3R7c2hhcGVGbGFnOm8sY2hpbGRyZW46cixhbmNob3I6c309ZTtpZihuKHMpLDE2Jm8pZm9yKGxldCBlPTA7ZTxyLmxlbmd0aDtlKyspdChyW2VdKX0sbW92ZTpUbyxoeWRyYXRlOmZ1bmN0aW9uKGUsdCxuLG8scix7bzp7bmV4dFNpYmxpbmc6cyxwYXJlbnROb2RlOmkscXVlcnlTZWxlY3RvcjpsfX0sYyl7Y29uc3QgYT10LnRhcmdldD13byh0LnByb3BzLGwpO2lmKGEpe2NvbnN0IGw9YS5fbHBhfHxhLmZpcnN0Q2hpbGQ7MTYmdC5zaGFwZUZsYWcmJihrbyh0LnByb3BzKT8odC5hbmNob3I9YyhzKGUpLHQsaShlKSxuLG8sciksdC50YXJnZXRBbmNob3I9bCk6KHQuYW5jaG9yPXMoZSksdC50YXJnZXRBbmNob3I9YyhsLHQsYSxuLG8scikpLGEuX2xwYT10LnRhcmdldEFuY2hvciYmcyh0LnRhcmdldEFuY2hvcikpfXJldHVybiB0LmFuY2hvciYmcyh0LmFuY2hvcil9fSxFbz0iY29tcG9uZW50cyI7Y29uc3QgRm89U3ltYm9sKCk7ZnVuY3Rpb24gJG8oZSx0LG49ITApe2NvbnN0IG89V3R8fGdyO2lmKG8pe2NvbnN0IG49by50eXBlO2lmKGU9PT1Fbyl7Y29uc3QgZT1uLmRpc3BsYXlOYW1lfHxuLm5hbWU7aWYoZSYmKGU9PT10fHxlPT09SCh0KXx8ZT09PVcoSCh0KSkpKXJldHVybiBufXJldHVybiBBbyhvW2VdfHxuW2VdLHQpfHxBbyhvLmFwcENvbnRleHRbZV0sdCl9fWZ1bmN0aW9uIEFvKGUsdCl7cmV0dXJuIGUmJihlW3RdfHxlW0godCldfHxlW1coSCh0KSldKX1jb25zdCBNbz1TeW1ib2wodm9pZCAwKSxPbz1TeW1ib2wodm9pZCAwKSxSbz1TeW1ib2wodm9pZCAwKSxCbz1TeW1ib2wodm9pZCAwKSxQbz1bXTtsZXQgSW89bnVsbDtmdW5jdGlvbiBMbyhlPSExKXtQby5wdXNoKElvPWU/bnVsbDpbXSl9ZnVuY3Rpb24gVm8oKXtQby5wb3AoKSxJbz1Qb1tQby5sZW5ndGgtMV18fG51bGx9bGV0IFVvPTE7ZnVuY3Rpb24gam8oZSx0LG4sbyxyKXtjb25zdCBzPUdvKGUsdCxuLG8sciwhMCk7cmV0dXJuIHMuZHluYW1pY0NoaWxkcmVuPUlvfHx2LFZvKCksVW8+MCYmSW8mJklvLnB1c2gocyksc31mdW5jdGlvbiBEbyhlKXtyZXR1cm4hIWUmJiEwPT09ZS5fX3ZfaXNWTm9kZX1mdW5jdGlvbiBIbyhlLHQpe3JldHVybiBlLnR5cGU9PT10LnR5cGUmJmUua2V5PT09dC5rZXl9Y29uc3Qgem89Il9fdkludGVybmFsIixLbz0oe2tleTplfSk9Pm51bGwhPWU/ZTpudWxsLFdvPSh7cmVmOmV9KT0+bnVsbCE9ZT9OKGUpP2U6e2k6V3QscjplfTpudWxsLEdvPWZ1bmN0aW9uKGUsdD1udWxsLG49bnVsbCxvPTAscj1udWxsLGk9ITEpe2UmJmUhPT1Gb3x8KGU9Um8pO2lmKERvKGUpKXtjb25zdCBvPXFvKGUsdCwhMCk7cmV0dXJuIG4mJlFvKG8sbiksb31sPWUsQShsKSYmIl9fdmNjT3B0cyJpbiBsJiYoZT1lLl9fdmNjT3B0cyk7dmFyIGw7aWYodCl7KHR0KHQpfHx6byBpbiB0KSYmKHQ9Qyh7fSx0KSk7bGV0e2NsYXNzOmUsc3R5bGU6bn09dDtlJiYhTShlKSYmKHQuY2xhc3M9YShlKSksUihuKSYmKHR0KG4pJiYhTihuKSYmKG49Qyh7fSxuKSksdC5zdHlsZT1zKG4pKX1jb25zdCBjPU0oZSk/MTooZT0+ZS5fX2lzU3VzcGVuc2UpKGUpPzEyODooZT0+ZS5fX2lzVGVsZXBvcnQpKGUpPzY0OlIoZSk/NDpBKGUpPzI6MCx1PXtfX3ZfaXNWTm9kZTohMCxfX3Zfc2tpcDohMCx0eXBlOmUscHJvcHM6dCxrZXk6dCYmS28odCkscmVmOnQmJldvKHQpLHNjb3BlSWQ6YW4sY2hpbGRyZW46bnVsbCxjb21wb25lbnQ6bnVsbCxzdXNwZW5zZTpudWxsLHNzQ29udGVudDpudWxsLHNzRmFsbGJhY2s6bnVsbCxkaXJzOm51bGwsdHJhbnNpdGlvbjpudWxsLGVsOm51bGwsYW5jaG9yOm51bGwsdGFyZ2V0Om51bGwsdGFyZ2V0QW5jaG9yOm51bGwsc3RhdGljQ291bnQ6MCxzaGFwZUZsYWc6YyxwYXRjaEZsYWc6byxkeW5hbWljUHJvcHM6cixkeW5hbWljQ2hpbGRyZW46bnVsbCxhcHBDb250ZXh0Om51bGx9O2lmKFFvKHUsbiksMTI4JmMpe2NvbnN0e2NvbnRlbnQ6ZSxmYWxsYmFjazp0fT1mdW5jdGlvbihlKXtjb25zdHtzaGFwZUZsYWc6dCxjaGlsZHJlbjpufT1lO2xldCBvLHI7cmV0dXJuIDMyJnQ/KG89bm4obi5kZWZhdWx0KSxyPW5uKG4uZmFsbGJhY2spKToobz1ubihuKSxyPVlvKG51bGwpKSx7Y29udGVudDpvLGZhbGxiYWNrOnJ9fSh1KTt1LnNzQ29udGVudD1lLHUuc3NGYWxsYmFjaz10fVVvPjAmJiFpJiZJbyYmKG8+MHx8NiZjKSYmMzIhPT1vJiZJby5wdXNoKHUpO3JldHVybiB1fTtmdW5jdGlvbiBxbyhlLHQsbj0hMSl7Y29uc3R7cHJvcHM6byxyZWY6cixwYXRjaEZsYWc6c309ZSxpPXQ/WG8ob3x8e30sdCk6bztyZXR1cm57X192X2lzVk5vZGU6ITAsX192X3NraXA6ITAsdHlwZTplLnR5cGUscHJvcHM6aSxrZXk6aSYmS28oaSkscmVmOnQmJnQucmVmP24mJnI/TihyKT9yLmNvbmNhdChXbyh0KSk6W3IsV28odCldOldvKHQpOnIsc2NvcGVJZDplLnNjb3BlSWQsY2hpbGRyZW46ZS5jaGlsZHJlbix0YXJnZXQ6ZS50YXJnZXQsdGFyZ2V0QW5jaG9yOmUudGFyZ2V0QW5jaG9yLHN0YXRpY0NvdW50OmUuc3RhdGljQ291bnQsc2hhcGVGbGFnOmUuc2hhcGVGbGFnLHBhdGNoRmxhZzp0JiZlLnR5cGUhPT1Nbz8tMT09PXM/MTY6MTZ8czpzLGR5bmFtaWNQcm9wczplLmR5bmFtaWNQcm9wcyxkeW5hbWljQ2hpbGRyZW46ZS5keW5hbWljQ2hpbGRyZW4sYXBwQ29udGV4dDplLmFwcENvbnRleHQsZGlyczplLmRpcnMsdHJhbnNpdGlvbjplLnRyYW5zaXRpb24sY29tcG9uZW50OmUuY29tcG9uZW50LHN1c3BlbnNlOmUuc3VzcGVuc2Usc3NDb250ZW50OmUuc3NDb250ZW50JiZxbyhlLnNzQ29udGVudCksc3NGYWxsYmFjazplLnNzRmFsbGJhY2smJnFvKGUuc3NGYWxsYmFjayksZWw6ZS5lbCxhbmNob3I6ZS5hbmNob3J9fWZ1bmN0aW9uIEpvKGU9IiAiLHQ9MCl7cmV0dXJuIEdvKE9vLG51bGwsZSx0KX1mdW5jdGlvbiBZbyhlKXtyZXR1cm4gbnVsbD09ZXx8ImJvb2xlYW4iPT10eXBlb2YgZT9HbyhSbyk6TihlKT9HbyhNbyxudWxsLGUpOiJvYmplY3QiPT10eXBlb2YgZT9udWxsPT09ZS5lbD9lOnFvKGUpOkdvKE9vLG51bGwsU3RyaW5nKGUpKX1mdW5jdGlvbiBabyhlKXtyZXR1cm4gbnVsbD09PWUuZWw/ZTpxbyhlKX1mdW5jdGlvbiBRbyhlLHQpe2xldCBuPTA7Y29uc3R7c2hhcGVGbGFnOm99PWU7aWYobnVsbD09dCl0PW51bGw7ZWxzZSBpZihOKHQpKW49MTY7ZWxzZSBpZigib2JqZWN0Ij09dHlwZW9mIHQpe2lmKDEmb3x8NjQmbyl7Y29uc3Qgbj10LmRlZmF1bHQ7cmV0dXJuIHZvaWQobiYmKG4uX2MmJmxuKDEpLFFvKGUsbigpKSxuLl9jJiZsbigtMSkpKX17bj0zMjtjb25zdCBvPXQuXztvfHx6byBpbiB0PzM9PT1vJiZXdCYmKDEwMjQmV3Qudm5vZGUucGF0Y2hGbGFnPyh0Ll89MixlLnBhdGNoRmxhZ3w9MTAyNCk6dC5fPTEpOnQuX2N0eD1XdH19ZWxzZSBBKHQpPyh0PXtkZWZhdWx0OnQsX2N0eDpXdH0sbj0zMik6KHQ9U3RyaW5nKHQpLDY0Jm8/KG49MTYsdD1bSm8odCldKTpuPTgpO2UuY2hpbGRyZW49dCxlLnNoYXBlRmxhZ3w9bn1mdW5jdGlvbiBYbyguLi5lKXtjb25zdCB0PUMoe30sZVswXSk7Zm9yKGxldCBuPTE7bjxlLmxlbmd0aDtuKyspe2NvbnN0IG89ZVtuXTtmb3IoY29uc3QgZSBpbiBvKWlmKCJjbGFzcyI9PT1lKXQuY2xhc3MhPT1vLmNsYXNzJiYodC5jbGFzcz1hKFt0LmNsYXNzLG8uY2xhc3NdKSk7ZWxzZSBpZigic3R5bGUiPT09ZSl0LnN0eWxlPXMoW3Quc3R5bGUsby5zdHlsZV0pO2Vsc2UgaWYoeChlKSl7Y29uc3Qgbj10W2VdLHI9b1tlXTtuIT09ciYmKHRbZV09bj9bXS5jb25jYXQobixvW2VdKTpyKX1lbHNlIiIhPT1lJiYodFtlXT1vW2VdKX1yZXR1cm4gdH1mdW5jdGlvbiBlcihlLHQpe2lmKGdyKXtsZXQgbj1nci5wcm92aWRlcztjb25zdCBvPWdyLnBhcmVudCYmZ3IucGFyZW50LnByb3ZpZGVzO289PT1uJiYobj1nci5wcm92aWRlcz1PYmplY3QuY3JlYXRlKG8pKSxuW2VdPXR9ZWxzZTt9ZnVuY3Rpb24gdHIoZSx0LG49ITEpe2NvbnN0IG89Z3J8fFd0O2lmKG8pe2NvbnN0IHI9bnVsbD09by5wYXJlbnQ/by52bm9kZS5hcHBDb250ZXh0JiZvLnZub2RlLmFwcENvbnRleHQucHJvdmlkZXM6by5wYXJlbnQucHJvdmlkZXM7aWYociYmZSBpbiByKXJldHVybiByW2VdO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSlyZXR1cm4gbiYmQSh0KT90KCk6dH19bGV0IG5yPSExO2Z1bmN0aW9uIG9yKGUsdCxuPVtdLG89W10scj1bXSxzPSExKXtjb25zdHttaXhpbnM6aSxleHRlbmRzOmwsZGF0YTpjLGNvbXB1dGVkOmEsbWV0aG9kczp1LHdhdGNoOnAscHJvdmlkZTpmLGluamVjdDpkLGNvbXBvbmVudHM6aCxkaXJlY3RpdmVzOm0sYmVmb3JlTW91bnQ6Zyxtb3VudGVkOnYsYmVmb3JlVXBkYXRlOmIsdXBkYXRlZDpfLGFjdGl2YXRlZDp4LGRlYWN0aXZhdGVkOlMsYmVmb3JlVW5tb3VudDprLHVubW91bnRlZDp3LHJlbmRlcjpULHJlbmRlclRyYWNrZWQ6RSxyZW5kZXJUcmlnZ2VyZWQ6RixlcnJvckNhcHR1cmVkOiR9PXQsTT1lLnByb3h5LE89ZS5jdHgsQj1lLmFwcENvbnRleHQubWl4aW5zO2lmKHMmJlQmJmUucmVuZGVyPT09eSYmKGUucmVuZGVyPVQpLHN8fChucj0hMCxycigiYmVmb3JlQ3JlYXRlIiwiYmMiLHQsZSxCKSxucj0hMSxscihlLEIsbixvLHIpKSxsJiZvcihlLGwsbixvLHIsITApLGkmJmxyKGUsaSxuLG8sciksZClpZihOKGQpKWZvcihsZXQgZT0wO2U8ZC5sZW5ndGg7ZSsrKXtjb25zdCB0PWRbZV07T1t0XT10cih0KX1lbHNlIGZvcihjb25zdCBlIGluIGQpe2NvbnN0IHQ9ZFtlXTtPW2VdPVIodCk/dHIodC5mcm9tfHxlLHQuZGVmYXVsdCwhMCk6dHIodCl9aWYodSlmb3IoY29uc3QgZSBpbiB1KXtjb25zdCB0PXVbZV07QSh0KSYmKE9bZV09dC5iaW5kKE0pKX1pZihzP2MmJm4ucHVzaChjKToobi5sZW5ndGgmJm4uZm9yRWFjaCh0PT5jcihlLHQsTSkpLGMmJmNyKGUsYyxNKSksYSlmb3IoY29uc3QgZSBpbiBhKXtjb25zdCB0PWFbZV0sbj1Ocih7Z2V0OkEodCk/dC5iaW5kKE0sTSk6QSh0LmdldCk/dC5nZXQuYmluZChNLE0pOnksc2V0OiFBKHQpJiZBKHQuc2V0KT90LnNldC5iaW5kKE0pOnl9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTyxlLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6KCk9Pm4udmFsdWUsc2V0OmU9Pm4udmFsdWU9ZX0pfXAmJm8ucHVzaChwKSwhcyYmby5sZW5ndGgmJm8uZm9yRWFjaChlPT57Zm9yKGNvbnN0IHQgaW4gZSlhcihlW3RdLE8sTSx0KX0pLGYmJnIucHVzaChmKSwhcyYmci5sZW5ndGgmJnIuZm9yRWFjaChlPT57Y29uc3QgdD1BKGUpP2UuY2FsbChNKTplO2Zvcihjb25zdCBlIGluIHQpZXIoZSx0W2VdKX0pLHMmJihoJiZDKGUuY29tcG9uZW50c3x8KGUuY29tcG9uZW50cz1DKHt9LGUudHlwZS5jb21wb25lbnRzKSksaCksbSYmQyhlLmRpcmVjdGl2ZXN8fChlLmRpcmVjdGl2ZXM9Qyh7fSxlLnR5cGUuZGlyZWN0aXZlcykpLG0pKSxzfHxycigiY3JlYXRlZCIsImMiLHQsZSxCKSxnJiZTbihnLmJpbmQoTSkpLHYmJkNuKHYuYmluZChNKSksYiYma24oYi5iaW5kKE0pKSxfJiZ3bihfLmJpbmQoTSkpLHgmJlluKHguYmluZChNKSksUyYmWm4oUy5iaW5kKE0pKSwkJiYkbigkLmJpbmQoTSkpLEUmJkZuKEUuYmluZChNKSksRiYmRW4oRi5iaW5kKE0pKSxrJiZUbihrLmJpbmQoTSkpLHcmJk5uKHcuYmluZChNKSl9ZnVuY3Rpb24gcnIoZSx0LG4sbyxyKXtpcihlLHQscixvKTtjb25zdHtleHRlbmRzOnMsbWl4aW5zOml9PW47cyYmc3IoZSx0LHMsbyksaSYmaXIoZSx0LGksbyk7Y29uc3QgbD1uW2VdO2wmJmJ0KGwuYmluZChvLnByb3h5KSxvLHQpfWZ1bmN0aW9uIHNyKGUsdCxuLG8pe24uZXh0ZW5kcyYmc3IoZSx0LG4uZXh0ZW5kcyxvKTtjb25zdCByPW5bZV07ciYmYnQoci5iaW5kKG8ucHJveHkpLG8sdCl9ZnVuY3Rpb24gaXIoZSx0LG4sbyl7Zm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKyspe2NvbnN0IHM9bltyXS5taXhpbnM7cyYmaXIoZSx0LHMsbyk7Y29uc3QgaT1uW3JdW2VdO2kmJmJ0KGkuYmluZChvLnByb3h5KSxvLHQpfX1mdW5jdGlvbiBscihlLHQsbixvLHIpe2ZvcihsZXQgcz0wO3M8dC5sZW5ndGg7cysrKW9yKGUsdFtzXSxuLG8sciwhMCl9ZnVuY3Rpb24gY3IoZSx0LG4pe2NvbnN0IG89dC5jYWxsKG4sbik7UihvKSYmKGUuZGF0YT09PWc/ZS5kYXRhPUplKG8pOkMoZS5kYXRhLG8pKX1mdW5jdGlvbiBhcihlLHQsbixvKXtjb25zdCByPW8uaW5jbHVkZXMoIi4iKT9mdW5jdGlvbihlLHQpe2NvbnN0IG49dC5zcGxpdCgiLiIpO3JldHVybigpPT57bGV0IHQ9ZTtmb3IobGV0IGU9MDtlPG4ubGVuZ3RoJiZ0O2UrKyl0PXRbbltlXV07cmV0dXJuIHR9fShuLG8pOigpPT5uW29dO2lmKE0oZSkpe2NvbnN0IG49dFtlXTtBKG4pJiZPbihyLG4pfWVsc2UgaWYoQShlKSlPbihyLGUuYmluZChuKSk7ZWxzZSBpZihSKGUpKWlmKE4oZSkpZS5mb3JFYWNoKGU9PmFyKGUsdCxuLG8pKTtlbHNle2NvbnN0IG89QShlLmhhbmRsZXIpP2UuaGFuZGxlci5iaW5kKG4pOnRbZS5oYW5kbGVyXTtBKG8pJiZPbihyLG8sZSl9fWZ1bmN0aW9uIHVyKGUsdCxuKXtjb25zdCBvPW4uYXBwQ29udGV4dC5jb25maWcub3B0aW9uTWVyZ2VTdHJhdGVnaWVzLHttaXhpbnM6cixleHRlbmRzOnN9PXQ7cyYmdXIoZSxzLG4pLHImJnIuZm9yRWFjaCh0PT51cihlLHQsbikpO2Zvcihjb25zdCByIGluIHQpZVtyXT1vJiZUKG8scik/b1tyXShlW3JdLHRbcl0sbi5wcm94eSxyKTp0W3JdfWNvbnN0IHByPUMoT2JqZWN0LmNyZWF0ZShudWxsKSx7JDplPT5lLCRlbDplPT5lLnZub2RlLmVsLCRkYXRhOmU9PmUuZGF0YSwkcHJvcHM6ZT0+ZS5wcm9wcywkYXR0cnM6ZT0+ZS5hdHRycywkc2xvdHM6ZT0+ZS5zbG90cywkcmVmczplPT5lLnJlZnMsJHBhcmVudDplPT5lLnBhcmVudCYmZS5wYXJlbnQucHJveHksJHJvb3Q6ZT0+ZS5yb290JiZlLnJvb3QucHJveHksJGVtaXQ6ZT0+ZS5lbWl0LCRvcHRpb25zOmU9PmZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS50eXBlLHtfX21lcmdlZDpuLG1peGluczpvLGV4dGVuZHM6cn09dDtpZihuKXJldHVybiBuO2NvbnN0IHM9ZS5hcHBDb250ZXh0Lm1peGlucztpZighcy5sZW5ndGgmJiFvJiYhcilyZXR1cm4gdDtjb25zdCBpPXt9O3JldHVybiBzLmZvckVhY2godD0+dXIoaSx0LGUpKSx1cihpLHQsZSksdC5fX21lcmdlZD1pfShlKSwkZm9yY2VVcGRhdGU6ZT0+KCk9PkJ0KGUudXBkYXRlKSwkbmV4dFRpY2s6ZT0+UnQuYmluZChlLnByb3h5KSwkd2F0Y2g6ZT0+Qm4uYmluZChlKX0pLGZyPXtnZXQoe186ZX0sdCl7Y29uc3R7Y3R4Om4sc2V0dXBTdGF0ZTpvLGRhdGE6cixwcm9wczpzLGFjY2Vzc0NhY2hlOmksdHlwZTpsLGFwcENvbnRleHQ6Y309ZTtpZigiX192X3NraXAiPT09dClyZXR1cm4hMDtsZXQgYTtpZigiJCIhPT10WzBdKXtjb25zdCBsPWlbdF07aWYodm9pZCAwIT09bClzd2l0Y2gobCl7Y2FzZSAwOnJldHVybiBvW3RdO2Nhc2UgMTpyZXR1cm4gclt0XTtjYXNlIDM6cmV0dXJuIG5bdF07Y2FzZSAyOnJldHVybiBzW3RdfWVsc2V7aWYobyE9PWcmJlQobyx0KSlyZXR1cm4gaVt0XT0wLG9bdF07aWYociE9PWcmJlQocix0KSlyZXR1cm4gaVt0XT0xLHJbdF07aWYoKGE9ZS5wcm9wc09wdGlvbnNbMF0pJiZUKGEsdCkpcmV0dXJuIGlbdF09MixzW3RdO2lmKG4hPT1nJiZUKG4sdCkpcmV0dXJuIGlbdF09MyxuW3RdO25yfHwoaVt0XT00KX19Y29uc3QgdT1wclt0XTtsZXQgcCxmO3JldHVybiB1PygiJGF0dHJzIj09PXQmJnBlKGUsMCx0KSx1KGUpKToocD1sLl9fY3NzTW9kdWxlcykmJihwPXBbdF0pP3A6biE9PWcmJlQobix0KT8oaVt0XT0zLG5bdF0pOihmPWMuY29uZmlnLmdsb2JhbFByb3BlcnRpZXMsVChmLHQpP2ZbdF06dm9pZCAwKX0sc2V0KHtfOmV9LHQsbil7Y29uc3R7ZGF0YTpvLHNldHVwU3RhdGU6cixjdHg6c309ZTtpZihyIT09ZyYmVChyLHQpKXJbdF09bjtlbHNlIGlmKG8hPT1nJiZUKG8sdCkpb1t0XT1uO2Vsc2UgaWYodCBpbiBlLnByb3BzKXJldHVybiExO3JldHVybigiJCIhPT10WzBdfHwhKHQuc2xpY2UoMSlpbiBlKSkmJihzW3RdPW4sITApfSxoYXMoe186e2RhdGE6ZSxzZXR1cFN0YXRlOnQsYWNjZXNzQ2FjaGU6bixjdHg6byxhcHBDb250ZXh0OnIscHJvcHNPcHRpb25zOnN9fSxpKXtsZXQgbDtyZXR1cm4gdm9pZCAwIT09bltpXXx8ZSE9PWcmJlQoZSxpKXx8dCE9PWcmJlQodCxpKXx8KGw9c1swXSkmJlQobCxpKXx8VChvLGkpfHxUKHByLGkpfHxUKHIuY29uZmlnLmdsb2JhbFByb3BlcnRpZXMsaSl9fSxkcj1DKHt9LGZyLHtnZXQoZSx0KXtpZih0IT09U3ltYm9sLnVuc2NvcGFibGVzKXJldHVybiBmci5nZXQoZSx0LGUpfSxoYXM6KGUsdCk9PiJfIiE9PXRbMF0mJiFvKHQpfSksaHI9Y28oKTtsZXQgbXI9MDtsZXQgZ3I9bnVsbDtjb25zdCB2cj0oKT0+Z3J8fFd0LHlyPWU9Pntncj1lfTtsZXQgYnIsX3I9ITE7ZnVuY3Rpb24geHIoZSx0LG4pe0EodCk/ZS5yZW5kZXI9dDpSKHQpJiYoZS5zZXR1cFN0YXRlPXV0KHQpKSxDcihlKX1mdW5jdGlvbiBTcihlKXticj1lfWZ1bmN0aW9uIENyKGUsdCl7Y29uc3Qgbj1lLnR5cGU7ZS5yZW5kZXJ8fChiciYmbi50ZW1wbGF0ZSYmIW4ucmVuZGVyJiYobi5yZW5kZXI9YnIobi50ZW1wbGF0ZSx7aXNDdXN0b21FbGVtZW50OmUuYXBwQ29udGV4dC5jb25maWcuaXNDdXN0b21FbGVtZW50LGRlbGltaXRlcnM6bi5kZWxpbWl0ZXJzfSkpLGUucmVuZGVyPW4ucmVuZGVyfHx5LGUucmVuZGVyLl9yYyYmKGUud2l0aFByb3h5PW5ldyBQcm94eShlLmN0eCxkcikpKSxncj1lLG9yKGUsbiksZ3I9bnVsbH1mdW5jdGlvbiBrcihlKXtnciYmKGdyLmVmZmVjdHN8fChnci5lZmZlY3RzPVtdKSkucHVzaChlKX1jb25zdCB3cj0vKD86XnxbLV9dKShcdykvZztmdW5jdGlvbiBUcihlLHQsbj0hMSl7bGV0IG89QSh0KSYmdC5kaXNwbGF5TmFtZXx8dC5uYW1lO2lmKCFvJiZ0Ll9fZmlsZSl7Y29uc3QgZT10Ll9fZmlsZS5tYXRjaCgvKFteL1xcXSspXC52dWUkLyk7ZSYmKG89ZVsxXSl9aWYoIW8mJmUmJmUucGFyZW50KXtjb25zdCBuPWU9Pntmb3IoY29uc3QgbiBpbiBlKWlmKGVbbl09PT10KXJldHVybiBufTtvPW4oZS5jb21wb25lbnRzfHxlLnBhcmVudC50eXBlLmNvbXBvbmVudHMpfHxuKGUuYXBwQ29udGV4dC5jb21wb25lbnRzKX1yZXR1cm4gbz9vLnJlcGxhY2Uod3IsZT0+ZS50b1VwcGVyQ2FzZSgpKS5yZXBsYWNlKC9bLV9dL2csIiIpOm4/IkFwcCI6IkFub255bW91cyJ9ZnVuY3Rpb24gTnIoZSl7Y29uc3QgdD1mdW5jdGlvbihlKXtsZXQgdCxuO3JldHVybiBBKGUpPyh0PWUsbj15KToodD1lLmdldCxuPWUuc2V0KSxuZXcgaHQodCxuLEEoZSl8fCFlLnNldCl9KGUpO3JldHVybiBrcih0LmVmZmVjdCksdH1mdW5jdGlvbiBFcihlKXtyZXR1cm4gQShlKT97c2V0dXA6ZSxuYW1lOmUubmFtZX06ZX1mdW5jdGlvbiBGcihlLHt2bm9kZTp7cHJvcHM6dCxjaGlsZHJlbjpufX0pe3JldHVybiBHbyhlLHQsbil9ZnVuY3Rpb24gJHIoZSx0LG4pe2NvbnN0IG89YXJndW1lbnRzLmxlbmd0aDtyZXR1cm4gMj09PW8/Uih0KSYmIU4odCk/RG8odCk/R28oZSxudWxsLFt0XSk6R28oZSx0KTpHbyhlLG51bGwsdCk6KG8+Mz9uPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTozPT09byYmRG8obikmJihuPVtuXSksR28oZSx0LG4pKX1jb25zdCBBcj1TeW1ib2woIiIpO2NvbnN0IE1yPSIzLjAuMiIsT3I9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIixScj0idW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50Om51bGw7bGV0IEJyLFByO2NvbnN0IElyPXtpbnNlcnQ6KGUsdCxuKT0+e3QuaW5zZXJ0QmVmb3JlKGUsbnx8bnVsbCl9LHJlbW92ZTplPT57Y29uc3QgdD1lLnBhcmVudE5vZGU7dCYmdC5yZW1vdmVDaGlsZChlKX0sY3JlYXRlRWxlbWVudDooZSx0LG4pPT50P1JyLmNyZWF0ZUVsZW1lbnROUyhPcixlKTpSci5jcmVhdGVFbGVtZW50KGUsbj97aXM6bn06dm9pZCAwKSxjcmVhdGVUZXh0OmU9PlJyLmNyZWF0ZVRleHROb2RlKGUpLGNyZWF0ZUNvbW1lbnQ6ZT0+UnIuY3JlYXRlQ29tbWVudChlKSxzZXRUZXh0OihlLHQpPT57ZS5ub2RlVmFsdWU9dH0sc2V0RWxlbWVudFRleHQ6KGUsdCk9PntlLnRleHRDb250ZW50PXR9LHBhcmVudE5vZGU6ZT0+ZS5wYXJlbnROb2RlLG5leHRTaWJsaW5nOmU9PmUubmV4dFNpYmxpbmcscXVlcnlTZWxlY3RvcjplPT5Sci5xdWVyeVNlbGVjdG9yKGUpLHNldFNjb3BlSWQoZSx0KXtlLnNldEF0dHJpYnV0ZSh0LCIiKX0sY2xvbmVOb2RlOmU9PmUuY2xvbmVOb2RlKCEwKSxpbnNlcnRTdGF0aWNDb250ZW50KGUsdCxuLG8pe2NvbnN0IHI9bz9Qcnx8KFByPVJyLmNyZWF0ZUVsZW1lbnROUyhPciwic3ZnIikpOkJyfHwoQnI9UnIuY3JlYXRlRWxlbWVudCgiZGl2IikpO3IuaW5uZXJIVE1MPWU7Y29uc3Qgcz1yLmZpcnN0Q2hpbGQ7bGV0IGk9cyxsPWk7Zm9yKDtpOylsPWksSXIuaW5zZXJ0KGksdCxuKSxpPXIuZmlyc3RDaGlsZDtyZXR1cm5bcyxsXX19O2NvbnN0IExyPS9ccyohaW1wb3J0YW50JC87ZnVuY3Rpb24gVnIoZSx0LG4pe2lmKE4obikpbi5mb3JFYWNoKG49PlZyKGUsdCxuKSk7ZWxzZSBpZih0LnN0YXJ0c1dpdGgoIi0tIikpZS5zZXRQcm9wZXJ0eSh0LG4pO2Vsc2V7Y29uc3Qgbz1mdW5jdGlvbihlLHQpe2NvbnN0IG49anJbdF07aWYobilyZXR1cm4gbjtsZXQgbz1IKHQpO2lmKCJmaWx0ZXIiIT09byYmbyBpbiBlKXJldHVybiBqclt0XT1vO289VyhvKTtmb3IobGV0IG49MDtuPFVyLmxlbmd0aDtuKyspe2NvbnN0IHI9VXJbbl0rbztpZihyIGluIGUpcmV0dXJuIGpyW3RdPXJ9cmV0dXJuIHR9KGUsdCk7THIudGVzdChuKT9lLnNldFByb3BlcnR5KEsobyksbi5yZXBsYWNlKExyLCIiKSwiaW1wb3J0YW50Iik6ZVtvXT1ufX1jb25zdCBVcj1bIldlYmtpdCIsIk1veiIsIm1zIl0sanI9e307Y29uc3QgRHI9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiO2xldCBIcj1EYXRlLm5vdzsidW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50JiZIcigpPmRvY3VtZW50LmNyZWF0ZUV2ZW50KCJFdmVudCIpLnRpbWVTdGFtcCYmKEhyPSgpPT5wZXJmb3JtYW5jZS5ub3coKSk7bGV0IHpyPTA7Y29uc3QgS3I9UHJvbWlzZS5yZXNvbHZlKCksV3I9KCk9Pnt6cj0wfTtmdW5jdGlvbiBHcihlLHQsbixvKXtlLmFkZEV2ZW50TGlzdGVuZXIodCxuLG8pfWZ1bmN0aW9uIHFyKGUsdCxuLG8scj1udWxsKXtjb25zdCBzPWUuX3ZlaXx8KGUuX3ZlaT17fSksaT1zW3RdO2lmKG8mJmkpaS52YWx1ZT1vO2Vsc2V7Y29uc3RbbixsXT1mdW5jdGlvbihlKXtsZXQgdDtpZihKci50ZXN0KGUpKXtsZXQgbjtmb3IodD17fTtuPWUubWF0Y2goSnIpOyllPWUuc2xpY2UoMCxlLmxlbmd0aC1uWzBdLmxlbmd0aCksdFtuWzBdLnRvTG93ZXJDYXNlKCldPSEwfXJldHVybltlLnNsaWNlKDIpLnRvTG93ZXJDYXNlKCksdF19KHQpO2lmKG8pe0dyKGUsbixzW3RdPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1lPT57KGUudGltZVN0YW1wfHxIcigpKT49bi5hdHRhY2hlZC0xJiZidChmdW5jdGlvbihlLHQpe2lmKE4odCkpe2NvbnN0IG49ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb247cmV0dXJuIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uPSgpPT57bi5jYWxsKGUpLGUuX3N0b3BwZWQ9ITB9LHQubWFwKGU9PnQ9PiF0Ll9zdG9wcGVkJiZlKHQpKX1yZXR1cm4gdH0oZSxuLnZhbHVlKSx0LDUsW2VdKX07cmV0dXJuIG4udmFsdWU9ZSxuLmF0dGFjaGVkPSgoKT0+enJ8fChLci50aGVuKFdyKSx6cj1IcigpKSkoKSxufShvLHIpLGwpfWVsc2UgaSYmKCFmdW5jdGlvbihlLHQsbixvKXtlLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxuLG8pfShlLG4saSxsKSxzW3RdPXZvaWQgMCl9fWNvbnN0IEpyPS8oPzpPbmNlfFBhc3NpdmV8Q2FwdHVyZSkkLztjb25zdCBZcj0vXm9uW2Etel0vO2Z1bmN0aW9uIFpyKGUsdCxuKXtpZigxMjgmZS5zaGFwZUZsYWcpe2NvbnN0IG89ZS5zdXNwZW5zZTtlPW8uYWN0aXZlQnJhbmNoLG8ucGVuZGluZ0JyYW5jaCYmIW8uaXNIeWRyYXRpbmcmJm8uZWZmZWN0cy5wdXNoKCgpPT57WnIoby5hY3RpdmVCcmFuY2gsdCxuKX0pfWZvcig7ZS5jb21wb25lbnQ7KWU9ZS5jb21wb25lbnQuc3ViVHJlZTtpZigxJmUuc2hhcGVGbGFnJiZlLmVsKXtjb25zdCBvPWUuZWwuc3R5bGU7Zm9yKGNvbnN0IGUgaW4gdClvLnNldFByb3BlcnR5KGAtLSR7bn0ke2V9YCxjdCh0W2VdKSl9ZWxzZSBlLnR5cGU9PT1NbyYmZS5jaGlsZHJlbi5mb3JFYWNoKGU9PlpyKGUsdCxuKSl9Y29uc3QgUXI9InRyYW5zaXRpb24iLFhyPSJhbmltYXRpb24iLGVzPShlLHtzbG90czp0fSk9PiRyKFZuLG9zKGUpLHQpO2VzLmRpc3BsYXlOYW1lPSJUcmFuc2l0aW9uIjtjb25zdCB0cz17bmFtZTpTdHJpbmcsdHlwZTpTdHJpbmcsY3NzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDohMH0sZHVyYXRpb246W1N0cmluZyxOdW1iZXIsT2JqZWN0XSxlbnRlckZyb21DbGFzczpTdHJpbmcsZW50ZXJBY3RpdmVDbGFzczpTdHJpbmcsZW50ZXJUb0NsYXNzOlN0cmluZyxhcHBlYXJGcm9tQ2xhc3M6U3RyaW5nLGFwcGVhckFjdGl2ZUNsYXNzOlN0cmluZyxhcHBlYXJUb0NsYXNzOlN0cmluZyxsZWF2ZUZyb21DbGFzczpTdHJpbmcsbGVhdmVBY3RpdmVDbGFzczpTdHJpbmcsbGVhdmVUb0NsYXNzOlN0cmluZ30sbnM9ZXMucHJvcHM9Qyh7fSxWbi5wcm9wcyx0cyk7ZnVuY3Rpb24gb3MoZSl7bGV0e25hbWU6dD0idiIsdHlwZTpuLGNzczpvPSEwLGR1cmF0aW9uOnIsZW50ZXJGcm9tQ2xhc3M6cz10KyItZW50ZXItZnJvbSIsZW50ZXJBY3RpdmVDbGFzczppPXQrIi1lbnRlci1hY3RpdmUiLGVudGVyVG9DbGFzczpsPXQrIi1lbnRlci10byIsYXBwZWFyRnJvbUNsYXNzOmM9cyxhcHBlYXJBY3RpdmVDbGFzczphPWksYXBwZWFyVG9DbGFzczp1PWwsbGVhdmVGcm9tQ2xhc3M6cD10KyItbGVhdmUtZnJvbSIsbGVhdmVBY3RpdmVDbGFzczpmPXQrIi1sZWF2ZS1hY3RpdmUiLGxlYXZlVG9DbGFzczpkPXQrIi1sZWF2ZS10byJ9PWU7Y29uc3QgaD17fTtmb3IoY29uc3QgdCBpbiBlKXQgaW4gdHN8fChoW3RdPWVbdF0pO2lmKCFvKXJldHVybiBoO2NvbnN0IG09ZnVuY3Rpb24oZSl7aWYobnVsbD09ZSlyZXR1cm4gbnVsbDtpZihSKGUpKXJldHVybltycyhlLmVudGVyKSxycyhlLmxlYXZlKV07e2NvbnN0IHQ9cnMoZSk7cmV0dXJuW3QsdF19fShyKSxnPW0mJm1bMF0sdj1tJiZtWzFdLHtvbkJlZm9yZUVudGVyOnksb25FbnRlcjpiLG9uRW50ZXJDYW5jZWxsZWQ6XyxvbkxlYXZlOngsb25MZWF2ZUNhbmNlbGxlZDpTLG9uQmVmb3JlQXBwZWFyOms9eSxvbkFwcGVhcjp3PWIsb25BcHBlYXJDYW5jZWxsZWQ6VD1ffT1oLE49KGUsdCxuKT0+e2lzKGUsdD91OmwpLGlzKGUsdD9hOmkpLG4mJm4oKX0sRT0oZSx0KT0+e2lzKGUsZCksaXMoZSxmKSx0JiZ0KCl9LEY9ZT0+KHQsbyk9Pntjb25zdCByPWU/dzpiLGk9KCk9Pk4odCxlLG8pO3ImJnIodCxpKSxscygoKT0+e2lzKHQsZT9jOnMpLHNzKHQsZT91OmwpLHImJnIubGVuZ3RoPjF8fChnP3NldFRpbWVvdXQoaSxnKTpjcyh0LG4saSkpfSl9O3JldHVybiBDKGgse29uQmVmb3JlRW50ZXIoZSl7eSYmeShlKSxzcyhlLGkpLHNzKGUscyl9LG9uQmVmb3JlQXBwZWFyKGUpe2smJmsoZSksc3MoZSxhKSxzcyhlLGMpfSxvbkVudGVyOkYoITEpLG9uQXBwZWFyOkYoITApLG9uTGVhdmUoZSx0KXtjb25zdCBvPSgpPT5FKGUsdCk7c3MoZSxmKSxzcyhlLHApLGxzKCgpPT57aXMoZSxwKSxzcyhlLGQpLHgmJngubGVuZ3RoPjF8fCh2P3NldFRpbWVvdXQobyx2KTpjcyhlLG4sbykpfSkseCYmeChlLG8pfSxvbkVudGVyQ2FuY2VsbGVkKGUpe04oZSwhMSksXyYmXyhlKX0sb25BcHBlYXJDYW5jZWxsZWQoZSl7TihlLCEwKSxUJiZUKGUpfSxvbkxlYXZlQ2FuY2VsbGVkKGUpe0UoZSksUyYmUyhlKX19KX1mdW5jdGlvbiBycyhlKXtyZXR1cm4gWihlKX1mdW5jdGlvbiBzcyhlLHQpe3Quc3BsaXQoL1xzKy8pLmZvckVhY2godD0+dCYmZS5jbGFzc0xpc3QuYWRkKHQpKSwoZS5fdnRjfHwoZS5fdnRjPW5ldyBTZXQpKS5hZGQodCl9ZnVuY3Rpb24gaXMoZSx0KXt0LnNwbGl0KC9ccysvKS5mb3JFYWNoKHQ9PnQmJmUuY2xhc3NMaXN0LnJlbW92ZSh0KSk7Y29uc3R7X3Z0YzpufT1lO24mJihuLmRlbGV0ZSh0KSxuLnNpemV8fChlLl92dGM9dm9pZCAwKSl9ZnVuY3Rpb24gbHMoZSl7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT57cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGUpfSl9ZnVuY3Rpb24gY3MoZSx0LG4pe2NvbnN0e3R5cGU6byx0aW1lb3V0OnIscHJvcENvdW50OnN9PWFzKGUsdCk7aWYoIW8pcmV0dXJuIG4oKTtjb25zdCBpPW8rImVuZCI7bGV0IGw9MDtjb25zdCBjPSgpPT57ZS5yZW1vdmVFdmVudExpc3RlbmVyKGksYSksbigpfSxhPXQ9Pnt0LnRhcmdldD09PWUmJisrbD49cyYmYygpfTtzZXRUaW1lb3V0KCgpPT57bDxzJiZjKCl9LHIrMSksZS5hZGRFdmVudExpc3RlbmVyKGksYSl9ZnVuY3Rpb24gYXMoZSx0KXtjb25zdCBuPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUpLG89ZT0+KG5bZV18fCIiKS5zcGxpdCgiLCAiKSxyPW8oInRyYW5zaXRpb25EZWxheSIpLHM9bygidHJhbnNpdGlvbkR1cmF0aW9uIiksaT11cyhyLHMpLGw9bygiYW5pbWF0aW9uRGVsYXkiKSxjPW8oImFuaW1hdGlvbkR1cmF0aW9uIiksYT11cyhsLGMpO2xldCB1PW51bGwscD0wLGY9MDt0PT09UXI/aT4wJiYodT1RcixwPWksZj1zLmxlbmd0aCk6dD09PVhyP2E+MCYmKHU9WHIscD1hLGY9Yy5sZW5ndGgpOihwPU1hdGgubWF4KGksYSksdT1wPjA/aT5hP1FyOlhyOm51bGwsZj11P3U9PT1Rcj9zLmxlbmd0aDpjLmxlbmd0aDowKTtyZXR1cm57dHlwZTp1LHRpbWVvdXQ6cCxwcm9wQ291bnQ6ZixoYXNUcmFuc2Zvcm06dT09PVFyJiYvXGIodHJhbnNmb3JtfGFsbCkoLHwkKS8udGVzdChuLnRyYW5zaXRpb25Qcm9wZXJ0eSl9fWZ1bmN0aW9uIHVzKGUsdCl7Zm9yKDtlLmxlbmd0aDx0Lmxlbmd0aDspZT1lLmNvbmNhdChlKTtyZXR1cm4gTWF0aC5tYXgoLi4udC5tYXAoKHQsbik9PnBzKHQpK3BzKGVbbl0pKSl9ZnVuY3Rpb24gcHMoZSl7cmV0dXJuIDFlMypOdW1iZXIoZS5zbGljZSgwLC0xKS5yZXBsYWNlKCIsIiwiLiIpKX1jb25zdCBmcz1uZXcgV2Vha01hcCxkcz1uZXcgV2Vha01hcCxocz17bmFtZToiVHJhbnNpdGlvbkdyb3VwIixwcm9wczpDKHt9LG5zLHt0YWc6U3RyaW5nLG1vdmVDbGFzczpTdHJpbmd9KSxzZXR1cChlLHtzbG90czp0fSl7Y29uc3Qgbj12cigpLG89SW4oKTtsZXQgcixzO3JldHVybiB3bigoKT0+e2lmKCFyLmxlbmd0aClyZXR1cm47Y29uc3QgdD1lLm1vdmVDbGFzc3x8KGUubmFtZXx8InYiKSsiLW1vdmUiO2lmKCFmdW5jdGlvbihlLHQsbil7Y29uc3Qgbz1lLmNsb25lTm9kZSgpO2UuX3Z0YyYmZS5fdnRjLmZvckVhY2goZT0+e2Uuc3BsaXQoL1xzKy8pLmZvckVhY2goZT0+ZSYmby5jbGFzc0xpc3QucmVtb3ZlKGUpKX0pO24uc3BsaXQoL1xzKy8pLmZvckVhY2goZT0+ZSYmby5jbGFzc0xpc3QuYWRkKGUpKSxvLnN0eWxlLmRpc3BsYXk9Im5vbmUiO2NvbnN0IHI9MT09PXQubm9kZVR5cGU/dDp0LnBhcmVudE5vZGU7ci5hcHBlbmRDaGlsZChvKTtjb25zdHtoYXNUcmFuc2Zvcm06c309YXMobyk7cmV0dXJuIHIucmVtb3ZlQ2hpbGQobyksc30oclswXS5lbCxuLnZub2RlLmVsLHQpKXJldHVybjtyLmZvckVhY2gobXMpLHIuZm9yRWFjaChncyk7Y29uc3Qgbz1yLmZpbHRlcih2cyk7ZG9jdW1lbnQsby5mb3JFYWNoKGU9Pntjb25zdCBuPWUuZWwsbz1uLnN0eWxlO3NzKG4sdCksby50cmFuc2Zvcm09by53ZWJraXRUcmFuc2Zvcm09by50cmFuc2l0aW9uRHVyYXRpb249IiI7Y29uc3Qgcj1uLl9tb3ZlQ2I9ZT0+e2UmJmUudGFyZ2V0IT09bnx8ZSYmIS90cmFuc2Zvcm0kLy50ZXN0KGUucHJvcGVydHlOYW1lKXx8KG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcigidHJhbnNpdGlvbmVuZCIsciksbi5fbW92ZUNiPW51bGwsaXMobix0KSl9O24uYWRkRXZlbnRMaXN0ZW5lcigidHJhbnNpdGlvbmVuZCIscil9KX0pLCgpPT57Y29uc3QgaT1udChlKSxsPW9zKGkpLGM9aS50YWd8fE1vO3I9cyxzPXQuZGVmYXVsdD9Lbih0LmRlZmF1bHQoKSk6W107Zm9yKGxldCBlPTA7ZTxzLmxlbmd0aDtlKyspe2NvbnN0IHQ9c1tlXTtudWxsIT10LmtleSYmem4odCxqbih0LGwsbyxuKSl9aWYocilmb3IobGV0IGU9MDtlPHIubGVuZ3RoO2UrKyl7Y29uc3QgdD1yW2VdO3puKHQsam4odCxsLG8sbikpLGZzLnNldCh0LHQuZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpfXJldHVybiBHbyhjLG51bGwscyl9fX07ZnVuY3Rpb24gbXMoZSl7Y29uc3QgdD1lLmVsO3QuX21vdmVDYiYmdC5fbW92ZUNiKCksdC5fZW50ZXJDYiYmdC5fZW50ZXJDYigpfWZ1bmN0aW9uIGdzKGUpe2RzLnNldChlLGUuZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpfWZ1bmN0aW9uIHZzKGUpe2NvbnN0IHQ9ZnMuZ2V0KGUpLG49ZHMuZ2V0KGUpLG89dC5sZWZ0LW4ubGVmdCxyPXQudG9wLW4udG9wO2lmKG98fHIpe2NvbnN0IHQ9ZS5lbC5zdHlsZTtyZXR1cm4gdC50cmFuc2Zvcm09dC53ZWJraXRUcmFuc2Zvcm09YHRyYW5zbGF0ZSgke299cHgsJHtyfXB4KWAsdC50cmFuc2l0aW9uRHVyYXRpb249IjBzIixlfX1jb25zdCB5cz1lPT57Y29uc3QgdD1lLnByb3BzWyJvblVwZGF0ZTptb2RlbFZhbHVlIl07cmV0dXJuIE4odCk/ZT0+Sih0LGUpOnR9O2Z1bmN0aW9uIGJzKGUpe2UudGFyZ2V0LmNvbXBvc2luZz0hMH1mdW5jdGlvbiBfcyhlKXtjb25zdCB0PWUudGFyZ2V0O3QuY29tcG9zaW5nJiYodC5jb21wb3Npbmc9ITEsZnVuY3Rpb24oZSx0KXtjb25zdCBuPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJIVE1MRXZlbnRzIik7bi5pbml0RXZlbnQodCwhMCwhMCksZS5kaXNwYXRjaEV2ZW50KG4pfSh0LCJpbnB1dCIpKX1jb25zdCB4cz17Y3JlYXRlZChlLHttb2RpZmllcnM6e2xhenk6dCx0cmltOm4sbnVtYmVyOm99fSxyKXtlLl9hc3NpZ249eXMocik7Y29uc3Qgcz1vfHwibnVtYmVyIj09PWUudHlwZTtHcihlLHQ/ImNoYW5nZSI6ImlucHV0Iix0PT57aWYodC50YXJnZXQuY29tcG9zaW5nKXJldHVybjtsZXQgbz1lLnZhbHVlO24/bz1vLnRyaW0oKTpzJiYobz1aKG8pKSxlLl9hc3NpZ24obyl9KSxuJiZHcihlLCJjaGFuZ2UiLCgpPT57ZS52YWx1ZT1lLnZhbHVlLnRyaW0oKX0pLHR8fChHcihlLCJjb21wb3NpdGlvbnN0YXJ0IixicyksR3IoZSwiY29tcG9zaXRpb25lbmQiLF9zKSxHcihlLCJjaGFuZ2UiLF9zKSl9LG1vdW50ZWQoZSx7dmFsdWU6dH0pe2UudmFsdWU9bnVsbD09dD8iIjp0fSxiZWZvcmVVcGRhdGUoZSx7dmFsdWU6dCxtb2RpZmllcnM6e3RyaW06bixudW1iZXI6b319LHIpe2lmKGUuX2Fzc2lnbj15cyhyKSxlLmNvbXBvc2luZylyZXR1cm47aWYoZG9jdW1lbnQuYWN0aXZlRWxlbWVudD09PWUpe2lmKG4mJmUudmFsdWUudHJpbSgpPT09dClyZXR1cm47aWYoKG98fCJudW1iZXIiPT09ZS50eXBlKSYmWihlLnZhbHVlKT09PXQpcmV0dXJufWNvbnN0IHM9bnVsbD09dD8iIjp0O2UudmFsdWUhPT1zJiYoZS52YWx1ZT1zKX19LFNzPXtjcmVhdGVkKGUsdCxuKXtDcyhlLHQsbiksZS5fYXNzaWduPXlzKG4pLEdyKGUsImNoYW5nZSIsKCk9Pntjb25zdCB0PWUuX21vZGVsVmFsdWUsbj1OcyhlKSxvPWUuY2hlY2tlZCxyPWUuX2Fzc2lnbjtpZihOKHQpKXtjb25zdCBlPWgodCxuKSxzPS0xIT09ZTtpZihvJiYhcylyKHQuY29uY2F0KG4pKTtlbHNlIGlmKCFvJiZzKXtjb25zdCBuPVsuLi50XTtuLnNwbGljZShlLDEpLHIobil9fWVsc2UgRih0KT9vP3QuYWRkKG4pOnQuZGVsZXRlKG4pOnIoRXMoZSxvKSl9KX0sYmVmb3JlVXBkYXRlKGUsdCxuKXtlLl9hc3NpZ249eXMobiksQ3MoZSx0LG4pfX07ZnVuY3Rpb24gQ3MoZSx7dmFsdWU6dCxvbGRWYWx1ZTpufSxvKXtlLl9tb2RlbFZhbHVlPXQsTih0KT9lLmNoZWNrZWQ9aCh0LG8ucHJvcHMudmFsdWUpPi0xOkYodCk/ZS5jaGVja2VkPXQuaGFzKG8ucHJvcHMudmFsdWUpOnQhPT1uJiYoZS5jaGVja2VkPWQodCxFcyhlLCEwKSkpfWNvbnN0IGtzPXtjcmVhdGVkKGUse3ZhbHVlOnR9LG4pe2UuY2hlY2tlZD1kKHQsbi5wcm9wcy52YWx1ZSksZS5fYXNzaWduPXlzKG4pLEdyKGUsImNoYW5nZSIsKCk9PntlLl9hc3NpZ24oTnMoZSkpfSl9LGJlZm9yZVVwZGF0ZShlLHt2YWx1ZTp0LG9sZFZhbHVlOm59LG8pe2UuX2Fzc2lnbj15cyhvKSx0IT09biYmKGUuY2hlY2tlZD1kKHQsby5wcm9wcy52YWx1ZSkpfX0sd3M9e2NyZWF0ZWQoZSx7bW9kaWZpZXJzOntudW1iZXI6dH19LG4pe0dyKGUsImNoYW5nZSIsKCk9Pntjb25zdCBuPUFycmF5LnByb3RvdHlwZS5maWx0ZXIuY2FsbChlLm9wdGlvbnMsZT0+ZS5zZWxlY3RlZCkubWFwKGU9PnQ/WihOcyhlKSk6TnMoZSkpO2UuX2Fzc2lnbihlLm11bHRpcGxlP246blswXSl9KSxlLl9hc3NpZ249eXMobil9LG1vdW50ZWQoZSx7dmFsdWU6dH0pe1RzKGUsdCl9LGJlZm9yZVVwZGF0ZShlLHQsbil7ZS5fYXNzaWduPXlzKG4pfSx1cGRhdGVkKGUse3ZhbHVlOnR9KXtUcyhlLHQpfX07ZnVuY3Rpb24gVHMoZSx0KXtjb25zdCBuPWUubXVsdGlwbGU7aWYoIW58fE4odCl8fEYodCkpe2ZvcihsZXQgbz0wLHI9ZS5vcHRpb25zLmxlbmd0aDtvPHI7bysrKXtjb25zdCByPWUub3B0aW9uc1tvXSxzPU5zKHIpO2lmKG4pci5zZWxlY3RlZD1OKHQpP2godCxzKT4tMTp0LmhhcyhzKTtlbHNlIGlmKGQoTnMociksdCkpcmV0dXJuIHZvaWQoZS5zZWxlY3RlZEluZGV4PW8pfW58fChlLnNlbGVjdGVkSW5kZXg9LTEpfX1mdW5jdGlvbiBOcyhlKXtyZXR1cm4iX3ZhbHVlImluIGU/ZS5fdmFsdWU6ZS52YWx1ZX1mdW5jdGlvbiBFcyhlLHQpe2NvbnN0IG49dD8iX3RydWVWYWx1ZSI6Il9mYWxzZVZhbHVlIjtyZXR1cm4gbiBpbiBlP2Vbbl06dH1jb25zdCBGcz17Y3JlYXRlZChlLHQsbil7JHMoZSx0LG4sbnVsbCwiY3JlYXRlZCIpfSxtb3VudGVkKGUsdCxuKXskcyhlLHQsbixudWxsLCJtb3VudGVkIil9LGJlZm9yZVVwZGF0ZShlLHQsbixvKXskcyhlLHQsbixvLCJiZWZvcmVVcGRhdGUiKX0sdXBkYXRlZChlLHQsbixvKXskcyhlLHQsbixvLCJ1cGRhdGVkIil9fTtmdW5jdGlvbiAkcyhlLHQsbixvLHIpe2xldCBzO3N3aXRjaChlLnRhZ05hbWUpe2Nhc2UiU0VMRUNUIjpzPXdzO2JyZWFrO2Nhc2UiVEVYVEFSRUEiOnM9eHM7YnJlYWs7ZGVmYXVsdDpzd2l0Y2gobi5wcm9wcyYmbi5wcm9wcy50eXBlKXtjYXNlImNoZWNrYm94IjpzPVNzO2JyZWFrO2Nhc2UicmFkaW8iOnM9a3M7YnJlYWs7ZGVmYXVsdDpzPXhzfX1jb25zdCBpPXNbcl07aSYmaShlLHQsbixvKX1jb25zdCBBcz1bImN0cmwiLCJzaGlmdCIsImFsdCIsIm1ldGEiXSxNcz17c3RvcDplPT5lLnN0b3BQcm9wYWdhdGlvbigpLHByZXZlbnQ6ZT0+ZS5wcmV2ZW50RGVmYXVsdCgpLHNlbGY6ZT0+ZS50YXJnZXQhPT1lLmN1cnJlbnRUYXJnZXQsY3RybDplPT4hZS5jdHJsS2V5LHNoaWZ0OmU9PiFlLnNoaWZ0S2V5LGFsdDplPT4hZS5hbHRLZXksbWV0YTplPT4hZS5tZXRhS2V5LGxlZnQ6ZT0+ImJ1dHRvbiJpbiBlJiYwIT09ZS5idXR0b24sbWlkZGxlOmU9PiJidXR0b24iaW4gZSYmMSE9PWUuYnV0dG9uLHJpZ2h0OmU9PiJidXR0b24iaW4gZSYmMiE9PWUuYnV0dG9uLGV4YWN0OihlLHQpPT5Bcy5zb21lKG49PmVbbisiS2V5Il0mJiF0LmluY2x1ZGVzKG4pKX0sT3M9e2VzYzoiZXNjYXBlIixzcGFjZToiICIsdXA6ImFycm93LXVwIixsZWZ0OiJhcnJvdy1sZWZ0IixyaWdodDoiYXJyb3ctcmlnaHQiLGRvd246ImFycm93LWRvd24iLGRlbGV0ZToiYmFja3NwYWNlIn0sUnM9e2JlZm9yZU1vdW50KGUse3ZhbHVlOnR9LHt0cmFuc2l0aW9uOm59KXtlLl92b2Q9Im5vbmUiPT09ZS5zdHlsZS5kaXNwbGF5PyIiOmUuc3R5bGUuZGlzcGxheSxuJiZ0P24uYmVmb3JlRW50ZXIoZSk6QnMoZSx0KX0sbW91bnRlZChlLHt2YWx1ZTp0fSx7dHJhbnNpdGlvbjpufSl7biYmdCYmbi5lbnRlcihlKX0sdXBkYXRlZChlLHt2YWx1ZTp0LG9sZFZhbHVlOm59LHt0cmFuc2l0aW9uOm99KXshdCE9IW4mJihvP3Q/KG8uYmVmb3JlRW50ZXIoZSksQnMoZSwhMCksby5lbnRlcihlKSk6by5sZWF2ZShlLCgpPT57QnMoZSwhMSl9KTpCcyhlLHQpKX0sYmVmb3JlVW5tb3VudChlLHt2YWx1ZTp0fSl7QnMoZSx0KX19O2Z1bmN0aW9uIEJzKGUsdCl7ZS5zdHlsZS5kaXNwbGF5PXQ/ZS5fdm9kOiJub25lIn1jb25zdCBQcz1DKHtwYXRjaFByb3A6KGUsdCxuLG8scz0hMSxpLGwsYyxhKT0+e3N3aXRjaCh0KXtjYXNlImNsYXNzIjohZnVuY3Rpb24oZSx0LG4pe2lmKG51bGw9PXQmJih0PSIiKSxuKWUuc2V0QXR0cmlidXRlKCJjbGFzcyIsdCk7ZWxzZXtjb25zdCBuPWUuX3Z0YztuJiYodD0odD9bdCwuLi5uXTpbLi4ubl0pLmpvaW4oIiAiKSksZS5jbGFzc05hbWU9dH19KGUsbyxzKTticmVhaztjYXNlInN0eWxlIjohZnVuY3Rpb24oZSx0LG4pe2NvbnN0IG89ZS5zdHlsZTtpZihuKWlmKE0obikpdCE9PW4mJihvLmNzc1RleHQ9bik7ZWxzZXtmb3IoY29uc3QgZSBpbiBuKVZyKG8sZSxuW2VdKTtpZih0JiYhTSh0KSlmb3IoY29uc3QgZSBpbiB0KW51bGw9PW5bZV0mJlZyKG8sZSwiIil9ZWxzZSBlLnJlbW92ZUF0dHJpYnV0ZSgic3R5bGUiKX0oZSxuLG8pO2JyZWFrO2RlZmF1bHQ6eCh0KT9TKHQpfHxxcihlLHQsMCxvLGwpOmZ1bmN0aW9uKGUsdCxuLG8pe2lmKG8pcmV0dXJuImlubmVySFRNTCI9PT10fHwhISh0IGluIGUmJllyLnRlc3QodCkmJkEobikpO2lmKCJzcGVsbGNoZWNrIj09PXR8fCJkcmFnZ2FibGUiPT09dClyZXR1cm4hMTtpZigiZm9ybSI9PT10JiYic3RyaW5nIj09dHlwZW9mIG4pcmV0dXJuITE7aWYoImxpc3QiPT09dCYmIklOUFVUIj09PWUudGFnTmFtZSlyZXR1cm4hMTtpZihZci50ZXN0KHQpJiZNKG4pKXJldHVybiExO3JldHVybiB0IGluIGV9KGUsdCxvLHMpP2Z1bmN0aW9uKGUsdCxuLG8scixzLGkpe2lmKCJpbm5lckhUTUwiPT09dHx8InRleHRDb250ZW50Ij09PXQpcmV0dXJuIG8mJmkobyxyLHMpLHZvaWQoZVt0XT1udWxsPT1uPyIiOm4pO2lmKCJ2YWx1ZSIhPT10fHwiUFJPR1JFU1MiPT09ZS50YWdOYW1lKWlmKCIiPT09biYmImJvb2xlYW4iPT10eXBlb2YgZVt0XSllW3RdPSEwO2Vsc2UgaWYobnVsbD09biYmInN0cmluZyI9PXR5cGVvZiBlW3RdKWVbdF09IiIsZS5yZW1vdmVBdHRyaWJ1dGUodCk7ZWxzZSB0cnl7ZVt0XT1ufWNhdGNoKGUpe31lbHNle2UuX3ZhbHVlPW47Y29uc3QgdD1udWxsPT1uPyIiOm47ZS52YWx1ZSE9PXQmJihlLnZhbHVlPXQpfX0oZSx0LG8saSxsLGMsYSk6KCJ0cnVlLXZhbHVlIj09PXQ/ZS5fdHJ1ZVZhbHVlPW86ImZhbHNlLXZhbHVlIj09PXQmJihlLl9mYWxzZVZhbHVlPW8pLGZ1bmN0aW9uKGUsdCxuLG8pe2lmKG8mJnQuc3RhcnRzV2l0aCgieGxpbms6IikpbnVsbD09bj9lLnJlbW92ZUF0dHJpYnV0ZU5TKERyLHQuc2xpY2UoNix0Lmxlbmd0aCkpOmUuc2V0QXR0cmlidXRlTlMoRHIsdCxuKTtlbHNle2NvbnN0IG89cih0KTtudWxsPT1ufHxvJiYhMT09PW4/ZS5yZW1vdmVBdHRyaWJ1dGUodCk6ZS5zZXRBdHRyaWJ1dGUodCxvPyIiOm4pfX0oZSx0LG8scykpfX0sZm9yY2VQYXRjaFByb3A6KGUsdCk9PiJ2YWx1ZSI9PT10fSxJcik7bGV0IElzLExzPSExO2Z1bmN0aW9uIFZzKCl7cmV0dXJuIElzfHwoSXM9Ym8oUHMpKX1mdW5jdGlvbiBVcygpe3JldHVybiBJcz1Mcz9JczpfbyhQcyksTHM9ITAsSXN9ZnVuY3Rpb24ganMoZSl7aWYoTShlKSl7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSl9cmV0dXJuIGV9ZnVuY3Rpb24gRHMoZSl7dGhyb3cgZX1mdW5jdGlvbiBIcyhlLHQsbixvKXtjb25zdCByPW5ldyBTeW50YXhFcnJvcihTdHJpbmcoZSkpO3JldHVybiByLmNvZGU9ZSxyLmxvYz10LHJ9Y29uc3QgenM9U3ltYm9sKCIiKSxLcz1TeW1ib2woIiIpLFdzPVN5bWJvbCgiIiksR3M9U3ltYm9sKCIiKSxxcz1TeW1ib2woIiIpLEpzPVN5bWJvbCgiIiksWXM9U3ltYm9sKCIiKSxacz1TeW1ib2woIiIpLFFzPVN5bWJvbCgiIiksWHM9U3ltYm9sKCIiKSxlaT1TeW1ib2woIiIpLHRpPVN5bWJvbCgiIiksbmk9U3ltYm9sKCIiKSxvaT1TeW1ib2woIiIpLHJpPVN5bWJvbCgiIiksc2k9U3ltYm9sKCIiKSxpaT1TeW1ib2woIiIpLGxpPVN5bWJvbCgiIiksY2k9U3ltYm9sKCIiKSxhaT1TeW1ib2woIiIpLHVpPVN5bWJvbCgiIikscGk9U3ltYm9sKCIiKSxmaT1TeW1ib2woIiIpLGRpPVN5bWJvbCgiIiksaGk9U3ltYm9sKCIiKSxtaT1TeW1ib2woIiIpLGdpPVN5bWJvbCgiIiksdmk9U3ltYm9sKCIiKSx5aT1TeW1ib2woIiIpLGJpPXtbenNdOiJGcmFnbWVudCIsW0tzXToiVGVsZXBvcnQiLFtXc106IlN1c3BlbnNlIixbR3NdOiJLZWVwQWxpdmUiLFtxc106IkJhc2VUcmFuc2l0aW9uIixbSnNdOiJvcGVuQmxvY2siLFtZc106ImNyZWF0ZUJsb2NrIixbWnNdOiJjcmVhdGVWTm9kZSIsW1FzXToiY3JlYXRlQ29tbWVudFZOb2RlIixbWHNdOiJjcmVhdGVUZXh0Vk5vZGUiLFtlaV06ImNyZWF0ZVN0YXRpY1ZOb2RlIixbdGldOiJyZXNvbHZlQ29tcG9uZW50IixbbmldOiJyZXNvbHZlRHluYW1pY0NvbXBvbmVudCIsW29pXToicmVzb2x2ZURpcmVjdGl2ZSIsW3JpXToid2l0aERpcmVjdGl2ZXMiLFtzaV06InJlbmRlckxpc3QiLFtpaV06InJlbmRlclNsb3QiLFtsaV06ImNyZWF0ZVNsb3RzIixbY2ldOiJ0b0Rpc3BsYXlTdHJpbmciLFthaV06Im1lcmdlUHJvcHMiLFt1aV06InRvSGFuZGxlcnMiLFtwaV06ImNhbWVsaXplIixbZmldOiJjYXBpdGFsaXplIixbZGldOiJ0b0hhbmRsZXJLZXkiLFtoaV06InNldEJsb2NrVHJhY2tpbmciLFttaV06InB1c2hTY29wZUlkIixbZ2ldOiJwb3BTY29wZUlkIixbdmldOiJ3aXRoU2NvcGVJZCIsW3lpXToid2l0aEN0eCJ9O2NvbnN0IF9pPXtzb3VyY2U6IiIsc3RhcnQ6e2xpbmU6MSxjb2x1bW46MSxvZmZzZXQ6MH0sZW5kOntsaW5lOjEsY29sdW1uOjEsb2Zmc2V0OjB9fTtmdW5jdGlvbiB4aShlLHQsbixvLHIscyxpLGw9ITEsYz0hMSxhPV9pKXtyZXR1cm4gZSYmKGw/KGUuaGVscGVyKEpzKSxlLmhlbHBlcihZcykpOmUuaGVscGVyKFpzKSxpJiZlLmhlbHBlcihyaSkpLHt0eXBlOjEzLHRhZzp0LHByb3BzOm4sY2hpbGRyZW46byxwYXRjaEZsYWc6cixkeW5hbWljUHJvcHM6cyxkaXJlY3RpdmVzOmksaXNCbG9jazpsLGRpc2FibGVUcmFja2luZzpjLGxvYzphfX1mdW5jdGlvbiBTaShlLHQ9X2kpe3JldHVybnt0eXBlOjE3LGxvYzp0LGVsZW1lbnRzOmV9fWZ1bmN0aW9uIENpKGUsdD1faSl7cmV0dXJue3R5cGU6MTUsbG9jOnQscHJvcGVydGllczplfX1mdW5jdGlvbiBraShlLHQpe3JldHVybnt0eXBlOjE2LGxvYzpfaSxrZXk6TShlKT93aShlLCEwKTplLHZhbHVlOnR9fWZ1bmN0aW9uIHdpKGUsdCxuPV9pLG89ITEpe3JldHVybnt0eXBlOjQsbG9jOm4saXNDb25zdGFudDpvLGNvbnRlbnQ6ZSxpc1N0YXRpYzp0fX1mdW5jdGlvbiBUaShlLHQ9X2kpe3JldHVybnt0eXBlOjgsbG9jOnQsY2hpbGRyZW46ZX19ZnVuY3Rpb24gTmkoZSx0PVtdLG49X2kpe3JldHVybnt0eXBlOjE0LGxvYzpuLGNhbGxlZTplLGFyZ3VtZW50czp0fX1mdW5jdGlvbiBFaShlLHQsbj0hMSxvPSExLHI9X2kpe3JldHVybnt0eXBlOjE4LHBhcmFtczplLHJldHVybnM6dCxuZXdsaW5lOm4saXNTbG90Om8sbG9jOnJ9fWZ1bmN0aW9uIEZpKGUsdCxuLG89ITApe3JldHVybnt0eXBlOjE5LHRlc3Q6ZSxjb25zZXF1ZW50OnQsYWx0ZXJuYXRlOm4sbmV3bGluZTpvLGxvYzpfaX19Y29uc3QgJGk9ZT0+ND09PWUudHlwZSYmZS5pc1N0YXRpYyxBaT0oZSx0KT0+ZT09PXR8fGU9PT1LKHQpO2Z1bmN0aW9uIE1pKGUpe3JldHVybiBBaShlLCJUZWxlcG9ydCIpP0tzOkFpKGUsIlN1c3BlbnNlIik/V3M6QWkoZSwiS2VlcEFsaXZlIik/R3M6QWkoZSwiQmFzZVRyYW5zaXRpb24iKT9xczp2b2lkIDB9Y29uc3QgT2k9L15cZHxbXlwkXHddLyxSaT1lPT4hT2kudGVzdChlKSxCaT0vXltBLVphLXpfJF1bXHckXSooPzpccypcLlxzKltBLVphLXpfJF1bXHckXSp8XFtbXlxdXStcXSkqJC8sUGk9ZT0+ISFlJiZCaS50ZXN0KGUudHJpbSgpKTtmdW5jdGlvbiBJaShlLHQsbil7Y29uc3Qgbz17c291cmNlOmUuc291cmNlLnN1YnN0cih0LG4pLHN0YXJ0OkxpKGUuc3RhcnQsZS5zb3VyY2UsdCksZW5kOmUuZW5kfTtyZXR1cm4gbnVsbCE9biYmKG8uZW5kPUxpKGUuc3RhcnQsZS5zb3VyY2UsdCtuKSksb31mdW5jdGlvbiBMaShlLHQsbj10Lmxlbmd0aCl7cmV0dXJuIFZpKEMoe30sZSksdCxuKX1mdW5jdGlvbiBWaShlLHQsbj10Lmxlbmd0aCl7bGV0IG89MCxyPS0xO2ZvcihsZXQgZT0wO2U8bjtlKyspMTA9PT10LmNoYXJDb2RlQXQoZSkmJihvKysscj1lKTtyZXR1cm4gZS5vZmZzZXQrPW4sZS5saW5lKz1vLGUuY29sdW1uPS0xPT09cj9lLmNvbHVtbituOm4tcixlfWZ1bmN0aW9uIFVpKGUsdCxuPSExKXtmb3IobGV0IG89MDtvPGUucHJvcHMubGVuZ3RoO28rKyl7Y29uc3Qgcj1lLnByb3BzW29dO2lmKDc9PT1yLnR5cGUmJihufHxyLmV4cCkmJihNKHQpP3IubmFtZT09PXQ6dC50ZXN0KHIubmFtZSkpKXJldHVybiByfX1mdW5jdGlvbiBqaShlLHQsbj0hMSxvPSExKXtmb3IobGV0IHI9MDtyPGUucHJvcHMubGVuZ3RoO3IrKyl7Y29uc3Qgcz1lLnByb3BzW3JdO2lmKDY9PT1zLnR5cGUpe2lmKG4pY29udGludWU7aWYocy5uYW1lPT09dCYmKHMudmFsdWV8fG8pKXJldHVybiBzfWVsc2UgaWYoImJpbmQiPT09cy5uYW1lJiYocy5leHB8fG8pJiZEaShzLmFyZyx0KSlyZXR1cm4gc319ZnVuY3Rpb24gRGkoZSx0KXtyZXR1cm4hKCFlfHwhJGkoZSl8fGUuY29udGVudCE9PXQpfWZ1bmN0aW9uIEhpKGUpe3JldHVybiA1PT09ZS50eXBlfHwyPT09ZS50eXBlfWZ1bmN0aW9uIHppKGUpe3JldHVybiA3PT09ZS50eXBlJiYic2xvdCI9PT1lLm5hbWV9ZnVuY3Rpb24gS2koZSl7cmV0dXJuIDE9PT1lLnR5cGUmJjM9PT1lLnRhZ1R5cGV9ZnVuY3Rpb24gV2koZSl7cmV0dXJuIDE9PT1lLnR5cGUmJjI9PT1lLnRhZ1R5cGV9ZnVuY3Rpb24gR2koZSx0LG4pe2xldCBvO2NvbnN0IHI9MTM9PT1lLnR5cGU/ZS5wcm9wczplLmFyZ3VtZW50c1syXTtpZihudWxsPT1yfHxNKHIpKW89Q2koW3RdKTtlbHNlIGlmKDE0PT09ci50eXBlKXtjb25zdCBlPXIuYXJndW1lbnRzWzBdO00oZSl8fDE1IT09ZS50eXBlP3IuY2FsbGVlPT09dWk/bz1OaShuLmhlbHBlcihhaSksW0NpKFt0XSkscl0pOnIuYXJndW1lbnRzLnVuc2hpZnQoQ2koW3RdKSk6ZS5wcm9wZXJ0aWVzLnVuc2hpZnQodCksIW8mJihvPXIpfWVsc2UgaWYoMTU9PT1yLnR5cGUpe2xldCBlPSExO2lmKDQ9PT10LmtleS50eXBlKXtjb25zdCBuPXQua2V5LmNvbnRlbnQ7ZT1yLnByb3BlcnRpZXMuc29tZShlPT40PT09ZS5rZXkudHlwZSYmZS5rZXkuY29udGVudD09PW4pfWV8fHIucHJvcGVydGllcy51bnNoaWZ0KHQpLG89cn1lbHNlIG89Tmkobi5oZWxwZXIoYWkpLFtDaShbdF0pLHJdKTsxMz09PWUudHlwZT9lLnByb3BzPW86ZS5hcmd1bWVudHNbMl09b31mdW5jdGlvbiBxaShlLHQpe3JldHVybmBfJHt0fV8ke2UucmVwbGFjZSgvW15cd10vZywiXyIpfWB9Y29uc3QgSmk9LyYoZ3R8bHR8YW1wfGFwb3N8cXVvdCk7L2csWWk9e2d0OiI+IixsdDoiPCIsYW1wOiImIixhcG9zOiInIixxdW90OiciJ30sWmk9e2RlbGltaXRlcnM6WyJ7eyIsIn19Il0sZ2V0TmFtZXNwYWNlOigpPT4wLGdldFRleHRNb2RlOigpPT4wLGlzVm9pZFRhZzpiLGlzUHJlVGFnOmIsaXNDdXN0b21FbGVtZW50OmIsZGVjb2RlRW50aXRpZXM6ZT0+ZS5yZXBsYWNlKEppLChlLHQpPT5ZaVt0XSksb25FcnJvcjpEcyxjb21tZW50czohMX07ZnVuY3Rpb24gUWkoZSx0PXt9KXtjb25zdCBuPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1DKHt9LFppKTtmb3IoY29uc3QgZSBpbiB0KW5bZV09dFtlXXx8WmlbZV07cmV0dXJue29wdGlvbnM6bixjb2x1bW46MSxsaW5lOjEsb2Zmc2V0OjAsb3JpZ2luYWxTb3VyY2U6ZSxzb3VyY2U6ZSxpblByZTohMSxpblZQcmU6ITF9fShlLHQpLG89Zmwobik7cmV0dXJuIGZ1bmN0aW9uKGUsdD1faSl7cmV0dXJue3R5cGU6MCxjaGlsZHJlbjplLGhlbHBlcnM6W10sY29tcG9uZW50czpbXSxkaXJlY3RpdmVzOltdLGhvaXN0czpbXSxpbXBvcnRzOltdLGNhY2hlZDowLHRlbXBzOjAsY29kZWdlbk5vZGU6dm9pZCAwLGxvYzp0fX0oWGkobiwwLFtdKSxkbChuLG8pKX1mdW5jdGlvbiBYaShlLHQsbil7Y29uc3Qgbz1obChuKSxyPW8/by5uczowLHM9W107Zm9yKDshYmwoZSx0LG4pOyl7Y29uc3QgaT1lLnNvdXJjZTtsZXQgbD12b2lkIDA7aWYoMD09PXR8fDE9PT10KWlmKCFlLmluVlByZSYmbWwoaSxlLm9wdGlvbnMuZGVsaW1pdGVyc1swXSkpbD1hbChlLHQpO2Vsc2UgaWYoMD09PXQmJiI8Ij09PWlbMF0paWYoMT09PWkubGVuZ3RoKTtlbHNlIGlmKCIhIj09PWlbMV0pbD1tbChpLCJceDNjIS0tIik/bmwoZSk6bWwoaSwiPCFET0NUWVBFIik/b2woZSk6bWwoaSwiPCFbQ0RBVEFbIikmJjAhPT1yP3RsKGUsbik6b2woZSk7ZWxzZSBpZigiLyI9PT1pWzFdKWlmKDI9PT1pLmxlbmd0aCk7ZWxzZXtpZigiPiI9PT1pWzJdKXtnbChlLDMpO2NvbnRpbnVlfWlmKC9bYS16XS9pLnRlc3QoaVsyXSkpe2lsKGUsMSxvKTtjb250aW51ZX1sPW9sKGUpfWVsc2UvW2Etel0vaS50ZXN0KGlbMV0pP2w9cmwoZSxuKToiPyI9PT1pWzFdJiYobD1vbChlKSk7aWYobHx8KGw9dWwoZSx0KSksTihsKSlmb3IobGV0IGU9MDtlPGwubGVuZ3RoO2UrKyllbChzLGxbZV0pO2Vsc2UgZWwocyxsKX1sZXQgaT0hMTtpZigyIT09dCl7Zm9yKGxldCB0PTA7dDxzLmxlbmd0aDt0Kyspe2NvbnN0IG49c1t0XTtpZighZS5pblByZSYmMj09PW4udHlwZSlpZigvW15cdFxyXG5cZiBdLy50ZXN0KG4uY29udGVudCkpbi5jb250ZW50PW4uY29udGVudC5yZXBsYWNlKC9bXHRcclxuXGYgXSsvZywiICIpO2Vsc2V7Y29uc3QgZT1zW3QtMV0sbz1zW3QrMV07IWV8fCFvfHwzPT09ZS50eXBlfHwzPT09by50eXBlfHwxPT09ZS50eXBlJiYxPT09by50eXBlJiYvW1xyXG5dLy50ZXN0KG4uY29udGVudCk/KGk9ITAsc1t0XT1udWxsKTpuLmNvbnRlbnQ9IiAifTMhPT1uLnR5cGV8fGUub3B0aW9ucy5jb21tZW50c3x8KGk9ITAsc1t0XT1udWxsKX1pZihlLmluUHJlJiZvJiZlLm9wdGlvbnMuaXNQcmVUYWcoby50YWcpKXtjb25zdCBlPXNbMF07ZSYmMj09PWUudHlwZSYmKGUuY29udGVudD1lLmNvbnRlbnQucmVwbGFjZSgvXlxyP1xuLywiIikpfX1yZXR1cm4gaT9zLmZpbHRlcihCb29sZWFuKTpzfWZ1bmN0aW9uIGVsKGUsdCl7aWYoMj09PXQudHlwZSl7Y29uc3Qgbj1obChlKTtpZihuJiYyPT09bi50eXBlJiZuLmxvYy5lbmQub2Zmc2V0PT09dC5sb2Muc3RhcnQub2Zmc2V0KXJldHVybiBuLmNvbnRlbnQrPXQuY29udGVudCxuLmxvYy5lbmQ9dC5sb2MuZW5kLHZvaWQobi5sb2Muc291cmNlKz10LmxvYy5zb3VyY2UpfWUucHVzaCh0KX1mdW5jdGlvbiB0bChlLHQpe2dsKGUsOSk7Y29uc3Qgbj1YaShlLDMsdCk7cmV0dXJuIDA9PT1lLnNvdXJjZS5sZW5ndGh8fGdsKGUsMyksbn1mdW5jdGlvbiBubChlKXtjb25zdCB0PWZsKGUpO2xldCBuO2NvbnN0IG89Ly0tKFwhKT8+Ly5leGVjKGUuc291cmNlKTtpZihvKXtuPWUuc291cmNlLnNsaWNlKDQsby5pbmRleCk7Y29uc3QgdD1lLnNvdXJjZS5zbGljZSgwLG8uaW5kZXgpO2xldCByPTEscz0wO2Zvcig7LTEhPT0ocz10LmluZGV4T2YoIlx4M2MhLS0iLHIpKTspZ2woZSxzLXIrMSkscj1zKzE7Z2woZSxvLmluZGV4K29bMF0ubGVuZ3RoLXIrMSl9ZWxzZSBuPWUuc291cmNlLnNsaWNlKDQpLGdsKGUsZS5zb3VyY2UubGVuZ3RoKTtyZXR1cm57dHlwZTozLGNvbnRlbnQ6bixsb2M6ZGwoZSx0KX19ZnVuY3Rpb24gb2woZSl7Y29uc3QgdD1mbChlKSxuPSI/Ij09PWUuc291cmNlWzFdPzE6MjtsZXQgbztjb25zdCByPWUuc291cmNlLmluZGV4T2YoIj4iKTtyZXR1cm4tMT09PXI/KG89ZS5zb3VyY2Uuc2xpY2UobiksZ2woZSxlLnNvdXJjZS5sZW5ndGgpKToobz1lLnNvdXJjZS5zbGljZShuLHIpLGdsKGUscisxKSkse3R5cGU6Myxjb250ZW50Om8sbG9jOmRsKGUsdCl9fWZ1bmN0aW9uIHJsKGUsdCl7Y29uc3Qgbj1lLmluUHJlLG89ZS5pblZQcmUscj1obCh0KSxzPWlsKGUsMCxyKSxpPWUuaW5QcmUmJiFuLGw9ZS5pblZQcmUmJiFvO2lmKHMuaXNTZWxmQ2xvc2luZ3x8ZS5vcHRpb25zLmlzVm9pZFRhZyhzLnRhZykpcmV0dXJuIHM7dC5wdXNoKHMpO2NvbnN0IGM9ZS5vcHRpb25zLmdldFRleHRNb2RlKHMsciksYT1YaShlLGMsdCk7aWYodC5wb3AoKSxzLmNoaWxkcmVuPWEsX2woZS5zb3VyY2Uscy50YWcpKWlsKGUsMSxyKTtlbHNlIGlmKDA9PT1lLnNvdXJjZS5sZW5ndGgmJiJzY3JpcHQiPT09cy50YWcudG9Mb3dlckNhc2UoKSl7Y29uc3QgZT1hWzBdO2UmJm1sKGUubG9jLnNvdXJjZSwiXHgzYyEtLSIpfXJldHVybiBzLmxvYz1kbChlLHMubG9jLnN0YXJ0KSxpJiYoZS5pblByZT0hMSksbCYmKGUuaW5WUHJlPSExKSxzfWNvbnN0IHNsPXQoImlmLGVsc2UsZWxzZS1pZixmb3Isc2xvdCIpO2Z1bmN0aW9uIGlsKGUsdCxuKXtjb25zdCBvPWZsKGUpLHI9L148XC8/KFthLXpdW15cdFxyXG5cZiAvPl0qKS9pLmV4ZWMoZS5zb3VyY2UpLHM9clsxXSxpPWUub3B0aW9ucy5nZXROYW1lc3BhY2UocyxuKTtnbChlLHJbMF0ubGVuZ3RoKSx2bChlKTtjb25zdCBsPWZsKGUpLGM9ZS5zb3VyY2U7bGV0IGE9bGwoZSx0KTtlLm9wdGlvbnMuaXNQcmVUYWcocykmJihlLmluUHJlPSEwKSwhZS5pblZQcmUmJmEuc29tZShlPT43PT09ZS50eXBlJiYicHJlIj09PWUubmFtZSkmJihlLmluVlByZT0hMCxDKGUsbCksZS5zb3VyY2U9YyxhPWxsKGUsdCkuZmlsdGVyKGU9PiJ2LXByZSIhPT1lLm5hbWUpKTtsZXQgdT0hMTswPT09ZS5zb3VyY2UubGVuZ3RofHwodT1tbChlLnNvdXJjZSwiLz4iKSxnbChlLHU/MjoxKSk7bGV0IHA9MDtjb25zdCBmPWUub3B0aW9ucztpZighZS5pblZQcmUmJiFmLmlzQ3VzdG9tRWxlbWVudChzKSl7Y29uc3QgZT1hLnNvbWUoZT0+Nz09PWUudHlwZSYmImlzIj09PWUubmFtZSk7Zi5pc05hdGl2ZVRhZyYmIWU/Zi5pc05hdGl2ZVRhZyhzKXx8KHA9MSk6KGV8fE1pKHMpfHxmLmlzQnVpbHRJbkNvbXBvbmVudCYmZi5pc0J1aWx0SW5Db21wb25lbnQocyl8fC9eW0EtWl0vLnRlc3Qocyl8fCJjb21wb25lbnQiPT09cykmJihwPTEpLCJzbG90Ij09PXM/cD0yOiJ0ZW1wbGF0ZSI9PT1zJiZhLnNvbWUoZT0+Nz09PWUudHlwZSYmc2woZS5uYW1lKSkmJihwPTMpfXJldHVybnt0eXBlOjEsbnM6aSx0YWc6cyx0YWdUeXBlOnAscHJvcHM6YSxpc1NlbGZDbG9zaW5nOnUsY2hpbGRyZW46W10sbG9jOmRsKGUsbyksY29kZWdlbk5vZGU6dm9pZCAwfX1mdW5jdGlvbiBsbChlLHQpe2NvbnN0IG49W10sbz1uZXcgU2V0O2Zvcig7ZS5zb3VyY2UubGVuZ3RoPjAmJiFtbChlLnNvdXJjZSwiPiIpJiYhbWwoZS5zb3VyY2UsIi8+Iik7KXtpZihtbChlLnNvdXJjZSwiLyIpKXtnbChlLDEpLHZsKGUpO2NvbnRpbnVlfWNvbnN0IHI9Y2woZSxvKTswPT09dCYmbi5wdXNoKHIpLC9eW15cdFxyXG5cZiAvPl0vLnRlc3QoZS5zb3VyY2UpLHZsKGUpfXJldHVybiBufWZ1bmN0aW9uIGNsKGUsdCl7Y29uc3Qgbj1mbChlKSxvPS9eW15cdFxyXG5cZiAvPl1bXlx0XHJcblxmIC8+PV0qLy5leGVjKGUuc291cmNlKVswXTt0LmhhcyhvKSx0LmFkZChvKTt7Y29uc3QgZT0vWyInPF0vZztsZXQgdDtmb3IoO3Q9ZS5leGVjKG8pOyk7fWdsKGUsby5sZW5ndGgpO2xldCByPXZvaWQgMDsvXltcdFxyXG5cZiBdKj0vLnRlc3QoZS5zb3VyY2UpJiYodmwoZSksZ2woZSwxKSx2bChlKSxyPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZmwoZSk7bGV0IG47Y29uc3Qgbz1lLnNvdXJjZVswXSxyPSciJz09PW98fCInIj09PW87aWYocil7Z2woZSwxKTtjb25zdCB0PWUuc291cmNlLmluZGV4T2Yobyk7LTE9PT10P249cGwoZSxlLnNvdXJjZS5sZW5ndGgsNCk6KG49cGwoZSx0LDQpLGdsKGUsMSkpfWVsc2V7Y29uc3QgdD0vXlteXHRcclxuXGYgPl0rLy5leGVjKGUuc291cmNlKTtpZighdClyZXR1cm47Y29uc3Qgbz0vWyInPD1gXS9nO2xldCByO2Zvcig7cj1vLmV4ZWModFswXSk7KTtuPXBsKGUsdFswXS5sZW5ndGgsNCl9cmV0dXJue2NvbnRlbnQ6bixpc1F1b3RlZDpyLGxvYzpkbChlLHQpfX0oZSkpO2NvbnN0IHM9ZGwoZSxuKTtpZighZS5pblZQcmUmJi9eKHYtfDp8QHwjKS8udGVzdChvKSl7Y29uc3QgdD0vKD86XnYtKFthLXowLTktXSspKT8oPzooPzo6fF5AfF4jKShcW1teXF1dK1xdfFteXC5dKykpPyguKyk/JC9pLmV4ZWMobyksaT10WzFdfHwobWwobywiOiIpPyJiaW5kIjptbChvLCJAIik/Im9uIjoic2xvdCIpO2xldCBsO2lmKHRbMl0pe2NvbnN0IHI9InNsb3QiPT09aSxzPW8uaW5kZXhPZih0WzJdKSxjPWRsKGUseWwoZSxuLHMpLHlsKGUsbixzK3RbMl0ubGVuZ3RoKyhyJiZ0WzNdfHwiIikubGVuZ3RoKSk7bGV0IGE9dFsyXSx1PSEwO2Euc3RhcnRzV2l0aCgiWyIpPyh1PSExLGEuZW5kc1dpdGgoIl0iKSxhPWEuc3Vic3RyKDEsYS5sZW5ndGgtMikpOnImJihhKz10WzNdfHwiIiksbD17dHlwZTo0LGNvbnRlbnQ6YSxpc1N0YXRpYzp1LGlzQ29uc3RhbnQ6dSxsb2M6Y319aWYociYmci5pc1F1b3RlZCl7Y29uc3QgZT1yLmxvYztlLnN0YXJ0Lm9mZnNldCsrLGUuc3RhcnQuY29sdW1uKyssZS5lbmQ9TGkoZS5zdGFydCxyLmNvbnRlbnQpLGUuc291cmNlPWUuc291cmNlLnNsaWNlKDEsLTEpfXJldHVybnt0eXBlOjcsbmFtZTppLGV4cDpyJiZ7dHlwZTo0LGNvbnRlbnQ6ci5jb250ZW50LGlzU3RhdGljOiExLGlzQ29uc3RhbnQ6ITEsbG9jOnIubG9jfSxhcmc6bCxtb2RpZmllcnM6dFszXT90WzNdLnN1YnN0cigxKS5zcGxpdCgiLiIpOltdLGxvYzpzfX1yZXR1cm57dHlwZTo2LG5hbWU6byx2YWx1ZTpyJiZ7dHlwZToyLGNvbnRlbnQ6ci5jb250ZW50LGxvYzpyLmxvY30sbG9jOnN9fWZ1bmN0aW9uIGFsKGUsdCl7Y29uc3RbbixvXT1lLm9wdGlvbnMuZGVsaW1pdGVycyxyPWUuc291cmNlLmluZGV4T2YobyxuLmxlbmd0aCk7aWYoLTE9PT1yKXJldHVybjtjb25zdCBzPWZsKGUpO2dsKGUsbi5sZW5ndGgpO2NvbnN0IGk9ZmwoZSksbD1mbChlKSxjPXItbi5sZW5ndGgsYT1lLnNvdXJjZS5zbGljZSgwLGMpLHU9cGwoZSxjLHQpLHA9dS50cmltKCksZj11LmluZGV4T2YocCk7Zj4wJiZWaShpLGEsZik7cmV0dXJuIFZpKGwsYSxjLSh1Lmxlbmd0aC1wLmxlbmd0aC1mKSksZ2woZSxvLmxlbmd0aCkse3R5cGU6NSxjb250ZW50Ont0eXBlOjQsaXNTdGF0aWM6ITEsaXNDb25zdGFudDohMSxjb250ZW50OnAsbG9jOmRsKGUsaSxsKX0sbG9jOmRsKGUscyl9fWZ1bmN0aW9uIHVsKGUsdCl7Y29uc3Qgbj1bIjwiLGUub3B0aW9ucy5kZWxpbWl0ZXJzWzBdXTszPT09dCYmbi5wdXNoKCJdXT4iKTtsZXQgbz1lLnNvdXJjZS5sZW5ndGg7Zm9yKGxldCB0PTA7dDxuLmxlbmd0aDt0Kyspe2NvbnN0IHI9ZS5zb3VyY2UuaW5kZXhPZihuW3RdLDEpOy0xIT09ciYmbz5yJiYobz1yKX1jb25zdCByPWZsKGUpO3JldHVybnt0eXBlOjIsY29udGVudDpwbChlLG8sdCksbG9jOmRsKGUscil9fWZ1bmN0aW9uIHBsKGUsdCxuKXtjb25zdCBvPWUuc291cmNlLnNsaWNlKDAsdCk7cmV0dXJuIGdsKGUsdCksMj09PW58fDM9PT1ufHwtMT09PW8uaW5kZXhPZigiJiIpP286ZS5vcHRpb25zLmRlY29kZUVudGl0aWVzKG8sND09PW4pfWZ1bmN0aW9uIGZsKGUpe2NvbnN0e2NvbHVtbjp0LGxpbmU6bixvZmZzZXQ6b309ZTtyZXR1cm57Y29sdW1uOnQsbGluZTpuLG9mZnNldDpvfX1mdW5jdGlvbiBkbChlLHQsbil7cmV0dXJue3N0YXJ0OnQsZW5kOm49bnx8ZmwoZSksc291cmNlOmUub3JpZ2luYWxTb3VyY2Uuc2xpY2UodC5vZmZzZXQsbi5vZmZzZXQpfX1mdW5jdGlvbiBobChlKXtyZXR1cm4gZVtlLmxlbmd0aC0xXX1mdW5jdGlvbiBtbChlLHQpe3JldHVybiBlLnN0YXJ0c1dpdGgodCl9ZnVuY3Rpb24gZ2woZSx0KXtjb25zdHtzb3VyY2U6bn09ZTtWaShlLG4sdCksZS5zb3VyY2U9bi5zbGljZSh0KX1mdW5jdGlvbiB2bChlKXtjb25zdCB0PS9eW1x0XHJcblxmIF0rLy5leGVjKGUuc291cmNlKTt0JiZnbChlLHRbMF0ubGVuZ3RoKX1mdW5jdGlvbiB5bChlLHQsbil7cmV0dXJuIExpKHQsZS5vcmlnaW5hbFNvdXJjZS5zbGljZSh0Lm9mZnNldCxuKSxuKX1mdW5jdGlvbiBibChlLHQsbil7Y29uc3Qgbz1lLnNvdXJjZTtzd2l0Y2godCl7Y2FzZSAwOmlmKG1sKG8sIjwvIikpZm9yKGxldCBlPW4ubGVuZ3RoLTE7ZT49MDstLWUpaWYoX2wobyxuW2VdLnRhZykpcmV0dXJuITA7YnJlYWs7Y2FzZSAxOmNhc2UgMjp7Y29uc3QgZT1obChuKTtpZihlJiZfbChvLGUudGFnKSlyZXR1cm4hMDticmVha31jYXNlIDM6aWYobWwobywiXV0+IikpcmV0dXJuITB9cmV0dXJuIW99ZnVuY3Rpb24gX2woZSx0KXtyZXR1cm4gbWwoZSwiPC8iKSYmZS5zdWJzdHIoMix0Lmxlbmd0aCkudG9Mb3dlckNhc2UoKT09PXQudG9Mb3dlckNhc2UoKSYmL1tcdFxyXG5cZiAvPl0vLnRlc3QoZVsyK3QubGVuZ3RoXXx8Ij4iKX1mdW5jdGlvbiB4bChlLHQpe0NsKGUsdCxuZXcgTWFwLFNsKGUsZS5jaGlsZHJlblswXSkpfWZ1bmN0aW9uIFNsKGUsdCl7Y29uc3R7Y2hpbGRyZW46bn09ZTtyZXR1cm4gMT09PW4ubGVuZ3RoJiYxPT09dC50eXBlJiYhV2kodCl9ZnVuY3Rpb24gQ2woZSx0LG4sbz0hMSl7bGV0IHI9ITEscz0hMTtjb25zdHtjaGlsZHJlbjppfT1lO2ZvcihsZXQgZT0wO2U8aS5sZW5ndGg7ZSsrKXtjb25zdCBsPWlbZV07aWYoMT09PWwudHlwZSYmMD09PWwudGFnVHlwZSl7bGV0IGU7aWYoIW8mJihlPWtsKGwsbikpPjApezI9PT1lJiYocz0hMCksbC5jb2RlZ2VuTm9kZS5wYXRjaEZsYWc9Ii0xIixsLmNvZGVnZW5Ob2RlPXQuaG9pc3QobC5jb2RlZ2VuTm9kZSkscj0hMDtjb250aW51ZX17Y29uc3QgZT1sLmNvZGVnZW5Ob2RlO2lmKDEzPT09ZS50eXBlKXtjb25zdCBuPU5sKGUpO2lmKCEobiYmNTEyIT09biYmMSE9PW58fHdsKGwpKSl7Y29uc3Qgbj1UbChsKTtuJiYoZS5wcm9wcz10LmhvaXN0KG4pKX19fX1lbHNlIGlmKDEyPT09bC50eXBlKXtjb25zdCBlPWtsKGwuY29udGVudCxuKTtlPjAmJigyPT09ZSYmKHM9ITApLGwuY29kZWdlbk5vZGU9dC5ob2lzdChsLmNvZGVnZW5Ob2RlKSxyPSEwKX1pZigxPT09bC50eXBlKUNsKGwsdCxuKTtlbHNlIGlmKDExPT09bC50eXBlKUNsKGwsdCxuLDE9PT1sLmNoaWxkcmVuLmxlbmd0aCk7ZWxzZSBpZig5PT09bC50eXBlKWZvcihsZXQgZT0wO2U8bC5icmFuY2hlcy5sZW5ndGg7ZSsrKUNsKGwuYnJhbmNoZXNbZV0sdCxuLDE9PT1sLmJyYW5jaGVzW2VdLmNoaWxkcmVuLmxlbmd0aCl9IXMmJnImJnQudHJhbnNmb3JtSG9pc3QmJnQudHJhbnNmb3JtSG9pc3QoaSx0LGUpfWZ1bmN0aW9uIGtsKGUsdD1uZXcgTWFwKXtzd2l0Y2goZS50eXBlKXtjYXNlIDE6aWYoMCE9PWUudGFnVHlwZSlyZXR1cm4gMDtjb25zdCBuPXQuZ2V0KGUpO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG47Y29uc3Qgbz1lLmNvZGVnZW5Ob2RlO2lmKDEzIT09by50eXBlKXJldHVybiAwO2lmKE5sKG8pfHx3bChlKSlyZXR1cm4gdC5zZXQoZSwwKSwwO3tsZXQgbj0xO2ZvcihsZXQgbz0wO288ZS5jaGlsZHJlbi5sZW5ndGg7bysrKXtjb25zdCByPWtsKGUuY2hpbGRyZW5bb10sdCk7aWYoMD09PXIpcmV0dXJuIHQuc2V0KGUsMCksMDsyPT09ciYmKG49Mil9aWYoMiE9PW4pZm9yKGxldCB0PTA7dDxlLnByb3BzLmxlbmd0aDt0Kyspe2NvbnN0IG89ZS5wcm9wc1t0XTs3PT09by50eXBlJiYiYmluZCI9PT1vLm5hbWUmJm8uZXhwJiYoOD09PW8uZXhwLnR5cGV8fG8uZXhwLmlzUnVudGltZUNvbnN0YW50KSYmKG49Mil9cmV0dXJuIG8uaXNCbG9jayYmKG8uaXNCbG9jaz0hMSksdC5zZXQoZSxuKSxufWNhc2UgMjpjYXNlIDM6cmV0dXJuIDE7Y2FzZSA5OmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gMDtjYXNlIDU6Y2FzZSAxMjpyZXR1cm4ga2woZS5jb250ZW50LHQpO2Nhc2UgNDpyZXR1cm4gZS5pc0NvbnN0YW50P2UuaXNSdW50aW1lQ29uc3RhbnQ/MjoxOjA7Y2FzZSA4OmxldCByPTE7Zm9yKGxldCBuPTA7bjxlLmNoaWxkcmVuLmxlbmd0aDtuKyspe2NvbnN0IG89ZS5jaGlsZHJlbltuXTtpZihNKG8pfHxPKG8pKWNvbnRpbnVlO2NvbnN0IHM9a2wobyx0KTtpZigwPT09cylyZXR1cm4gMDsyPT09cyYmKHI9Mil9cmV0dXJuIHI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gd2woZSl7Y29uc3QgdD1UbChlKTtpZih0JiYxNT09PXQudHlwZSl7Y29uc3R7cHJvcGVydGllczplfT10O2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXtjb25zdHtrZXk6bix2YWx1ZTpvfT1lW3RdO2lmKDQhPT1uLnR5cGV8fCFuLmlzU3RhdGljfHw0IT09by50eXBlfHwhby5pc1N0YXRpYyYmIW8uaXNDb25zdGFudClyZXR1cm4hMH19cmV0dXJuITF9ZnVuY3Rpb24gVGwoZSl7Y29uc3QgdD1lLmNvZGVnZW5Ob2RlO2lmKDEzPT09dC50eXBlKXJldHVybiB0LnByb3BzfWZ1bmN0aW9uIE5sKGUpe2NvbnN0IHQ9ZS5wYXRjaEZsYWc7cmV0dXJuIHQ/cGFyc2VJbnQodCwxMCk6dm9pZCAwfWZ1bmN0aW9uIEVsKGUse3ByZWZpeElkZW50aWZpZXJzOnQ9ITEsaG9pc3RTdGF0aWM6bj0hMSxjYWNoZUhhbmRsZXJzOm89ITEsbm9kZVRyYW5zZm9ybXM6cj1bXSxkaXJlY3RpdmVUcmFuc2Zvcm1zOnM9e30sdHJhbnNmb3JtSG9pc3Q6aT1udWxsLGlzQnVpbHRJbkNvbXBvbmVudDpsPXksaXNDdXN0b21FbGVtZW50OmM9eSxleHByZXNzaW9uUGx1Z2luczphPVtdLHNjb3BlSWQ6dT1udWxsLHNzcjpwPSExLHNzckNzc1ZhcnM6Zj0iIixiaW5kaW5nTWV0YWRhdGE6ZD17fSxvbkVycm9yOmg9RHN9KXtjb25zdCBtPXtwcmVmaXhJZGVudGlmaWVyczp0LGhvaXN0U3RhdGljOm4sY2FjaGVIYW5kbGVyczpvLG5vZGVUcmFuc2Zvcm1zOnIsZGlyZWN0aXZlVHJhbnNmb3JtczpzLHRyYW5zZm9ybUhvaXN0OmksaXNCdWlsdEluQ29tcG9uZW50OmwsaXNDdXN0b21FbGVtZW50OmMsZXhwcmVzc2lvblBsdWdpbnM6YSxzY29wZUlkOnUsc3NyOnAsc3NyQ3NzVmFyczpmLGJpbmRpbmdNZXRhZGF0YTpkLG9uRXJyb3I6aCxyb290OmUsaGVscGVyczpuZXcgU2V0LGNvbXBvbmVudHM6bmV3IFNldCxkaXJlY3RpdmVzOm5ldyBTZXQsaG9pc3RzOltdLGltcG9ydHM6bmV3IFNldCx0ZW1wczowLGNhY2hlZDowLGlkZW50aWZpZXJzOk9iamVjdC5jcmVhdGUobnVsbCksc2NvcGVzOnt2Rm9yOjAsdlNsb3Q6MCx2UHJlOjAsdk9uY2U6MH0scGFyZW50Om51bGwsY3VycmVudE5vZGU6ZSxjaGlsZEluZGV4OjAsaGVscGVyOmU9PihtLmhlbHBlcnMuYWRkKGUpLGUpLGhlbHBlclN0cmluZzplPT4iXyIrYmlbbS5oZWxwZXIoZSldLHJlcGxhY2VOb2RlKGUpe20ucGFyZW50LmNoaWxkcmVuW20uY2hpbGRJbmRleF09bS5jdXJyZW50Tm9kZT1lfSxyZW1vdmVOb2RlKGUpe2NvbnN0IHQ9ZT9tLnBhcmVudC5jaGlsZHJlbi5pbmRleE9mKGUpOm0uY3VycmVudE5vZGU/bS5jaGlsZEluZGV4Oi0xO2UmJmUhPT1tLmN1cnJlbnROb2RlP20uY2hpbGRJbmRleD50JiYobS5jaGlsZEluZGV4LS0sbS5vbk5vZGVSZW1vdmVkKCkpOihtLmN1cnJlbnROb2RlPW51bGwsbS5vbk5vZGVSZW1vdmVkKCkpLG0ucGFyZW50LmNoaWxkcmVuLnNwbGljZSh0LDEpfSxvbk5vZGVSZW1vdmVkOigpPT57fSxhZGRJZGVudGlmaWVycyhlKXt9LHJlbW92ZUlkZW50aWZpZXJzKGUpe30saG9pc3QoZSl7bS5ob2lzdHMucHVzaChlKTtjb25zdCB0PXdpKCJfaG9pc3RlZF8iK20uaG9pc3RzLmxlbmd0aCwhMSxlLmxvYywhMCk7cmV0dXJuIHQuaG9pc3RlZD1lLHR9LGNhY2hlOihlLHQ9ITEpPT5mdW5jdGlvbihlLHQsbj0hMSl7cmV0dXJue3R5cGU6MjAsaW5kZXg6ZSx2YWx1ZTp0LGlzVk5vZGU6bixsb2M6X2l9fSgrK20uY2FjaGVkLGUsdCl9O3JldHVybiBtfWZ1bmN0aW9uIEZsKGUsdCl7Y29uc3Qgbz1FbChlLHQpOyRsKGUsbyksdC5ob2lzdFN0YXRpYyYmeGwoZSxvKSx0LnNzcnx8ZnVuY3Rpb24oZSx0KXtjb25zdHtoZWxwZXI6b309dCx7Y2hpbGRyZW46cn09ZTtpZigxPT09ci5sZW5ndGgpe2NvbnN0IHQ9clswXTtpZihTbChlLHQpJiZ0LmNvZGVnZW5Ob2RlKXtjb25zdCBuPXQuY29kZWdlbk5vZGU7MTM9PT1uLnR5cGUmJihuLmlzQmxvY2s9ITAsbyhKcyksbyhZcykpLGUuY29kZWdlbk5vZGU9bn1lbHNlIGUuY29kZWdlbk5vZGU9dH1lbHNlIHIubGVuZ3RoPjEmJihlLmNvZGVnZW5Ob2RlPXhpKHQsbyh6cyksdm9pZCAwLGUuY2hpbGRyZW4sYDY0IC8qICR7bls2NF19ICovYCx2b2lkIDAsdm9pZCAwLCEwKSl9KGUsbyksZS5oZWxwZXJzPVsuLi5vLmhlbHBlcnNdLGUuY29tcG9uZW50cz1bLi4uby5jb21wb25lbnRzXSxlLmRpcmVjdGl2ZXM9Wy4uLm8uZGlyZWN0aXZlc10sZS5pbXBvcnRzPVsuLi5vLmltcG9ydHNdLGUuaG9pc3RzPW8uaG9pc3RzLGUudGVtcHM9by50ZW1wcyxlLmNhY2hlZD1vLmNhY2hlZH1mdW5jdGlvbiAkbChlLHQpe3QuY3VycmVudE5vZGU9ZTtjb25zdHtub2RlVHJhbnNmb3JtczpufT10LG89W107Zm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKyspe2NvbnN0IHM9bltyXShlLHQpO2lmKHMmJihOKHMpP28ucHVzaCguLi5zKTpvLnB1c2gocykpLCF0LmN1cnJlbnROb2RlKXJldHVybjtlPXQuY3VycmVudE5vZGV9c3dpdGNoKGUudHlwZSl7Y2FzZSAzOnQuc3NyfHx0LmhlbHBlcihRcyk7YnJlYWs7Y2FzZSA1OnQuc3NyfHx0LmhlbHBlcihjaSk7YnJlYWs7Y2FzZSA5OmZvcihsZXQgbj0wO248ZS5icmFuY2hlcy5sZW5ndGg7bisrKSRsKGUuYnJhbmNoZXNbbl0sdCk7YnJlYWs7Y2FzZSAxMDpjYXNlIDExOmNhc2UgMTpjYXNlIDA6IWZ1bmN0aW9uKGUsdCl7bGV0IG49MDtjb25zdCBvPSgpPT57bi0tfTtmb3IoO248ZS5jaGlsZHJlbi5sZW5ndGg7bisrKXtjb25zdCByPWUuY2hpbGRyZW5bbl07TShyKXx8KHQucGFyZW50PWUsdC5jaGlsZEluZGV4PW4sdC5vbk5vZGVSZW1vdmVkPW8sJGwocix0KSl9fShlLHQpfXQuY3VycmVudE5vZGU9ZTtsZXQgcj1vLmxlbmd0aDtmb3IoO3ItLTspb1tyXSgpfWZ1bmN0aW9uIEFsKGUsdCl7Y29uc3Qgbj1NKGUpP3Q9PnQ9PT1lOnQ9PmUudGVzdCh0KTtyZXR1cm4oZSxvKT0+e2lmKDE9PT1lLnR5cGUpe2NvbnN0e3Byb3BzOnJ9PWU7aWYoMz09PWUudGFnVHlwZSYmci5zb21lKHppKSlyZXR1cm47Y29uc3Qgcz1bXTtmb3IobGV0IGk9MDtpPHIubGVuZ3RoO2krKyl7Y29uc3QgbD1yW2ldO2lmKDc9PT1sLnR5cGUmJm4obC5uYW1lKSl7ci5zcGxpY2UoaSwxKSxpLS07Y29uc3Qgbj10KGUsbCxvKTtuJiZzLnB1c2gobil9fXJldHVybiBzfX19Y29uc3QgTWw9Ii8qI19fUFVSRV9fKi8iO2Z1bmN0aW9uIE9sKGUsdD17fSl7Y29uc3Qgbj1mdW5jdGlvbihlLHttb2RlOnQ9ImZ1bmN0aW9uIixwcmVmaXhJZGVudGlmaWVyczpuPSJtb2R1bGUiPT09dCxzb3VyY2VNYXA6bz0hMSxmaWxlbmFtZTpyPSJ0ZW1wbGF0ZS52dWUuaHRtbCIsc2NvcGVJZDpzPW51bGwsb3B0aW1pemVJbXBvcnRzOmk9ITEscnVudGltZUdsb2JhbE5hbWU6bD0iVnVlIixydW50aW1lTW9kdWxlTmFtZTpjPSJ2dWUiLHNzcjphPSExfSl7Y29uc3QgdT17bW9kZTp0LHByZWZpeElkZW50aWZpZXJzOm4sc291cmNlTWFwOm8sZmlsZW5hbWU6cixzY29wZUlkOnMsb3B0aW1pemVJbXBvcnRzOmkscnVudGltZUdsb2JhbE5hbWU6bCxydW50aW1lTW9kdWxlTmFtZTpjLHNzcjphLHNvdXJjZTplLmxvYy5zb3VyY2UsY29kZToiIixjb2x1bW46MSxsaW5lOjEsb2Zmc2V0OjAsaW5kZW50TGV2ZWw6MCxwdXJlOiExLG1hcDp2b2lkIDAsaGVscGVyOmU9PiJfIitiaVtlXSxwdXNoKGUsdCl7dS5jb2RlKz1lfSxpbmRlbnQoKXtwKCsrdS5pbmRlbnRMZXZlbCl9LGRlaW5kZW50KGU9ITEpe2U/LS11LmluZGVudExldmVsOnAoLS11LmluZGVudExldmVsKX0sbmV3bGluZSgpe3AodS5pbmRlbnRMZXZlbCl9fTtmdW5jdGlvbiBwKGUpe3UucHVzaCgiXG4iKyIgICIucmVwZWF0KGUpKX1yZXR1cm4gdX0oZSx0KTt0Lm9uQ29udGV4dENyZWF0ZWQmJnQub25Db250ZXh0Q3JlYXRlZChuKTtjb25zdHttb2RlOm8scHVzaDpyLHByZWZpeElkZW50aWZpZXJzOnMsaW5kZW50OmksZGVpbmRlbnQ6bCxuZXdsaW5lOmMsc3NyOmF9PW4sdT1lLmhlbHBlcnMubGVuZ3RoPjAscD0hcyYmIm1vZHVsZSIhPT1vOyFmdW5jdGlvbihlLHQpe2NvbnN0e3B1c2g6bixuZXdsaW5lOm8scnVudGltZUdsb2JhbE5hbWU6cn09dCxzPXIsaT1lPT5gJHtiaVtlXX06IF8ke2JpW2VdfWA7aWYoZS5oZWxwZXJzLmxlbmd0aD4wJiYobihgY29uc3QgX1Z1ZSA9ICR7c31cbmApLGUuaG9pc3RzLmxlbmd0aCkpe24oYGNvbnN0IHsgJHtbWnMsUXMsWHMsZWldLmZpbHRlcih0PT5lLmhlbHBlcnMuaW5jbHVkZXModCkpLm1hcChpKS5qb2luKCIsICIpfSB9ID0gX1Z1ZVxuYCl9KGZ1bmN0aW9uKGUsdCl7aWYoIWUubGVuZ3RoKXJldHVybjt0LnB1cmU9ITA7Y29uc3R7cHVzaDpuLG5ld2xpbmU6b309dDtvKCksZS5mb3JFYWNoKChlLHIpPT57ZSYmKG4oYGNvbnN0IF9ob2lzdGVkXyR7cisxfSA9IGApLElsKGUsdCksbygpKX0pLHQucHVyZT0hMX0pKGUuaG9pc3RzLHQpLG8oKSxuKCJyZXR1cm4gIil9KGUsbik7Y29uc3QgZj10LmJpbmRpbmdNZXRhZGF0YT8iLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zIjoiIjtpZihyKGE/YGZ1bmN0aW9uIHNzclJlbmRlcihfY3R4LCBfcHVzaCwgX3BhcmVudCwgX2F0dHJzJHtmfSkge2A6YGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUke2Z9KSB7YCksaSgpLHAmJihyKCJ3aXRoIChfY3R4KSB7IiksaSgpLHUmJihyKGBjb25zdCB7ICR7ZS5oZWxwZXJzLm1hcChlPT5gJHtiaVtlXX06IF8ke2JpW2VdfWApLmpvaW4oIiwgIil9IH0gPSBfVnVlYCkscigiXG4iKSxjKCkpKSxlLmNvbXBvbmVudHMubGVuZ3RoJiYoUmwoZS5jb21wb25lbnRzLCJjb21wb25lbnQiLG4pLChlLmRpcmVjdGl2ZXMubGVuZ3RofHxlLnRlbXBzPjApJiZjKCkpLGUuZGlyZWN0aXZlcy5sZW5ndGgmJihSbChlLmRpcmVjdGl2ZXMsImRpcmVjdGl2ZSIsbiksZS50ZW1wcz4wJiZjKCkpLGUudGVtcHM+MCl7cigibGV0ICIpO2ZvcihsZXQgdD0wO3Q8ZS50ZW1wczt0KyspcihgJHt0PjA/IiwgIjoiIn1fdGVtcCR7dH1gKX1yZXR1cm4oZS5jb21wb25lbnRzLmxlbmd0aHx8ZS5kaXJlY3RpdmVzLmxlbmd0aHx8ZS50ZW1wcykmJihyKCJcbiIpLGMoKSksYXx8cigicmV0dXJuICIpLGUuY29kZWdlbk5vZGU/SWwoZS5jb2RlZ2VuTm9kZSxuKTpyKCJudWxsIikscCYmKGwoKSxyKCJ9IikpLGwoKSxyKCJ9Iikse2FzdDplLGNvZGU6bi5jb2RlLG1hcDpuLm1hcD9uLm1hcC50b0pTT04oKTp2b2lkIDB9fWZ1bmN0aW9uIFJsKGUsdCx7aGVscGVyOm4scHVzaDpvLG5ld2xpbmU6cn0pe2NvbnN0IHM9bigiY29tcG9uZW50Ij09PXQ/dGk6b2kpO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtjb25zdCBpPWVbbl07byhgY29uc3QgJHtxaShpLHQpfSA9ICR7c30oJHtKU09OLnN0cmluZ2lmeShpKX0pYCksbjxlLmxlbmd0aC0xJiZyKCl9fWZ1bmN0aW9uIEJsKGUsdCl7Y29uc3Qgbj1lLmxlbmd0aD4zfHwhMTt0LnB1c2goIlsiKSxuJiZ0LmluZGVudCgpLFBsKGUsdCxuKSxuJiZ0LmRlaW5kZW50KCksdC5wdXNoKCJdIil9ZnVuY3Rpb24gUGwoZSx0LG49ITEsbz0hMCl7Y29uc3R7cHVzaDpyLG5ld2xpbmU6c309dDtmb3IobGV0IGk9MDtpPGUubGVuZ3RoO2krKyl7Y29uc3QgbD1lW2ldO00obCk/cihsKTpOKGwpP0JsKGwsdCk6SWwobCx0KSxpPGUubGVuZ3RoLTEmJihuPyhvJiZyKCIsIikscygpKTpvJiZyKCIsICIpKX19ZnVuY3Rpb24gSWwoZSx0KXtpZihNKGUpKXQucHVzaChlKTtlbHNlIGlmKE8oZSkpdC5wdXNoKHQuaGVscGVyKGUpKTtlbHNlIHN3aXRjaChlLnR5cGUpe2Nhc2UgMTpjYXNlIDk6Y2FzZSAxMTpJbChlLmNvZGVnZW5Ob2RlLHQpO2JyZWFrO2Nhc2UgMjohZnVuY3Rpb24oZSx0KXt0LnB1c2goSlNPTi5zdHJpbmdpZnkoZS5jb250ZW50KSxlKX0oZSx0KTticmVhaztjYXNlIDQ6TGwoZSx0KTticmVhaztjYXNlIDU6IWZ1bmN0aW9uKGUsdCl7Y29uc3R7cHVzaDpuLGhlbHBlcjpvLHB1cmU6cn09dDtyJiZuKE1sKTtuKG8oY2kpKyIoIiksSWwoZS5jb250ZW50LHQpLG4oIikiKX0oZSx0KTticmVhaztjYXNlIDEyOklsKGUuY29kZWdlbk5vZGUsdCk7YnJlYWs7Y2FzZSA4OlZsKGUsdCk7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTM6IWZ1bmN0aW9uKGUsdCl7Y29uc3R7cHVzaDpuLGhlbHBlcjpvLHB1cmU6cn09dCx7dGFnOnMscHJvcHM6aSxjaGlsZHJlbjpsLHBhdGNoRmxhZzpjLGR5bmFtaWNQcm9wczphLGRpcmVjdGl2ZXM6dSxpc0Jsb2NrOnAsZGlzYWJsZVRyYWNraW5nOmZ9PWU7dSYmbihvKHJpKSsiKCIpO3AmJm4oYCgke28oSnMpfSgke2Y/InRydWUiOiIifSksIGApO3ImJm4oTWwpO24obyhwP1lzOlpzKSsiKCIsZSksUGwoZnVuY3Rpb24oZSl7bGV0IHQ9ZS5sZW5ndGg7Zm9yKDt0LS0mJm51bGw9PWVbdF07KTtyZXR1cm4gZS5zbGljZSgwLHQrMSkubWFwKGU9PmV8fCJudWxsIil9KFtzLGksbCxjLGFdKSx0KSxuKCIpIikscCYmbigiKSIpO3UmJihuKCIsICIpLElsKHUsdCksbigiKSIpKX0oZSx0KTticmVhaztjYXNlIDE0OiFmdW5jdGlvbihlLHQpe2NvbnN0e3B1c2g6bixoZWxwZXI6byxwdXJlOnJ9PXQscz1NKGUuY2FsbGVlKT9lLmNhbGxlZTpvKGUuY2FsbGVlKTtyJiZuKE1sKTtuKHMrIigiLGUpLFBsKGUuYXJndW1lbnRzLHQpLG4oIikiKX0oZSx0KTticmVhaztjYXNlIDE1OiFmdW5jdGlvbihlLHQpe2NvbnN0e3B1c2g6bixpbmRlbnQ6byxkZWluZGVudDpyLG5ld2xpbmU6c309dCx7cHJvcGVydGllczppfT1lO2lmKCFpLmxlbmd0aClyZXR1cm4gdm9pZCBuKCJ7fSIsZSk7Y29uc3QgbD1pLmxlbmd0aD4xfHwhMTtuKGw/InsiOiJ7ICIpLGwmJm8oKTtmb3IobGV0IGU9MDtlPGkubGVuZ3RoO2UrKyl7Y29uc3R7a2V5Om8sdmFsdWU6cn09aVtlXTtVbChvLHQpLG4oIjogIiksSWwocix0KSxlPGkubGVuZ3RoLTEmJihuKCIsIikscygpKX1sJiZyKCksbihsPyJ9IjoiIH0iKX0oZSx0KTticmVhaztjYXNlIDE3OiFmdW5jdGlvbihlLHQpe0JsKGUuZWxlbWVudHMsdCl9KGUsdCk7YnJlYWs7Y2FzZSAxODohZnVuY3Rpb24oZSx0KXtjb25zdHtwdXNoOm4saW5kZW50Om8sZGVpbmRlbnQ6cn09dCx7cGFyYW1zOnMscmV0dXJuczppLGJvZHk6bCxuZXdsaW5lOmMsaXNTbG90OmF9PWU7YSYmbihgXyR7YmlbeWldfShgKTtuKCIoIixlKSxOKHMpP1BsKHMsdCk6cyYmSWwocyx0KTtuKCIpID0+ICIpLChjfHxsKSYmKG4oInsiKSxvKCkpO2k/KGMmJm4oInJldHVybiAiKSxOKGkpP0JsKGksdCk6SWwoaSx0KSk6bCYmSWwobCx0KTsoY3x8bCkmJihyKCksbigifSIpKTthJiZuKCIpIil9KGUsdCk7YnJlYWs7Y2FzZSAxOTohZnVuY3Rpb24oZSx0KXtjb25zdHt0ZXN0Om4sY29uc2VxdWVudDpvLGFsdGVybmF0ZTpyLG5ld2xpbmU6c309ZSx7cHVzaDppLGluZGVudDpsLGRlaW5kZW50OmMsbmV3bGluZTphfT10O2lmKDQ9PT1uLnR5cGUpe2NvbnN0IGU9IVJpKG4uY29udGVudCk7ZSYmaSgiKCIpLExsKG4sdCksZSYmaSgiKSIpfWVsc2UgaSgiKCIpLElsKG4sdCksaSgiKSIpO3MmJmwoKSx0LmluZGVudExldmVsKyssc3x8aSgiICIpLGkoIj8gIiksSWwobyx0KSx0LmluZGVudExldmVsLS0scyYmYSgpLHN8fGkoIiAiKSxpKCI6ICIpO2NvbnN0IHU9MTk9PT1yLnR5cGU7dXx8dC5pbmRlbnRMZXZlbCsrO0lsKHIsdCksdXx8dC5pbmRlbnRMZXZlbC0tO3MmJmMoITApfShlLHQpO2JyZWFrO2Nhc2UgMjA6IWZ1bmN0aW9uKGUsdCl7Y29uc3R7cHVzaDpuLGhlbHBlcjpvLGluZGVudDpyLGRlaW5kZW50OnMsbmV3bGluZTppfT10O24oYF9jYWNoZVske2UuaW5kZXh9XSB8fCAoYCksZS5pc1ZOb2RlJiYocigpLG4obyhoaSkrIigtMSksIiksaSgpKTtuKGBfY2FjaGVbJHtlLmluZGV4fV0gPSBgKSxJbChlLnZhbHVlLHQpLGUuaXNWTm9kZSYmKG4oIiwiKSxpKCksbihvKGhpKSsiKDEpLCIpLGkoKSxuKGBfY2FjaGVbJHtlLmluZGV4fV1gKSxzKCkpO24oIikiKX0oZSx0KX19ZnVuY3Rpb24gTGwoZSx0KXtjb25zdHtjb250ZW50Om4saXNTdGF0aWM6b309ZTt0LnB1c2gobz9KU09OLnN0cmluZ2lmeShuKTpuLGUpfWZ1bmN0aW9uIFZsKGUsdCl7Zm9yKGxldCBuPTA7bjxlLmNoaWxkcmVuLmxlbmd0aDtuKyspe2NvbnN0IG89ZS5jaGlsZHJlbltuXTtNKG8pP3QucHVzaChvKTpJbChvLHQpfX1mdW5jdGlvbiBVbChlLHQpe2NvbnN0e3B1c2g6bn09dDtpZig4PT09ZS50eXBlKW4oIlsiKSxWbChlLHQpLG4oIl0iKTtlbHNlIGlmKGUuaXNTdGF0aWMpe24oUmkoZS5jb250ZW50KT9lLmNvbnRlbnQ6SlNPTi5zdHJpbmdpZnkoZS5jb250ZW50KSxlKX1lbHNlIG4oYFske2UuY29udGVudH1dYCxlKX1jb25zdCBqbD1BbCgvXihpZnxlbHNlfGVsc2UtaWYpJC8sKGUsdCxuKT0+ZnVuY3Rpb24oZSx0LG4sbyl7aWYoISgiZWxzZSI9PT10Lm5hbWV8fHQuZXhwJiZ0LmV4cC5jb250ZW50LnRyaW0oKSkpe3QuZXhwPXdpKCJ0cnVlIiwhMSx0LmV4cD90LmV4cC5sb2M6ZS5sb2MpfWlmKCJpZiI9PT10Lm5hbWUpe2NvbnN0IHI9RGwoZSx0KSxzPXt0eXBlOjksbG9jOmUubG9jLGJyYW5jaGVzOltyXX07aWYobi5yZXBsYWNlTm9kZShzKSxvKXJldHVybiBvKHMsciwhMCl9ZWxzZXtjb25zdCByPW4ucGFyZW50LmNoaWxkcmVuO2xldCBzPXIuaW5kZXhPZihlKTtmb3IoO3MtLSA+PS0xOyl7Y29uc3QgaT1yW3NdO2lmKCFpfHwyIT09aS50eXBlfHxpLmNvbnRlbnQudHJpbSgpLmxlbmd0aCl7aWYoaSYmOT09PWkudHlwZSl7bi5yZW1vdmVOb2RlKCk7Y29uc3Qgcj1EbChlLHQpO2kuYnJhbmNoZXMucHVzaChyKTtjb25zdCBzPW8mJm8oaSxyLCExKTskbChyLG4pLHMmJnMoKSxuLmN1cnJlbnROb2RlPW51bGx9YnJlYWt9bi5yZW1vdmVOb2RlKGkpfX19KGUsdCxuLChlLHQsbyk9Pntjb25zdCByPW4ucGFyZW50LmNoaWxkcmVuO2xldCBzPXIuaW5kZXhPZihlKSxpPTA7Zm9yKDtzLS0gPj0wOyl7Y29uc3QgZT1yW3NdO2UmJjk9PT1lLnR5cGUmJihpKz1lLmJyYW5jaGVzLmxlbmd0aCl9cmV0dXJuKCk9PntpZihvKWUuY29kZWdlbk5vZGU9SGwodCxpLG4pO2Vsc2V7KGZ1bmN0aW9uKGUpe2Zvcig7OylpZigxOT09PWUudHlwZSl7aWYoMTkhPT1lLmFsdGVybmF0ZS50eXBlKXJldHVybiBlO2U9ZS5hbHRlcm5hdGV9ZWxzZSAyMD09PWUudHlwZSYmKGU9ZS52YWx1ZSl9KGUuY29kZWdlbk5vZGUpKS5hbHRlcm5hdGU9SGwodCxpK2UuYnJhbmNoZXMubGVuZ3RoLTEsbil9fX0pKTtmdW5jdGlvbiBEbChlLHQpe3JldHVybnt0eXBlOjEwLGxvYzplLmxvYyxjb25kaXRpb246ImVsc2UiPT09dC5uYW1lP3ZvaWQgMDp0LmV4cCxjaGlsZHJlbjozIT09ZS50YWdUeXBlfHxVaShlLCJmb3IiKT9bZV06ZS5jaGlsZHJlbix1c2VyS2V5OmppKGUsImtleSIpfX1mdW5jdGlvbiBIbChlLHQsbil7cmV0dXJuIGUuY29uZGl0aW9uP0ZpKGUuY29uZGl0aW9uLHpsKGUsdCxuKSxOaShuLmhlbHBlcihRcyksWyciIicsInRydWUiXSkpOnpsKGUsdCxuKX1mdW5jdGlvbiB6bChlLHQsbyl7Y29uc3R7aGVscGVyOnJ9PW8scz1raSgia2V5Iix3aSgiIit0LCExLF9pLCEwKSkse2NoaWxkcmVuOml9PWUsbD1pWzBdO2lmKDEhPT1pLmxlbmd0aHx8MSE9PWwudHlwZSl7aWYoMT09PWkubGVuZ3RoJiYxMT09PWwudHlwZSl7Y29uc3QgZT1sLmNvZGVnZW5Ob2RlO3JldHVybiBHaShlLHMsbyksZX1yZXR1cm4geGkobyxyKHpzKSxDaShbc10pLGksYDY0IC8qICR7bls2NF19ICovYCx2b2lkIDAsdm9pZCAwLCEwLCExLGUubG9jKX17Y29uc3QgZT1sLmNvZGVnZW5Ob2RlO3JldHVybiAxMz09PWUudHlwZSYmKGUuaXNCbG9jaz0hMCxyKEpzKSxyKFlzKSksR2koZSxzLG8pLGV9fWNvbnN0IEtsPUFsKCJmb3IiLChlLHQsbyk9Pntjb25zdHtoZWxwZXI6cn09bztyZXR1cm4gZnVuY3Rpb24oZSx0LG4sbyl7aWYoIXQuZXhwKXJldHVybjtjb25zdCByPUpsKHQuZXhwKTtpZighcilyZXR1cm47Y29uc3R7c2NvcGVzOnN9PW4se3NvdXJjZTppLHZhbHVlOmwsa2V5OmMsaW5kZXg6YX09cix1PXt0eXBlOjExLGxvYzp0LmxvYyxzb3VyY2U6aSx2YWx1ZUFsaWFzOmwsa2V5QWxpYXM6YyxvYmplY3RJbmRleEFsaWFzOmEscGFyc2VSZXN1bHQ6cixjaGlsZHJlbjpLaShlKT9lLmNoaWxkcmVuOltlXX07bi5yZXBsYWNlTm9kZSh1KSxzLnZGb3IrKztjb25zdCBwPW8mJm8odSk7cmV0dXJuKCk9PntzLnZGb3ItLSxwJiZwKCl9fShlLHQsbyx0PT57Y29uc3Qgcz1OaShyKHNpKSxbdC5zb3VyY2VdKSxpPWppKGUsImtleSIpLGw9aT9raSgia2V5Iiw2PT09aS50eXBlP3dpKGkudmFsdWUuY29udGVudCwhMCk6aS5leHApOm51bGwsYz00PT09dC5zb3VyY2UudHlwZSYmdC5zb3VyY2UuaXNDb25zdGFudCxhPWM/NjQ6aT8xMjg6MjU2O3JldHVybiB0LmNvZGVnZW5Ob2RlPXhpKG8scih6cyksdm9pZCAwLHMsYCR7YX0gLyogJHtuW2FdfSAqL2Asdm9pZCAwLHZvaWQgMCwhMCwhYyxlLmxvYyksKCk9PntsZXQgaTtjb25zdCBhPUtpKGUpLHtjaGlsZHJlbjp1fT10LHA9MSE9PXUubGVuZ3RofHwxIT09dVswXS50eXBlLGY9V2koZSk/ZTphJiYxPT09ZS5jaGlsZHJlbi5sZW5ndGgmJldpKGUuY2hpbGRyZW5bMF0pP2UuY2hpbGRyZW5bMF06bnVsbDtmPyhpPWYuY29kZWdlbk5vZGUsYSYmbCYmR2koaSxsLG8pKTpwP2k9eGkobyxyKHpzKSxsP0NpKFtsXSk6dm9pZCAwLGUuY2hpbGRyZW4sYDY0IC8qICR7bls2NF19ICovYCx2b2lkIDAsdm9pZCAwLCEwKTooaT11WzBdLmNvZGVnZW5Ob2RlLGEmJmwmJkdpKGksbCxvKSxpLmlzQmxvY2s9IWMsaS5pc0Jsb2NrJiYocihKcykscihZcykpKSxzLmFyZ3VtZW50cy5wdXNoKEVpKFpsKHQucGFyc2VSZXN1bHQpLGksITApKX19KX0pO2NvbnN0IFdsPS8oW1xzXFNdKj8pXHMrKD86aW58b2YpXHMrKFtcc1xTXSopLyxHbD0vLChbXixcfVxdXSopKD86LChbXixcfVxdXSopKT8kLyxxbD0vXlwofFwpJC9nO2Z1bmN0aW9uIEpsKGUsdCl7Y29uc3Qgbj1lLmxvYyxvPWUuY29udGVudCxyPW8ubWF0Y2goV2wpO2lmKCFyKXJldHVybjtjb25zdFsscyxpXT1yLGw9e3NvdXJjZTpZbChuLGkudHJpbSgpLG8uaW5kZXhPZihpLHMubGVuZ3RoKSksdmFsdWU6dm9pZCAwLGtleTp2b2lkIDAsaW5kZXg6dm9pZCAwfTtsZXQgYz1zLnRyaW0oKS5yZXBsYWNlKHFsLCIiKS50cmltKCk7Y29uc3QgYT1zLmluZGV4T2YoYyksdT1jLm1hdGNoKEdsKTtpZih1KXtjPWMucmVwbGFjZShHbCwiIikudHJpbSgpO2NvbnN0IGU9dVsxXS50cmltKCk7bGV0IHQ7aWYoZSYmKHQ9by5pbmRleE9mKGUsYStjLmxlbmd0aCksbC5rZXk9WWwobixlLHQpKSx1WzJdKXtjb25zdCByPXVbMl0udHJpbSgpO3ImJihsLmluZGV4PVlsKG4scixvLmluZGV4T2YocixsLmtleT90K2UubGVuZ3RoOmErYy5sZW5ndGgpKSl9fXJldHVybiBjJiYobC52YWx1ZT1ZbChuLGMsYSkpLGx9ZnVuY3Rpb24gWWwoZSx0LG4pe3JldHVybiB3aSh0LCExLElpKGUsbix0Lmxlbmd0aCkpfWZ1bmN0aW9uIFpsKHt2YWx1ZTplLGtleTp0LGluZGV4Om59KXtjb25zdCBvPVtdO3JldHVybiBlJiZvLnB1c2goZSksdCYmKGV8fG8ucHVzaCh3aSgiXyIsITEpKSxvLnB1c2godCkpLG4mJih0fHwoZXx8by5wdXNoKHdpKCJfIiwhMSkpLG8ucHVzaCh3aSgiX18iLCExKSkpLG8ucHVzaChuKSksb31jb25zdCBRbD13aSgidW5kZWZpbmVkIiwhMSksWGw9KGUsdCk9PntpZigxPT09ZS50eXBlJiYoMT09PWUudGFnVHlwZXx8Mz09PWUudGFnVHlwZSkpe2NvbnN0IG49VWkoZSwic2xvdCIpO2lmKG4pe3JldHVybiB0LnNjb3Blcy52U2xvdCsrLCgpPT57dC5zY29wZXMudlNsb3QtLX19fX0sZWM9KGUsdCxuKT0+RWkoZSx0LCExLCEwLHQubGVuZ3RoP3RbMF0ubG9jOm4pO2Z1bmN0aW9uIHRjKGUsdCxuPWVjKXt0LmhlbHBlcih5aSk7Y29uc3R7Y2hpbGRyZW46byxsb2M6cn09ZSxzPVtdLGk9W10sbD0oZSx0KT0+a2koImRlZmF1bHQiLG4oZSx0LHIpKTtsZXQgYz10LnNjb3Blcy52U2xvdD4wfHx0LnNjb3Blcy52Rm9yPjA7Y29uc3QgYT1VaShlLCJzbG90IiwhMCk7aWYoYSl7Y29uc3R7YXJnOmUsZXhwOnR9PWE7ZSYmISRpKGUpJiYoYz0hMCkscy5wdXNoKGtpKGV8fHdpKCJkZWZhdWx0IiwhMCksbih0LG8scikpKX1sZXQgdT0hMSxwPSExO2NvbnN0IGY9W10sZD1uZXcgU2V0O2ZvcihsZXQgZT0wO2U8by5sZW5ndGg7ZSsrKXtjb25zdCByPW9bZV07bGV0IGw7aWYoIUtpKHIpfHwhKGw9VWkociwic2xvdCIsITApKSl7MyE9PXIudHlwZSYmZi5wdXNoKHIpO2NvbnRpbnVlfWlmKGEpYnJlYWs7dT0hMDtjb25zdHtjaGlsZHJlbjpoLGxvYzptfT1yLHthcmc6Zz13aSgiZGVmYXVsdCIsITApLGV4cDp2fT1sO2xldCB5OyRpKGcpP3k9Zz9nLmNvbnRlbnQ6ImRlZmF1bHQiOmM9ITA7Y29uc3QgYj1uKHYsaCxtKTtsZXQgXyx4LFM7aWYoXz1VaShyLCJpZiIpKWM9ITAsaS5wdXNoKEZpKF8uZXhwLG5jKGcsYiksUWwpKTtlbHNlIGlmKHg9VWkociwvXmVsc2UoLWlmKT8kLywhMCkpe2xldCB0LG49ZTtmb3IoO24tLSYmKHQ9b1tuXSwzPT09dC50eXBlKTspO2lmKHQmJktpKHQpJiZVaSh0LCJpZiIpKXtvLnNwbGljZShlLDEpLGUtLTtsZXQgdD1pW2kubGVuZ3RoLTFdO2Zvcig7MTk9PT10LmFsdGVybmF0ZS50eXBlOyl0PXQuYWx0ZXJuYXRlO3QuYWx0ZXJuYXRlPXguZXhwP0ZpKHguZXhwLG5jKGcsYiksUWwpOm5jKGcsYil9fWVsc2UgaWYoUz1VaShyLCJmb3IiKSl7Yz0hMDtjb25zdCBlPVMucGFyc2VSZXN1bHR8fEpsKFMuZXhwKTtlJiZpLnB1c2goTmkodC5oZWxwZXIoc2kpLFtlLnNvdXJjZSxFaShabChlKSxuYyhnLGIpLCEwKV0pKX1lbHNle2lmKHkpe2lmKGQuaGFzKHkpKWNvbnRpbnVlO2QuYWRkKHkpLCJkZWZhdWx0Ij09PXkmJihwPSEwKX1zLnB1c2goa2koZyxiKSl9fWF8fCh1P2YubGVuZ3RoJiYocHx8cy5wdXNoKGwodm9pZCAwLGYpKSk6cy5wdXNoKGwodm9pZCAwLG8pKSk7Y29uc3QgaD1jPzI6b2MoZS5jaGlsZHJlbik/MzoxO2xldCBtPUNpKHMuY29uY2F0KGtpKCJfIix3aSgiIitoLCExKSkpLHIpO3JldHVybiBpLmxlbmd0aCYmKG09TmkodC5oZWxwZXIobGkpLFttLFNpKGkpXSkpLHtzbG90czptLGhhc0R5bmFtaWNTbG90czpjfX1mdW5jdGlvbiBuYyhlLHQpe3JldHVybiBDaShba2koIm5hbWUiLGUpLGtpKCJmbiIsdCldKX1mdW5jdGlvbiBvYyhlKXtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7Y29uc3Qgbj1lW3RdO2lmKDE9PT1uLnR5cGUmJigyPT09bi50YWdUeXBlfHwwPT09bi50YWdUeXBlJiZvYyhuLmNoaWxkcmVuKSkpcmV0dXJuITB9cmV0dXJuITF9Y29uc3QgcmM9bmV3IFdlYWtNYXAsc2M9KGUsdCk9PntpZigxPT09ZS50eXBlJiYoMD09PWUudGFnVHlwZXx8MT09PWUudGFnVHlwZSkpcmV0dXJuIGZ1bmN0aW9uKCl7Y29uc3R7dGFnOm4scHJvcHM6b309ZSxyPTE9PT1lLnRhZ1R5cGUscz1yP2Z1bmN0aW9uKGUsdCxuPSExKXtjb25zdHt0YWc6b309ZSxyPSJjb21wb25lbnQiPT09ZS50YWc/amkoZSwiaXMiKTpVaShlLCJpcyIpO2lmKHIpe2NvbnN0IGU9Nj09PXIudHlwZT9yLnZhbHVlJiZ3aShyLnZhbHVlLmNvbnRlbnQsITApOnIuZXhwO2lmKGUpcmV0dXJuIE5pKHQuaGVscGVyKG5pKSxbZV0pfWNvbnN0IHM9TWkobyl8fHQuaXNCdWlsdEluQ29tcG9uZW50KG8pO2lmKHMpcmV0dXJuIG58fHQuaGVscGVyKHMpLHM7aWYoInNldHVwIj09PXQuYmluZGluZ01ldGFkYXRhW29dKXJldHVybmAkc2V0dXBbJHtKU09OLnN0cmluZ2lmeShvKX1dYDtyZXR1cm4gdC5oZWxwZXIodGkpLHQuY29tcG9uZW50cy5hZGQobykscWkobywiY29tcG9uZW50Iil9KGUsdCk6YCIke259ImA7bGV0IGksbCxjLGEsdSxwLGY9MCxkPVIocykmJnMuY2FsbGVlPT09bml8fHM9PT1Lc3x8cz09PVdzfHwhciYmKCJzdmciPT09bnx8ImZvcmVpZ25PYmplY3QiPT09bnx8amkoZSwia2V5IiwhMCkpO2lmKG8ubGVuZ3RoPjApe2NvbnN0IG49aWMoZSx0KTtpPW4ucHJvcHMsZj1uLnBhdGNoRmxhZyx1PW4uZHluYW1pY1Byb3BOYW1lcztjb25zdCBvPW4uZGlyZWN0aXZlcztwPW8mJm8ubGVuZ3RoP1NpKG8ubWFwKGU9PmZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1bXSxvPXJjLmdldChlKTtvP24ucHVzaCh0LmhlbHBlclN0cmluZyhvKSk6KHQuaGVscGVyKG9pKSx0LmRpcmVjdGl2ZXMuYWRkKGUubmFtZSksbi5wdXNoKHFpKGUubmFtZSwiZGlyZWN0aXZlIikpKTtjb25zdHtsb2M6cn09ZTtlLmV4cCYmbi5wdXNoKGUuZXhwKTtlLmFyZyYmKGUuZXhwfHxuLnB1c2goInZvaWQgMCIpLG4ucHVzaChlLmFyZykpO2lmKE9iamVjdC5rZXlzKGUubW9kaWZpZXJzKS5sZW5ndGgpe2UuYXJnfHwoZS5leHB8fG4ucHVzaCgidm9pZCAwIiksbi5wdXNoKCJ2b2lkIDAiKSk7Y29uc3QgdD13aSgidHJ1ZSIsITEscik7bi5wdXNoKENpKGUubW9kaWZpZXJzLm1hcChlPT5raShlLHQpKSxyKSl9cmV0dXJuIFNpKG4sZS5sb2MpfShlLHQpKSk6dm9pZCAwfWlmKGUuY2hpbGRyZW4ubGVuZ3RoPjApe3M9PT1HcyYmKGQ9ITAsZnw9MTAyNCk7aWYociYmcyE9PUtzJiZzIT09R3Mpe2NvbnN0e3Nsb3RzOm4saGFzRHluYW1pY1Nsb3RzOm99PXRjKGUsdCk7bD1uLG8mJihmfD0xMDI0KX1lbHNlIGlmKDE9PT1lLmNoaWxkcmVuLmxlbmd0aCYmcyE9PUtzKXtjb25zdCB0PWUuY2hpbGRyZW5bMF0sbj10LnR5cGUsbz01PT09bnx8OD09PW47byYmIWtsKHQpJiYoZnw9MSksbD1vfHwyPT09bj90OmUuY2hpbGRyZW59ZWxzZSBsPWUuY2hpbGRyZW59MCE9PWYmJihjPVN0cmluZyhmKSx1JiZ1Lmxlbmd0aCYmKGE9ZnVuY3Rpb24oZSl7bGV0IHQ9IlsiO2ZvcihsZXQgbj0wLG89ZS5sZW5ndGg7bjxvO24rKyl0Kz1KU09OLnN0cmluZ2lmeShlW25dKSxuPG8tMSYmKHQrPSIsICIpO3JldHVybiB0KyJdIn0odSkpKSxlLmNvZGVnZW5Ob2RlPXhpKHQscyxpLGwsYyxhLHAsISFkLCExLGUubG9jKX19O2Z1bmN0aW9uIGljKGUsdCxuPWUucHJvcHMsbz0hMSl7Y29uc3R7dGFnOnIsbG9jOnN9PWUsaT0xPT09ZS50YWdUeXBlO2xldCBsPVtdO2NvbnN0IGM9W10sYT1bXTtsZXQgdT0wLHA9ITEsZj0hMSxkPSExLGg9ITEsbT0hMSxnPSExO2NvbnN0IHY9W10seT0oe2tleTplLHZhbHVlOnR9KT0+e2lmKCRpKGUpKXtjb25zdCBuPWUuY29udGVudCxvPXgobik7aWYoaXx8IW98fCJvbmNsaWNrIj09PW4udG9Mb3dlckNhc2UoKXx8Im9uVXBkYXRlOm1vZGVsVmFsdWUiPT09bnx8VShuKXx8KGg9ITApLG8mJlUobikmJihnPSEwKSwyMD09PXQudHlwZXx8KDQ9PT10LnR5cGV8fDg9PT10LnR5cGUpJiZrbCh0KT4wKXJldHVybjsicmVmIj09PW4/cD0hMDoiY2xhc3MiIT09bnx8aT8ic3R5bGUiIT09bnx8aT8ia2V5Ij09PW58fHYuaW5jbHVkZXMobil8fHYucHVzaChuKTpkPSEwOmY9ITB9ZWxzZSBtPSEwfTtmb3IobGV0IGk9MDtpPG4ubGVuZ3RoO2krKyl7Y29uc3QgdT1uW2ldO2lmKDY9PT11LnR5cGUpe2NvbnN0e2xvYzplLG5hbWU6dCx2YWx1ZTpufT11O2lmKCJyZWYiPT09dCYmKHA9ITApLCJpcyI9PT10JiYiY29tcG9uZW50Ij09PXIpY29udGludWU7bC5wdXNoKGtpKHdpKHQsITAsSWkoZSwwLHQubGVuZ3RoKSksd2kobj9uLmNvbnRlbnQ6IiIsITAsbj9uLmxvYzplKSkpfWVsc2V7Y29uc3R7bmFtZTpuLGFyZzppLGV4cDpwLGxvYzpmfT11LGQ9ImJpbmQiPT09bixoPSJvbiI9PT1uO2lmKCJzbG90Ij09PW4pY29udGludWU7aWYoIm9uY2UiPT09biljb250aW51ZTtpZigiaXMiPT09bnx8ZCYmImNvbXBvbmVudCI9PT1yJiZEaShpLCJpcyIpKWNvbnRpbnVlO2lmKGgmJm8pY29udGludWU7aWYoIWkmJihkfHxoKSl7bT0hMCxwJiYobC5sZW5ndGgmJihjLnB1c2goQ2kobGMobCkscykpLGw9W10pLGMucHVzaChkP3A6e3R5cGU6MTQsbG9jOmYsY2FsbGVlOnQuaGVscGVyKHVpKSxhcmd1bWVudHM6W3BdfSkpO2NvbnRpbnVlfWNvbnN0IGc9dC5kaXJlY3RpdmVUcmFuc2Zvcm1zW25dO2lmKGcpe2NvbnN0e3Byb3BzOm4sbmVlZFJ1bnRpbWU6cn09Zyh1LGUsdCk7IW8mJm4uZm9yRWFjaCh5KSxsLnB1c2goLi4ubiksciYmKGEucHVzaCh1KSxPKHIpJiZyYy5zZXQodSxyKSl9ZWxzZSBhLnB1c2godSl9fWxldCBiPXZvaWQgMDtyZXR1cm4gYy5sZW5ndGg/KGwubGVuZ3RoJiZjLnB1c2goQ2kobGMobCkscykpLGI9Yy5sZW5ndGg+MT9OaSh0LmhlbHBlcihhaSksYyxzKTpjWzBdKTpsLmxlbmd0aCYmKGI9Q2kobGMobCkscykpLG0/dXw9MTY6KGYmJih1fD0yKSxkJiYodXw9NCksdi5sZW5ndGgmJih1fD04KSxoJiYodXw9MzIpKSwwIT09dSYmMzIhPT11fHwhKHB8fGd8fGEubGVuZ3RoPjApfHwodXw9NTEyKSx7cHJvcHM6YixkaXJlY3RpdmVzOmEscGF0Y2hGbGFnOnUsZHluYW1pY1Byb3BOYW1lczp2fX1mdW5jdGlvbiBsYyhlKXtjb25zdCB0PW5ldyBNYXAsbj1bXTtmb3IobGV0IG89MDtvPGUubGVuZ3RoO28rKyl7Y29uc3Qgcj1lW29dO2lmKDg9PT1yLmtleS50eXBlfHwhci5rZXkuaXNTdGF0aWMpe24ucHVzaChyKTtjb250aW51ZX1jb25zdCBzPXIua2V5LmNvbnRlbnQsaT10LmdldChzKTtpPygic3R5bGUiPT09c3x8ImNsYXNzIj09PXN8fHMuc3RhcnRzV2l0aCgib24iKSkmJmNjKGkscik6KHQuc2V0KHMsciksbi5wdXNoKHIpKX1yZXR1cm4gbn1mdW5jdGlvbiBjYyhlLHQpezE3PT09ZS52YWx1ZS50eXBlP2UudmFsdWUuZWxlbWVudHMucHVzaCh0LnZhbHVlKTplLnZhbHVlPVNpKFtlLnZhbHVlLHQudmFsdWVdLGUubG9jKX1jb25zdCBhYz0oZSx0KT0+e2lmKFdpKGUpKXtjb25zdHtjaGlsZHJlbjpuLGxvYzpvfT1lLHtzbG90TmFtZTpyLHNsb3RQcm9wczpzfT1mdW5jdGlvbihlLHQpe2xldCBuPSciZGVmYXVsdCInLG89dm9pZCAwO2NvbnN0IHI9amkoZSwibmFtZSIpO3ImJig2PT09ci50eXBlJiZyLnZhbHVlP249SlNPTi5zdHJpbmdpZnkoci52YWx1ZS5jb250ZW50KTo3PT09ci50eXBlJiZyLmV4cCYmKG49ci5leHApKTtjb25zdCBzPXI/ZS5wcm9wcy5maWx0ZXIoZT0+ZSE9PXIpOmUucHJvcHM7aWYocy5sZW5ndGg+MCl7Y29uc3R7cHJvcHM6bixkaXJlY3RpdmVzOnJ9PWljKGUsdCxzKTtvPW59cmV0dXJue3Nsb3ROYW1lOm4sc2xvdFByb3BzOm99fShlLHQpLGk9W3QucHJlZml4SWRlbnRpZmllcnM/Il9jdHguJHNsb3RzIjoiJHNsb3RzIixyXTtzJiZpLnB1c2gocyksbi5sZW5ndGgmJihzfHxpLnB1c2goInt9IiksaS5wdXNoKEVpKFtdLG4sITEsITEsbykpKSxlLmNvZGVnZW5Ob2RlPU5pKHQuaGVscGVyKGlpKSxpLG8pfX07Y29uc3QgdWM9L15ccyooW1x3JF9dK3xcKFteKV0qP1wpKVxzKj0+fF5ccypmdW5jdGlvbig/OlxzK1tcdyRdKyk/XHMqXCgvLHBjPShlLHQsbixvKT0+e2NvbnN0e2xvYzpyLG1vZGlmaWVyczpzLGFyZzppfT1lO2xldCBsO2lmKDQ9PT1pLnR5cGUpaWYoaS5pc1N0YXRpYyl7bD13aShHKEgoaS5jb250ZW50KSksITAsaS5sb2MpfWVsc2UgbD1UaShbbi5oZWxwZXJTdHJpbmcoZGkpKyIoIixpLCIpIl0pO2Vsc2UgbD1pLGwuY2hpbGRyZW4udW5zaGlmdChuLmhlbHBlclN0cmluZyhkaSkrIigiKSxsLmNoaWxkcmVuLnB1c2goIikiKTtsZXQgYz1lLmV4cDtjJiYhYy5jb250ZW50LnRyaW0oKSYmKGM9dm9pZCAwKTtsZXQgYT1uLmNhY2hlSGFuZGxlcnMmJiFjO2lmKGMpe2NvbnN0IGU9UGkoYy5jb250ZW50KSx0PSEoZXx8dWMudGVzdChjLmNvbnRlbnQpKSxuPWMuY29udGVudC5pbmNsdWRlcygiOyIpOyh0fHxhJiZlKSYmKGM9VGkoW2Ake3Q/IiRldmVudCI6IiguLi5hcmdzKSJ9ID0+ICR7bj8ieyI6IigifWAsYyxuPyJ9IjoiKSJdKSl9bGV0IHU9e3Byb3BzOltraShsLGN8fHdpKCIoKSA9PiB7fSIsITEscikpXX07cmV0dXJuIG8mJih1PW8odSkpLGEmJih1LnByb3BzWzBdLnZhbHVlPW4uY2FjaGUodS5wcm9wc1swXS52YWx1ZSkpLHV9LGZjPShlLHQsbik9Pntjb25zdHtleHA6byxtb2RpZmllcnM6cixsb2M6c309ZSxpPWUuYXJnO3JldHVybiA0IT09aS50eXBlPyhpLmNoaWxkcmVuLnVuc2hpZnQoIigiKSxpLmNoaWxkcmVuLnB1c2goJykgfHwgIiInKSk6aS5pc1N0YXRpY3x8KGkuY29udGVudD1pLmNvbnRlbnQrJyB8fCAiIicpLHIuaW5jbHVkZXMoImNhbWVsIikmJig0PT09aS50eXBlP2kuY29udGVudD1pLmlzU3RhdGljP0goaS5jb250ZW50KTpgJHtuLmhlbHBlclN0cmluZyhwaSl9KCR7aS5jb250ZW50fSlgOihpLmNoaWxkcmVuLnVuc2hpZnQobi5oZWxwZXJTdHJpbmcocGkpKyIoIiksaS5jaGlsZHJlbi5wdXNoKCIpIikpKSwhb3x8ND09PW8udHlwZSYmIW8uY29udGVudC50cmltKCk/e3Byb3BzOltraShpLHdpKCIiLCEwLHMpKV19Ontwcm9wczpba2koaSxvKV19fSxkYz0oZSx0KT0+e2lmKDA9PT1lLnR5cGV8fDE9PT1lLnR5cGV8fDExPT09ZS50eXBlfHwxMD09PWUudHlwZSlyZXR1cm4oKT0+e2NvbnN0IG89ZS5jaGlsZHJlbjtsZXQgcj12b2lkIDAscz0hMTtmb3IobGV0IGU9MDtlPG8ubGVuZ3RoO2UrKyl7Y29uc3QgdD1vW2VdO2lmKEhpKHQpKXtzPSEwO2ZvcihsZXQgbj1lKzE7bjxvLmxlbmd0aDtuKyspe2NvbnN0IHM9b1tuXTtpZighSGkocykpe3I9dm9pZCAwO2JyZWFrfXJ8fChyPW9bZV09e3R5cGU6OCxsb2M6dC5sb2MsY2hpbGRyZW46W3RdfSksci5jaGlsZHJlbi5wdXNoKCIgKyAiLHMpLG8uc3BsaWNlKG4sMSksbi0tfX19aWYocyYmKDEhPT1vLmxlbmd0aHx8MCE9PWUudHlwZSYmKDEhPT1lLnR5cGV8fDAhPT1lLnRhZ1R5cGUpKSlmb3IobGV0IGU9MDtlPG8ubGVuZ3RoO2UrKyl7Y29uc3Qgcj1vW2VdO2lmKEhpKHIpfHw4PT09ci50eXBlKXtjb25zdCBzPVtdOzI9PT1yLnR5cGUmJiIgIj09PXIuY29udGVudHx8cy5wdXNoKHIpLHQuc3NyfHwyPT09ci50eXBlfHxzLnB1c2goYDEgLyogJHtuWzFdfSAqL2ApLG9bZV09e3R5cGU6MTIsY29udGVudDpyLGxvYzpyLmxvYyxjb2RlZ2VuTm9kZTpOaSh0LmhlbHBlcihYcykscyl9fX19fSxoYz1uZXcgV2Vha1NldCxtYz0oZSx0KT0+e2lmKDE9PT1lLnR5cGUmJlVpKGUsIm9uY2UiLCEwKSl7aWYoaGMuaGFzKGUpKXJldHVybjtyZXR1cm4gaGMuYWRkKGUpLHQuaGVscGVyKGhpKSwoKT0+e2NvbnN0IGU9dC5jdXJyZW50Tm9kZTtlLmNvZGVnZW5Ob2RlJiYoZS5jb2RlZ2VuTm9kZT10LmNhY2hlKGUuY29kZWdlbk5vZGUsITApKX19fSxnYz0oZSx0LG4pPT57Y29uc3R7ZXhwOm8sYXJnOnJ9PWU7aWYoIW8pcmV0dXJuIHZjKCk7aWYoIVBpKDQ9PT1vLnR5cGU/by5jb250ZW50Om8ubG9jLnNvdXJjZSkpcmV0dXJuIHZjKCk7Y29uc3Qgcz1yfHx3aSgibW9kZWxWYWx1ZSIsITApLGk9cj8kaShyKT8ib25VcGRhdGU6IityLmNvbnRlbnQ6VGkoWycib25VcGRhdGU6IiArICcscl0pOiJvblVwZGF0ZTptb2RlbFZhbHVlIixsPVtraShzLGUuZXhwKSxraShpLFRpKFsiJGV2ZW50ID0+ICgiLG8sIiA9ICRldmVudCkiXSkpXTtpZihlLm1vZGlmaWVycy5sZW5ndGgmJjE9PT10LnRhZ1R5cGUpe2NvbnN0IHQ9ZS5tb2RpZmllcnMubWFwKGU9PihSaShlKT9lOkpTT04uc3RyaW5naWZ5KGUpKSsiOiB0cnVlIikuam9pbigiLCAiKSxuPXI/JGkocik/ci5jb250ZW50KyJNb2RpZmllcnMiOlRpKFtyLCcgKyAiTW9kaWZpZXJzIiddKToibW9kZWxNb2RpZmllcnMiO2wucHVzaChraShuLHdpKGB7ICR7dH0gfWAsITEsZS5sb2MsITApKSl9cmV0dXJuIHZjKGwpfTtmdW5jdGlvbiB2YyhlPVtdKXtyZXR1cm57cHJvcHM6ZX19ZnVuY3Rpb24geWMoZSx0PXt9KXtjb25zdCBuPXQub25FcnJvcnx8RHMsbz0ibW9kdWxlIj09PXQubW9kZTshMD09PXQucHJlZml4SWRlbnRpZmllcnM/bihIcyg0NSkpOm8mJm4oSHMoNDYpKTt0LmNhY2hlSGFuZGxlcnMmJm4oSHMoNDcpKSx0LnNjb3BlSWQmJiFvJiZuKEhzKDQ4KSk7Y29uc3Qgcj1NKGUpP1FpKGUsdCk6ZSxbcyxpXT1bW21jLGpsLEtsLGFjLHNjLFhsLGRjXSx7b246cGMsYmluZDpmYyxtb2RlbDpnY31dO3JldHVybiBGbChyLEMoe30sdCx7cHJlZml4SWRlbnRpZmllcnM6ZmFsc2Usbm9kZVRyYW5zZm9ybXM6Wy4uLnMsLi4udC5ub2RlVHJhbnNmb3Jtc3x8W11dLGRpcmVjdGl2ZVRyYW5zZm9ybXM6Qyh7fSxpLHQuZGlyZWN0aXZlVHJhbnNmb3Jtc3x8e30pfSkpLE9sKHIsQyh7fSx0LHtwcmVmaXhJZGVudGlmaWVyczpmYWxzZX0pKX1jb25zdCBiYz1TeW1ib2woIiIpLF9jPVN5bWJvbCgiIikseGM9U3ltYm9sKCIiKSxTYz1TeW1ib2woIiIpLENjPVN5bWJvbCgiIiksa2M9U3ltYm9sKCIiKSx3Yz1TeW1ib2woIiIpLFRjPVN5bWJvbCgiIiksTmM9U3ltYm9sKCIiKSxFYz1TeW1ib2woIiIpO3ZhciBGYztsZXQgJGM7RmM9e1tiY106InZNb2RlbFJhZGlvIixbX2NdOiJ2TW9kZWxDaGVja2JveCIsW3hjXToidk1vZGVsVGV4dCIsW1NjXToidk1vZGVsU2VsZWN0IixbQ2NdOiJ2TW9kZWxEeW5hbWljIixba2NdOiJ3aXRoTW9kaWZpZXJzIixbd2NdOiJ3aXRoS2V5cyIsW1RjXToidlNob3ciLFtOY106IlRyYW5zaXRpb24iLFtFY106IlRyYW5zaXRpb25Hcm91cCJ9LE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoRmMpLmZvckVhY2goZT0+e2JpW2VdPUZjW2VdfSk7Y29uc3QgQWM9dCgic3R5bGUsaWZyYW1lLHNjcmlwdCxub3NjcmlwdCIsITApLE1jPXtpc1ZvaWRUYWc6Zixpc05hdGl2ZVRhZzplPT51KGUpfHxwKGUpLGlzUHJlVGFnOmU9PiJwcmUiPT09ZSxkZWNvZGVFbnRpdGllczpmdW5jdGlvbihlKXtyZXR1cm4oJGN8fCgkYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSkpLmlubmVySFRNTD1lLCRjLnRleHRDb250ZW50fSxpc0J1aWx0SW5Db21wb25lbnQ6ZT0+QWkoZSwiVHJhbnNpdGlvbiIpP05jOkFpKGUsIlRyYW5zaXRpb25Hcm91cCIpP0VjOnZvaWQgMCxnZXROYW1lc3BhY2UoZSx0KXtsZXQgbj10P3QubnM6MDtpZih0JiYyPT09bilpZigiYW5ub3RhdGlvbi14bWwiPT09dC50YWcpe2lmKCJzdmciPT09ZSlyZXR1cm4gMTt0LnByb3BzLnNvbWUoZT0+Nj09PWUudHlwZSYmImVuY29kaW5nIj09PWUubmFtZSYmbnVsbCE9ZS52YWx1ZSYmKCJ0ZXh0L2h0bWwiPT09ZS52YWx1ZS5jb250ZW50fHwiYXBwbGljYXRpb24veGh0bWwreG1sIj09PWUudmFsdWUuY29udGVudCkpJiYobj0wKX1lbHNlL15tKD86W2lvbnNdfHRleHQpJC8udGVzdCh0LnRhZykmJiJtZ2x5cGgiIT09ZSYmIm1hbGlnbm1hcmsiIT09ZSYmKG49MCk7ZWxzZSB0JiYxPT09biYmKCJmb3JlaWduT2JqZWN0IiE9PXQudGFnJiYiZGVzYyIhPT10LnRhZyYmInRpdGxlIiE9PXQudGFnfHwobj0wKSk7aWYoMD09PW4pe2lmKCJzdmciPT09ZSlyZXR1cm4gMTtpZigibWF0aCI9PT1lKXJldHVybiAyfXJldHVybiBufSxnZXRUZXh0TW9kZSh7dGFnOmUsbnM6dH0pe2lmKDA9PT10KXtpZigidGV4dGFyZWEiPT09ZXx8InRpdGxlIj09PWUpcmV0dXJuIDE7aWYoQWMoZSkpcmV0dXJuIDJ9cmV0dXJuIDB9fSxPYz0oZSx0KT0+e2NvbnN0IG49YyhlKTtyZXR1cm4gd2koSlNPTi5zdHJpbmdpZnkobiksITEsdCwhMCl9O2NvbnN0IFJjPXQoInBhc3NpdmUsb25jZSxjYXB0dXJlIiksQmM9dCgic3RvcCxwcmV2ZW50LHNlbGYsY3RybCxzaGlmdCxhbHQsbWV0YSxleGFjdCxtaWRkbGUiKSxQYz10KCJsZWZ0LHJpZ2h0IiksSWM9dCgib25rZXl1cCxvbmtleWRvd24sb25rZXlwcmVzcyIsITApLExjPShlLHQpPT4kaShlKSYmIm9uY2xpY2siPT09ZS5jb250ZW50LnRvTG93ZXJDYXNlKCk/d2kodCwhMCk6NCE9PWUudHlwZT9UaShbIigiLGUsYCkgPT09ICJvbkNsaWNrIiA/ICIke3R9IiA6IChgLGUsIikiXSk6ZSxWYz0oZSx0KT0+ezEhPT1lLnR5cGV8fDAhPT1lLnRhZ1R5cGV8fCJzY3JpcHQiIT09ZS50YWcmJiJzdHlsZSIhPT1lLnRhZ3x8dC5yZW1vdmVOb2RlKCl9LFVjPVtlPT57MT09PWUudHlwZSYmZS5wcm9wcy5mb3JFYWNoKCh0LG4pPT57Nj09PXQudHlwZSYmInN0eWxlIj09PXQubmFtZSYmdC52YWx1ZSYmKGUucHJvcHNbbl09e3R5cGU6NyxuYW1lOiJiaW5kIixhcmc6d2koInN0eWxlIiwhMCx0LmxvYyksZXhwOk9jKHQudmFsdWUuY29udGVudCx0LmxvYyksbW9kaWZpZXJzOltdLGxvYzp0LmxvY30pfSl9XSxqYz17Y2xvYWs6KCk9Pih7cHJvcHM6W119KSxodG1sOihlLHQsbik9Pntjb25zdHtleHA6byxsb2M6cn09ZTtyZXR1cm4gdC5jaGlsZHJlbi5sZW5ndGgmJih0LmNoaWxkcmVuLmxlbmd0aD0wKSx7cHJvcHM6W2tpKHdpKCJpbm5lckhUTUwiLCEwLHIpLG98fHdpKCIiLCEwKSldfX0sdGV4dDooZSx0LG4pPT57Y29uc3R7ZXhwOm8sbG9jOnJ9PWU7cmV0dXJuIHQuY2hpbGRyZW4ubGVuZ3RoJiYodC5jaGlsZHJlbi5sZW5ndGg9MCkse3Byb3BzOltraSh3aSgidGV4dENvbnRlbnQiLCEwKSxvP05pKG4uaGVscGVyU3RyaW5nKGNpKSxbb10scik6d2koIiIsITApKV19fSxtb2RlbDooZSx0LG4pPT57Y29uc3Qgbz1nYyhlLHQpO2lmKCFvLnByb3BzLmxlbmd0aHx8MT09PXQudGFnVHlwZSlyZXR1cm4gbztjb25zdHt0YWc6cn09dCxzPW4uaXNDdXN0b21FbGVtZW50KHIpO2lmKCJpbnB1dCI9PT1yfHwidGV4dGFyZWEiPT09cnx8InNlbGVjdCI9PT1yfHxzKXtsZXQgZT14YyxpPSExO2lmKCJpbnB1dCI9PT1yfHxzKXtjb25zdCBuPWppKHQsInR5cGUiKTtpZihuKXtpZig3PT09bi50eXBlKWU9Q2M7ZWxzZSBpZihuLnZhbHVlKXN3aXRjaChuLnZhbHVlLmNvbnRlbnQpe2Nhc2UicmFkaW8iOmU9YmM7YnJlYWs7Y2FzZSJjaGVja2JveCI6ZT1fYzticmVhaztjYXNlImZpbGUiOmk9ITB9fWVsc2UoZnVuY3Rpb24oZSl7cmV0dXJuIGUucHJvcHMuc29tZShlPT4hKDchPT1lLnR5cGV8fCJiaW5kIiE9PWUubmFtZXx8ZS5hcmcmJjQ9PT1lLmFyZy50eXBlJiZlLmFyZy5pc1N0YXRpYykpfSkodCkmJihlPUNjKX1lbHNlInNlbGVjdCI9PT1yJiYoZT1TYyk7aXx8KG8ubmVlZFJ1bnRpbWU9bi5oZWxwZXIoZSkpfXJldHVybiBvLnByb3BzPW8ucHJvcHMuZmlsdGVyKGU9PiEoND09PWUua2V5LnR5cGUmJiJtb2RlbFZhbHVlIj09PWUua2V5LmNvbnRlbnQpKSxvfSxvbjooZSx0LG4pPT5wYyhlLDAsbix0PT57Y29uc3R7bW9kaWZpZXJzOm99PWU7aWYoIW8ubGVuZ3RoKXJldHVybiB0O2xldHtrZXk6cix2YWx1ZTpzfT10LnByb3BzWzBdO2NvbnN0e2tleU1vZGlmaWVyczppLG5vbktleU1vZGlmaWVyczpsLGV2ZW50T3B0aW9uTW9kaWZpZXJzOmN9PSgoZSx0KT0+e2NvbnN0IG49W10sbz1bXSxyPVtdO2ZvcihsZXQgcz0wO3M8dC5sZW5ndGg7cysrKXtjb25zdCBpPXRbc107UmMoaSk/ci5wdXNoKGkpOlBjKGkpPyRpKGUpP0ljKGUuY29udGVudCk/bi5wdXNoKGkpOm8ucHVzaChpKToobi5wdXNoKGkpLG8ucHVzaChpKSk6QmMoaSk/by5wdXNoKGkpOm4ucHVzaChpKX1yZXR1cm57a2V5TW9kaWZpZXJzOm4sbm9uS2V5TW9kaWZpZXJzOm8sZXZlbnRPcHRpb25Nb2RpZmllcnM6cn19KShyLG8pO2lmKGwuaW5jbHVkZXMoInJpZ2h0IikmJihyPUxjKHIsIm9uQ29udGV4dG1lbnUiKSksbC5pbmNsdWRlcygibWlkZGxlIikmJihyPUxjKHIsIm9uTW91c2V1cCIpKSxsLmxlbmd0aCYmKHM9Tmkobi5oZWxwZXIoa2MpLFtzLEpTT04uc3RyaW5naWZ5KGwpXSkpLCFpLmxlbmd0aHx8JGkocikmJiFJYyhyLmNvbnRlbnQpfHwocz1OaShuLmhlbHBlcih3YyksW3MsSlNPTi5zdHJpbmdpZnkoaSldKSksYy5sZW5ndGgpe2NvbnN0IGU9Yy5tYXAoVykuam9pbigiIik7cj0kaShyKT93aShgJHtyLmNvbnRlbnR9JHtlfWAsITApOlRpKFsiKCIscixgKSArICIke2V9ImBdKX1yZXR1cm57cHJvcHM6W2tpKHIscyldfX0pLHNob3c6KGUsdCxuKT0+KHtwcm9wczpbXSxuZWVkUnVudGltZTpuLmhlbHBlcihUYyl9KX07Y29uc3QgRGM9T2JqZWN0LmNyZWF0ZShudWxsKTtmdW5jdGlvbiBIYyhlLHQpe2lmKCFNKGUpKXtpZighZS5ub2RlVHlwZSlyZXR1cm4geTtlPWUuaW5uZXJIVE1MfWNvbnN0IG49ZSxvPURjW25dO2lmKG8pcmV0dXJuIG87aWYoIiMiPT09ZVswXSl7Y29uc3QgdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpO2U9dD90LmlubmVySFRNTDoiIn1jb25zdHtjb2RlOnJ9PWZ1bmN0aW9uKGUsdD17fSl7cmV0dXJuIHljKGUsQyh7fSxNYyx0LHtub2RlVHJhbnNmb3JtczpbVmMsLi4uVWMsLi4udC5ub2RlVHJhbnNmb3Jtc3x8W11dLGRpcmVjdGl2ZVRyYW5zZm9ybXM6Qyh7fSxqYyx0LmRpcmVjdGl2ZVRyYW5zZm9ybXN8fHt9KSx0cmFuc2Zvcm1Ib2lzdDpudWxsfSkpfShlLEMoe2hvaXN0U3RhdGljOiEwLG9uRXJyb3IoZSl7dGhyb3cgZX19LHQpKSxzPW5ldyBGdW5jdGlvbihyKSgpO3JldHVybiBzLl9yYz0hMCxEY1tuXT1zfXJldHVybiBTcihIYyksZS5CYXNlVHJhbnNpdGlvbj1WbixlLkNvbW1lbnQ9Um8sZS5GcmFnbWVudD1NbyxlLktlZXBBbGl2ZT1HbixlLlN0YXRpYz1CbyxlLlN1c3BlbnNlPWVuLGUuVGVsZXBvcnQ9Tm8sZS5UZXh0PU9vLGUuVHJhbnNpdGlvbj1lcyxlLlRyYW5zaXRpb25Hcm91cD1ocyxlLmNhbGxXaXRoQXN5bmNFcnJvckhhbmRsaW5nPWJ0LGUuY2FsbFdpdGhFcnJvckhhbmRsaW5nPXl0LGUuY2FtZWxpemU9SCxlLmNhcGl0YWxpemU9VyxlLmNsb25lVk5vZGU9cW8sZS5jb21waWxlPUhjLGUuY29tcHV0ZWQ9TnIsZS5jcmVhdGVBcHA9KC4uLmUpPT57Y29uc3QgdD1WcygpLmNyZWF0ZUFwcCguLi5lKSx7bW91bnQ6bn09dDtyZXR1cm4gdC5tb3VudD1lPT57Y29uc3Qgbz1qcyhlKTtpZighbylyZXR1cm47Y29uc3Qgcj10Ll9jb21wb25lbnQ7QShyKXx8ci5yZW5kZXJ8fHIudGVtcGxhdGV8fChyLnRlbXBsYXRlPW8uaW5uZXJIVE1MKSxvLmlubmVySFRNTD0iIjtjb25zdCBzPW4obyk7cmV0dXJuIG8ucmVtb3ZlQXR0cmlidXRlKCJ2LWNsb2FrIiksby5zZXRBdHRyaWJ1dGUoImRhdGEtdi1hcHAiLCIiKSxzfSx0fSxlLmNyZWF0ZUJsb2NrPWpvLGUuY3JlYXRlQ29tbWVudFZOb2RlPWZ1bmN0aW9uKGU9IiIsdD0hMSl7cmV0dXJuIHQ/KExvKCksam8oUm8sbnVsbCxlKSk6R28oUm8sbnVsbCxlKX0sZS5jcmVhdGVIeWRyYXRpb25SZW5kZXJlcj1fbyxlLmNyZWF0ZVJlbmRlcmVyPWJvLGUuY3JlYXRlU1NSQXBwPSguLi5lKT0+e2NvbnN0IHQ9VXMoKS5jcmVhdGVBcHAoLi4uZSkse21vdW50Om59PXQ7cmV0dXJuIHQubW91bnQ9ZT0+e2NvbnN0IHQ9anMoZSk7aWYodClyZXR1cm4gbih0LCEwKX0sdH0sZS5jcmVhdGVTbG90cz1mdW5jdGlvbihlLHQpe2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKXtjb25zdCBvPXRbbl07aWYoTihvKSlmb3IobGV0IHQ9MDt0PG8ubGVuZ3RoO3QrKyllW29bdF0ubmFtZV09b1t0XS5mbjtlbHNlIG8mJihlW28ubmFtZV09by5mbil9cmV0dXJuIGV9LGUuY3JlYXRlU3RhdGljVk5vZGU9ZnVuY3Rpb24oZSx0KXtjb25zdCBuPUdvKEJvLG51bGwsZSk7cmV0dXJuIG4uc3RhdGljQ291bnQ9dCxufSxlLmNyZWF0ZVRleHRWTm9kZT1KbyxlLmNyZWF0ZVZOb2RlPUdvLGUuY3VzdG9tUmVmPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgcHQoZSl9LGUuZGVmaW5lQXN5bmNDb21wb25lbnQ9ZnVuY3Rpb24oZSl7QShlKSYmKGU9e2xvYWRlcjplfSk7Y29uc3R7bG9hZGVyOnQsbG9hZGluZ0NvbXBvbmVudDpuLGVycm9yQ29tcG9uZW50Om8sZGVsYXk6cj0yMDAsdGltZW91dDpzLHN1c3BlbnNpYmxlOmk9ITAsb25FcnJvcjpsfT1lO2xldCBjLGE9bnVsbCx1PTA7Y29uc3QgcD0oKT0+e2xldCBlO3JldHVybiBhfHwoZT1hPXQoKS5jYXRjaChlPT57aWYoZT1lIGluc3RhbmNlb2YgRXJyb3I/ZTpuZXcgRXJyb3IoU3RyaW5nKGUpKSxsKXJldHVybiBuZXcgUHJvbWlzZSgodCxuKT0+e2woZSwoKT0+dCgodSsrLGE9bnVsbCxwKCkpKSwoKT0+bihlKSx1KzEpfSk7dGhyb3cgZX0pLnRoZW4odD0+ZSE9PWEmJmE/YToodCYmKHQuX19lc01vZHVsZXx8Ik1vZHVsZSI9PT10W1N5bWJvbC50b1N0cmluZ1RhZ10pJiYodD10LmRlZmF1bHQpLGM9dCx0KSkpfTtyZXR1cm4gRXIoe19fYXN5bmNMb2FkZXI6cCxuYW1lOiJBc3luY0NvbXBvbmVudFdyYXBwZXIiLHNldHVwKCl7Y29uc3QgZT1ncjtpZihjKXJldHVybigpPT5GcihjLGUpO2NvbnN0IHQ9dD0+e2E9bnVsbCxfdCh0LGUsMTMsIW8pfTtpZihpJiZlLnN1c3BlbnNlKXJldHVybiBwKCkudGhlbih0PT4oKT0+RnIodCxlKSkuY2F0Y2goZT0+KHQoZSksKCk9Pm8/R28obyx7ZXJyb3I6ZX0pOm51bGwpKTtjb25zdCBsPXN0KCExKSx1PXN0KCksZj1zdCghIXIpO3JldHVybiByJiZzZXRUaW1lb3V0KCgpPT57Zi52YWx1ZT0hMX0sciksbnVsbCE9cyYmc2V0VGltZW91dCgoKT0+e2lmKCFsLnZhbHVlJiYhdS52YWx1ZSl7Y29uc3QgZT1uZXcgRXJyb3IoYEFzeW5jIGNvbXBvbmVudCB0aW1lZCBvdXQgYWZ0ZXIgJHtzfW1zLmApO3QoZSksdS52YWx1ZT1lfX0scykscCgpLnRoZW4oKCk9PntsLnZhbHVlPSEwfSkuY2F0Y2goZT0+e3QoZSksdS52YWx1ZT1lfSksKCk9PmwudmFsdWUmJmM/RnIoYyxlKTp1LnZhbHVlJiZvP0dvKG8se2Vycm9yOnUudmFsdWV9KTpuJiYhZi52YWx1ZT9HbyhuKTp2b2lkIDB9fSl9LGUuZGVmaW5lQ29tcG9uZW50PUVyLGUuZ2V0Q3VycmVudEluc3RhbmNlPXZyLGUuZ2V0VHJhbnNpdGlvblJhd0NoaWxkcmVuPUtuLGUuaD0kcixlLmhhbmRsZUVycm9yPV90LGUuaHlkcmF0ZT0oLi4uZSk9PntVcygpLmh5ZHJhdGUoLi4uZSl9LGUuaW5pdEN1c3RvbUZvcm1hdHRlcj1mdW5jdGlvbigpe30sZS5pbmplY3Q9dHIsZS5pc1Byb3h5PXR0LGUuaXNSZWFjdGl2ZT1YZSxlLmlzUmVhZG9ubHk9ZXQsZS5pc1JlZj1ydCxlLmlzVk5vZGU9RG8sZS5tYXJrUmF3PWZ1bmN0aW9uKGUpe3JldHVybiBZKGUsIl9fdl9za2lwIiwhMCksZX0sZS5tZXJnZVByb3BzPVhvLGUubmV4dFRpY2s9UnQsZS5vbkFjdGl2YXRlZD1ZbixlLm9uQmVmb3JlTW91bnQ9U24sZS5vbkJlZm9yZVVubW91bnQ9VG4sZS5vbkJlZm9yZVVwZGF0ZT1rbixlLm9uRGVhY3RpdmF0ZWQ9Wm4sZS5vbkVycm9yQ2FwdHVyZWQ9JG4sZS5vbk1vdW50ZWQ9Q24sZS5vblJlbmRlclRyYWNrZWQ9Rm4sZS5vblJlbmRlclRyaWdnZXJlZD1FbixlLm9uVW5tb3VudGVkPU5uLGUub25VcGRhdGVkPXduLGUub3BlbkJsb2NrPUxvLGUucG9wU2NvcGVJZD1mbixlLnByb3ZpZGU9ZXIsZS5wcm94eVJlZnM9dXQsZS5wdXNoU2NvcGVJZD1wbixlLnF1ZXVlUG9zdEZsdXNoQ2I9THQsZS5yZWFjdGl2ZT1KZSxlLnJlYWRvbmx5PVplLGUucmVmPXN0LGUucmVnaXN0ZXJSdW50aW1lQ29tcGlsZXI9U3IsZS5yZW5kZXI9KC4uLmUpPT57VnMoKS5yZW5kZXIoLi4uZSl9LGUucmVuZGVyTGlzdD1mdW5jdGlvbihlLHQpe2xldCBuO2lmKE4oZSl8fE0oZSkpe249bmV3IEFycmF5KGUubGVuZ3RoKTtmb3IobGV0IG89MCxyPWUubGVuZ3RoO288cjtvKyspbltvXT10KGVbb10sbyl9ZWxzZSBpZigibnVtYmVyIj09dHlwZW9mIGUpe249bmV3IEFycmF5KGUpO2ZvcihsZXQgbz0wO288ZTtvKyspbltvXT10KG8rMSxvKX1lbHNlIGlmKFIoZSkpaWYoZVtTeW1ib2wuaXRlcmF0b3JdKW49QXJyYXkuZnJvbShlLHQpO2Vsc2V7Y29uc3Qgbz1PYmplY3Qua2V5cyhlKTtuPW5ldyBBcnJheShvLmxlbmd0aCk7Zm9yKGxldCByPTAscz1vLmxlbmd0aDtyPHM7cisrKXtjb25zdCBzPW9bcl07bltyXT10KGVbc10scyxyKX19ZWxzZSBuPVtdO3JldHVybiBufSxlLnJlbmRlclNsb3Q9ZnVuY3Rpb24oZSx0LG49e30sbyl7bGV0IHI9ZVt0XTtzbisrO2NvbnN0IHM9KExvKCksam8oTW8se2tleTpuLmtleX0scj9yKG4pOm8/bygpOltdLDE9PT1lLl8/NjQ6LTIpKTtyZXR1cm4gc24tLSxzfSxlLnJlc29sdmVDb21wb25lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuICRvKEVvLGUpfHxlfSxlLnJlc29sdmVEaXJlY3RpdmU9ZnVuY3Rpb24oZSl7cmV0dXJuICRvKCJkaXJlY3RpdmVzIixlKX0sZS5yZXNvbHZlRHluYW1pY0NvbXBvbmVudD1mdW5jdGlvbihlKXtyZXR1cm4gTShlKT8kbyhFbyxlLCExKXx8ZTplfHxGb30sZS5yZXNvbHZlVHJhbnNpdGlvbkhvb2tzPWpuLGUuc2V0QmxvY2tUcmFja2luZz1mdW5jdGlvbihlKXtVbys9ZX0sZS5zZXREZXZ0b29sc0hvb2s9ZnVuY3Rpb24odCl7ZS5kZXZ0b29scz10fSxlLnNldFRyYW5zaXRpb25Ib29rcz16bixlLnNoYWxsb3dSZWFjdGl2ZT1ZZSxlLnNoYWxsb3dSZWFkb25seT1mdW5jdGlvbihlKXtyZXR1cm4gUWUoZSwhMCxrZSxLZSl9LGUuc2hhbGxvd1JlZj1mdW5jdGlvbihlKXtyZXR1cm4gbHQoZSwhMCl9LGUuc3NyQ29udGV4dEtleT1BcixlLnNzclV0aWxzPW51bGwsZS50b0Rpc3BsYXlTdHJpbmc9ZT0+bnVsbD09ZT8iIjpSKGUpP0pTT04uc3RyaW5naWZ5KGUsbSwyKTpTdHJpbmcoZSksZS50b0hhbmRsZXJLZXk9RyxlLnRvSGFuZGxlcnM9ZnVuY3Rpb24oZSl7Y29uc3QgdD17fTtmb3IoY29uc3QgbiBpbiBlKXRbRyhuKV09ZVtuXTtyZXR1cm4gdH0sZS50b1Jhdz1udCxlLnRvUmVmPWR0LGUudG9SZWZzPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9TihlKT9uZXcgQXJyYXkoZS5sZW5ndGgpOnt9O2Zvcihjb25zdCBuIGluIGUpdFtuXT1kdChlLG4pO3JldHVybiB0fSxlLnRyYW5zZm9ybVZOb2RlQXJncz1mdW5jdGlvbihlKXt9LGUudHJpZ2dlclJlZj1mdW5jdGlvbihlKXtmZShudChlKSwic2V0IiwidmFsdWUiLHZvaWQgMCl9LGUudW5yZWY9Y3QsZS51c2VDc3NNb2R1bGU9ZnVuY3Rpb24oZT0iJHN0eWxlIil7cmV0dXJuIGd9LGUudXNlQ3NzVmFycz1mdW5jdGlvbihlLHQ9ITEpe2NvbnN0IG49dnIoKTtpZighbilyZXR1cm47Y29uc3Qgbz10JiZuLnR5cGUuX19zY29wZUlkP24udHlwZS5fX3Njb3BlSWQucmVwbGFjZSgvXmRhdGEtdi0vLCIiKSsiLSI6IiIscj0oKT0+WnIobi5zdWJUcmVlLGUobi5wcm94eSksbyk7Q24oKCk9PkFuKHIpKSx3bihyKX0sZS51c2VTU1JDb250ZXh0PSgpPT57fSxlLnVzZVRyYW5zaXRpb25TdGF0ZT1JbixlLnZNb2RlbENoZWNrYm94PVNzLGUudk1vZGVsRHluYW1pYz1GcyxlLnZNb2RlbFJhZGlvPWtzLGUudk1vZGVsU2VsZWN0PXdzLGUudk1vZGVsVGV4dD14cyxlLnZTaG93PVJzLGUudmVyc2lvbj1NcixlLndhcm49ZnVuY3Rpb24oZSwuLi50KXthZSgpO2NvbnN0IG49bXQubGVuZ3RoP210W210Lmxlbmd0aC0xXS5jb21wb25lbnQ6bnVsbCxvPW4mJm4uYXBwQ29udGV4dC5jb25maWcud2FybkhhbmRsZXIscj1mdW5jdGlvbigpe2xldCBlPW10W210Lmxlbmd0aC0xXTtpZighZSlyZXR1cm5bXTtjb25zdCB0PVtdO2Zvcig7ZTspe2NvbnN0IG49dFswXTtuJiZuLnZub2RlPT09ZT9uLnJlY3Vyc2VDb3VudCsrOnQucHVzaCh7dm5vZGU6ZSxyZWN1cnNlQ291bnQ6MH0pO2NvbnN0IG89ZS5jb21wb25lbnQmJmUuY29tcG9uZW50LnBhcmVudDtlPW8mJm8udm5vZGV9cmV0dXJuIHR9KCk7aWYobyl5dChvLG4sMTEsW2UrdC5qb2luKCIiKSxuJiZuLnByb3h5LHIubWFwKCh7dm5vZGU6ZX0pPT5gYXQgPCR7VHIobixlLnR5cGUpfT5gKS5qb2luKCJcbiIpLHJdKTtlbHNle2NvbnN0IG49WyJbVnVlIHdhcm5dOiAiK2UsLi4udF07ci5sZW5ndGgmJm4ucHVzaCgiXG4iLC4uLmZ1bmN0aW9uKGUpe2NvbnN0IHQ9W107cmV0dXJuIGUuZm9yRWFjaCgoZSxuKT0+e3QucHVzaCguLi4wPT09bj9bXTpbIlxuIl0sLi4uZnVuY3Rpb24oe3Zub2RlOmUscmVjdXJzZUNvdW50OnR9KXtjb25zdCBuPXQ+MD9gLi4uICgke3R9IHJlY3Vyc2l2ZSBjYWxscylgOiIiLG89IiBhdCA8IitUcihlLmNvbXBvbmVudCxlLnR5cGUsISFlLmNvbXBvbmVudCYmbnVsbD09ZS5jb21wb25lbnQucGFyZW50KSxyPSI+IituO3JldHVybiBlLnByb3BzP1tvLC4uLmd0KGUucHJvcHMpLHJdOltvK3JdfShlKSl9KSx0fShyKSksY29uc29sZS53YXJuKC4uLm4pfXVlKCl9LGUud2F0Y2g9T24sZS53YXRjaEVmZmVjdD1BbixlLndpdGhDdHg9Y24sZS53aXRoRGlyZWN0aXZlcz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PT1XdClyZXR1cm4gZTtjb25zdCBuPVd0LnByb3h5LG89ZS5kaXJzfHwoZS5kaXJzPVtdKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7bGV0W3IscyxpLGw9Z109dFtlXTtBKHIpJiYocj17bW91bnRlZDpyLHVwZGF0ZWQ6cn0pLG8ucHVzaCh7ZGlyOnIsaW5zdGFuY2U6bix2YWx1ZTpzLG9sZFZhbHVlOnZvaWQgMCxhcmc6aSxtb2RpZmllcnM6bH0pfXJldHVybiBlfSxlLndpdGhLZXlzPShlLHQpPT5uPT57aWYoISgia2V5ImluIG4pKXJldHVybjtjb25zdCBvPUsobi5rZXkpO3JldHVybiB0LnNvbWUoZT0+ZT09PW98fE9zW2VdPT09byk/ZShuKTp2b2lkIDB9LGUud2l0aE1vZGlmaWVycz0oZSx0KT0+KG4sLi4ubyk9Pntmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3Qgbz1Nc1t0W2VdXTtpZihvJiZvKG4sdCkpcmV0dXJufXJldHVybiBlKG4sLi4ubyl9LGUud2l0aFNjb3BlSWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHQ9PmNuKChmdW5jdGlvbigpe3BuKGUpO2NvbnN0IG49dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGZuKCksbn0pKX0sZX0oe30pOwo="}]},{"name":"YouTube Live CPU Tamer","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["https://www.youtube.com/live_chat*","https://www.youtube.com/live_chat_replay*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1605299308732,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/396532-youtube-live-cpu-tamer/code/YouTube%20Live%20CPU%20Tamer.user.js","uuid":"8f5b9881-5966-48d7-9856-653a306b29f4","source":""},{"name":"仓库用度盘投稿助手","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://pan.baidu.com/disk/home*","https://yun.baidu.com/disk/home*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1606422014727,"data":{}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/3285-%E4%BB%93%E5%BA%93%E7%94%A8%E5%BA%A6%E7%9B%98%E6%8A%95%E7%A8%BF%E5%8A%A9%E6%89%8B/code/%E4%BB%93%E5%BA%93%E7%94%A8%E5%BA%A6%E7%9B%98%E6%8A%95%E7%A8%BF%E5%8A%A9%E6%89%8B.user.js","uuid":"701e373c-5ddf-453a-b9e1-88e3af2608d9","source":""},{"name":"网盘自动填写访问码【威力加强版】","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["http://*","https://*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":["http*://*.pcs.baidu.com/*","http*://*.baidupcs.com/*","http*://*:8666/file/*","http*://*.baidu.com/file/*","http*://index.baidu.com/*","http*://*.gov/*","http*://*.gov.cn/*","http*://*.taobao.com/*","http*://*.tmall.com/*","http*://*.alimama.com/*","http*://*.jd.com/*","http*://*.zol.com.cn/*","http*://*.ctrip.com/*","http*://*.evernote.com/*","http*://*.yinxiang.com/*","http*://mail.*","http*://ping.*","http*://inbox.google.com/*","/^https?://(localhost|10\\.|192\\.|127\\.)/","/https?://www.baidu.com/(?:s|baidu)\\?/","http*://www.zhihu.com/question/*/answers/created","https://caiyun.feixin.10086.cn/portal/index.jsp#myfile*"],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":true,"orig_connects":["agefans.tv"]}},"storage":{"ts":1606422077187,"data":{"CatPW_Manage":"o{\"StorageSave\":true,\"UpdataConfig\":{\"UpdataSave\":true,\"UpdataNotify\":true,\"UpdataPlugin\":true,\"UpdataVersion\":\"3.12.11\"},\"StorageExp\":365}","CatPW":"o{\"date\":\"2020/11/26\",\"sCode\":\"\",\"unPW\":\"\",\"Src\":\"\",\"surl\":\"\",\"Hash\":\"\",\"webSrc\":\"\",\"webTitle\":\"\"}"}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/29762-%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E8%AE%BF%E9%97%AE%E7%A0%81-%E5%A8%81%E5%8A%9B%E5%8A%A0%E5%BC%BA%E7%89%88/code/%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E8%AE%BF%E9%97%AE%E7%A0%81%E3%80%90%E5%A8%81%E5%8A%9B%E5%8A%A0%E5%BC%BA%E7%89%88%E3%80%91.user.js","uuid":"5e2c0213-975f-4630-8a1d-4a7d2ecb2edc","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/2.1.4/jquery.min.js","ts":1607477177643,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"My%20jQuery%20Plugin.js","url":"https://greasyfork.org/scripts/35940-my-jquery-plugin/code/My%20jQuery%20Plugin.js?version=234478","ts":1607477178145,"mimetype":"text/javascript"},"source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIE15IGpRdWVyeSBQbHVnaW4KLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gKCQpIHsKICAkLmdldFVybFBhcmFtID0gZnVuY3Rpb24obmFtZSwgdXJsLCBvcHRpb24pIHsvL+etm+mAieWPguaVsO+8jHVybCDlj4LmlbDkuLrmlbDlrZfml7YKICAgIHVybD11cmwgPyB1cmwucmVwbGFjZSgvXi4rXD8vLCcnKSA6IGxvY2F0aW9uLnNlYXJjaDsKICAgIC8v572R5Z2A5Lyg6YCS55qE5Y+C5pWw5o+Q5Y+W77yM5aaC5p6c5Lyg5YWl5LqGdXJs5Y+C5pWw5YiZ5L2/55So5Lyg5YWl55qE5Y+C5pWw77yM5ZCm5YiZ5L2/55So5b2T5YmN6aG16Z2i55qE572R5Z2A5Y+C5pWwCiAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cCgiKD86XnwmKSgiICsgbmFtZSArICIpPShbXiZdKikoPzomfCQpIiwgImkiKTsJCS8v5q2j5YiZ562b6YCJ5Y+C5pWwCiAgICB2YXIgc3RyID0gdXJsLnJlcGxhY2UoL15cPy8sJycpLm1hdGNoKHJlZyk7CgogICAgaWYgKHN0ciAhPT0gbnVsbCkgewogICAgICBzd2l0Y2gob3B0aW9uKSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgcmV0dXJuIHVuZXNjYXBlKHN0clswXSk7CQkvL+aJgOetm+mAieeahOWujOaVtOWPguaVsOS4sgogICAgICAgIGNhc2UgMToKICAgICAgICAgIHJldHVybiB1bmVzY2FwZShzdHJbMV0pOwkJLy/miYDnrZvpgInnmoTlj4LmlbDlkI0KICAgICAgICBjYXNlIDI6CiAgICAgICAgICByZXR1cm4gdW5lc2NhcGUoc3RyWzJdKTsJCS8v5omA562b6YCJ55qE5Y+C5pWw5YC8CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiB1bmVzY2FwZShzdHJbMl0pOyAgICAgICAgLy/pu5jorqTov5Tlm57lj4LmlbDlgLwKICAgICAgfSAKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0KfSkoalF1ZXJ5KTsK"}]},{"name":"A2DH","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["https://*.bilibili.com/*","https://*.zhihu.com/*","https://acg.rip/*","https://cloud.189.cn/*","https://ecchi.iwara.tv/videos/*","https://konachan.com/post*","https://konachan.net/post*","https://liuli.buzz/*","https://morian.icu/*","https://music.163.com/*","https://nyaa.fun/*","https://nyaa.net/*","https://nyaa.si/*","https://pan.baidu.com/*","https://piratebay.live/*","https://share.acgnx.se/*","https://sukebei.nyaa.net/*","https://sukebei.nyaa.si/*","https://wallhaven.cc/*","https://www.dlsite.com/home/*","https://www.pianku.tv/*","https://www.youtube.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":["baidu.com","baidupcs.com","bilibili.com","8.210.6.30","212.64.37.212","127.0.0.1","localhost","self"]}},"storage":{"ts":1606765528162,"data":{"bduid":"s1020083327","docbili":"n1607485506","aria2.baidu.com":"s{\"token\":\"\",\"jsonrpc\":\"http://127.0.0.1:16800/jsonrpc\",\"dir\":\"\",\"version\":1}"}},"enabled":true,"position":6,"file_url":"https://gitee.com/zyxubing/codes/heq3slzy8dm1b7iprwvj633/raw?blob_name=A2DH","uuid":"2a7d5656-e05b-428b-bdc0-9b4f58ae85d8","source":"","requires":[{"meta":{"name":"qrcode.min.js","url":"https://cdn.staticfile.org/qrcode-generator/1.0.0/qrcode.min.js","ts":1606765502600,"mimetype":"text/javascript"},"source":""}]}]}